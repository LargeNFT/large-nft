<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage

    const link = (href) => {
        return `${baseURL + href}`
    }   

    let logo = link(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`)

    const absoluteLink = (href) => {
      return `${hostname + baseURL + href}`
    }   


%>

<!DOCTYPE html>
<html>

  <head>
    <style>
      html {
        visibility: hidden;
        opacity: 0;
      }
    </style>

    <!-- Required meta tags-->
    <meta charset="utf-8">
    <meta name="viewport"
      content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui, viewport-fit=cover">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- Color theme for statusbar -->
    <title>
      <%= it.title %>
    </title>

    <meta property="og:title" content="Search '<%=channelViewModel.channel.title%>'" />
    <meta property="og:type" content="" />
    <meta property="og:url" content="<%= link(`search.html`) %>" />
    <meta property="og:image" content="<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>" />
    <meta property="og:description" content="Search '<%=channelViewModel.channel.title%>' NFTs" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="<%= link(`search.html`) %>" />
    <meta property="twitter:title" content="Search '<%=channelViewModel.channel.title%>'" />
    <meta property="twitter:description" content="Search '<%=channelViewModel.channel.title%>' NFTs" />
    <meta property="twitter:image" content="<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>" />

    <%~ it.baseViewModel.headContents %>

    
  </head>

  <body>

    <div id="app">

      <div class="view view-main">

        <div class="page" data-name="mint">

          <nav-bar
              logo="<%=logo%>"
              title="Search"
              show_mint_page="<%=showMintPage%>"
              show_activity_page="<%=showActivityPage%>"

          >
          </nav-bar>

          <div class="page-content">

            <div class="row">

              <div class="col-100 large-66 center">

                <search-list></search-list>

              </div>

            </div>

          </div>

        </div>

      </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>
    
    <script type="module" id="page-init-scripts">

      const init = (props, { $, $f7, $h, $on, $update }) => {   

        let itemWebService = globalThis.container.get("ItemWebService")
        let baseURI = globalThis.container.get("baseURI")

        let searching = false


        let results = []


        $on('pageInit', async () => {
          console.log('init')
          // const params = new Proxy(new URLSearchParams(window.location.search), {
          //   get: (searchParams, prop) => searchParams.get(prop),
          // })

          // $f7.preloader.showIn('.cards-list')
          
          // searching = true
          // $update()

          // results = await itemWebService.query(params.query)

          // searching = false
          // $update()

          // $f7.preloader.hideIn('.cards-list')

        })

        $on('pageBeforeOut', async () => {
        })

        const searchbarSubmit = (e) => {
          e.preventDefault()
        }


        document.querySelector('meta[property="og:title"]').setAttribute("content", "Search '<%=channelViewModel.channel.title%>'")
        document.querySelector('meta[property="og:url"]').setAttribute("content", "<%= link(`search.html`) %>")
        document.querySelector('meta[property="og:image"]').setAttribute("content", "<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>")
        document.querySelector('meta[property="og:description"]').setAttribute("content", "Search '<%=channelViewModel.channel.title%>' NFTs")

        document.querySelector('meta[property="twitter:url"]').setAttribute("content", "<%= link(`search.html`) %>")
        document.querySelector('meta[property="twitter:title"]').setAttribute("content", "Search '<%=channelViewModel.channel.title%>'")
        document.querySelector('meta[property="twitter:image"]').setAttribute("content", "<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>")
        document.querySelector('meta[property="twitter:description"]').setAttribute("content", "Search '<%=channelViewModel.channel.title%>' NFTs" )

        document.querySelector('title').innerHTML = "Search '<%=channelViewModel.channel.title%>' NFTs."

        $f7.preloader.hide()
    

        return $render


      }


    </script>

    <script type="module" id="page-scripts">

      let baseURL = '<%= baseURL %>'
      let hostname = '<%= hostname %>'
      let channelId = '<%= channelId %>'
      let version = atob('<%= base64Version %>').replace('"', '').replace('"', '')

      let routablePages = JSON.parse(`<%~ JSON.stringify(routablePages) %>`)

      let app = reader.initReader(baseURL, hostname, version, routablePages, channelId )


    </script>

  </body>

</html>