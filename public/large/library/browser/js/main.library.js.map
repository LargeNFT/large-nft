{"version":3,"file":"large/library/browser/js/main.library.js","mappings":";;;;;;;;;;;;;AAAA;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,UAAU;AACV;AACA,sCAAsC,IAAI,IAAI,qBAAqB;AACnE,sDAAsD,gBAAgB,aAAa,IAAI;AACvF;AACA;;AAEA;AACA;AACA;AACA,6EAA6E,oCAAoC;;AAEjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;AACA,+DAA+D,aAAa;AAC5E;AACA,4CAA4C,aAAa,aAAa,gBAAgB;AACtF;AACA,gCAAgC;AAChC,kCAAkC;AAClC,mDAAmD,QAAQ,aAAa,SAAS,GAAG,QAAQ;AAC5F;AACA,mDAAmD,QAAQ,IAAI,SAAS,GAAG,QAAQ;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;AAKA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;ACzJlC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,MAAM;;AAEN,QAAQ;AACR,kBAAkB,cAAc,WAAW,YAAY;AACvD;AACA,sBAAsB,YAAY;AAClC;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;ACnDlC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA,+BAA+B,QAAQ;;AAEvC;AACA,uBAAuB,UAAU,aAAa,GAAG;AACjD,0BAA0B,6BAA6B,0DAA0D,GAAG,iFAAiF,GAAG,SAAS,aAAa;AAC9N;AACA;;AAEA;AACA,uBAAuB,UAAU,aAAa,GAAG,sBAAsB,mDAAmD;AAC1H,cAAc,sDAAsD,OAAO,0DAA0D;AACrI,gCAAgC,8BAA8B;AAC9D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;AC1DlC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB,+BAA+B,QAAQ,aAAa,MAAM,IAAI,UAAU;AACxE;AACA,+BAA+B,QAAQ,aAAa,MAAM,IAAI,sDAAsD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,0CAA0C,0GAA0G;AACpJ,6CAA6C,8GAA8G;AAC3J;AACA;AACA;AACA,0CAA0C,4GAA4G;AACtJ,6CAA6C,gHAAgH;AAC7J;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;ACzElC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,2CAA2C,8BAA8B,KAAK;AAC9E;AACA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;AC1DlC;AACkC;AAClC;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,wCAAwC;;AAEtD;AACA,uBAAuB,QAAQ,IAAI,cAAc;AACjD,0BAA0B,4CAA4C,4BAA4B,wCAAwC;AAC1I;AACA;;AAEA;;AAEA,uBAAuB,QAAQ,IAAI,cAAc;AACjD,gBAAgB;AAChB;;AAEA;AACA;AACA,cAAc;AACd,iDAAiD,gBAAgB;AACjE;;AAEA,gBAAgB;AAChB,mDAAmD,gBAAgB,iDAAiD,uFAAuF,EAAE;;AAE7M;AACA,mDAAmD,gBAAgB,qCAAqC,YAAY;AACpH;AACA;AACA;;AAEA,8BAA8B,8CAA8C;AAC5E;;AAEA;AACA;AACA,sCAAsC,2EAA2E,EAAE,kEAAkE;AACrL,cAAc;AACd;AACA,2CAA2C,8GAA8G;AACzJ;;AAEA;AACA;AACA,uBAAuB,QAAQ,aAAa,kBAAkB,WAAW,uDAAuD;AAChI,oBAAoB;AACpB;;AAEA,uBAAuB,QAAQ,aAAa,gBAAgB,WAAW,qDAAqD;AAC5H,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,gCAAgC;;AAEnD;AACA,uBAAuB,QAAQ,IAAI,cAAc;AACjD,0BAA0B,4CAA4C,4BAA4B,uCAAuC;AACzI;AACA;;AAEA;;AAEA,uBAAuB,QAAQ,IAAI,cAAc;AACjD,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA,+CAA+C,gBAAgB,qCAAqC,YAAY;AAChH;AACA,8BAA8B,8CAA8C;AAC5E;;AAEA;AACA;AACA,0BAA0B,SAAS;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gCAAgC;;AAErD;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,gBAAgB,qCAAqC,YAAY;;AAEjH,+BAA+B,8CAA8C;AAC7E;;AAEA;AACA;AACA,uBAAuB,QAAQ,aAAa,sBAAsB,WAAW,2DAA2D,IAAI,yCAAyC;AACrL;AACA,uBAAuB,QAAQ,aAAa,yBAAyB,WAAW,+DAA+D,IAAI,4CAA4C;AAC/L;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,cAAc;AACd;AACA,gBAAgB;AAChB,mBAAmB,UAAU,cAAc,yBAAyB,QAAQ,gBAAgB,WAAW,SAAS,uBAAuB,mBAAmB,SAAS,MAAM;AACzK;AACA;AACA,gBAAgB;AAChB,mBAAmB,UAAU,cAAc,yBAAyB,QAAQ,gBAAgB,WAAW,SAAS,uBAAuB,mBAAmB,SAAS,MAAM;AACzK;AACA;AACA,gBAAgB;AAChB,mBAAmB,gBAAgB,cAAc,yBAAyB,QAAQ,gBAAgB,WAAW,SAAS,SAAS,MAAM;AACrI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;AChQlC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,UAAU;AACV;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,2CAA2C,cAAc,2BAA2B,QAAQ;AAC5F,gDAAgD,6BAA6B,6BAA6B,GAAG,GAAG,mDAAmD;AACnK;AACA;;AAEA;AACA,6CAA6C,gEAAgE,GAAG,2BAA2B;AAC3I;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;AC5DlC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,eAAe;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,MAAM;;AAEN,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,+CAA+C,8BAA8B,KAAK;AAClF;AACA;;AAEA;AACA;AACA;AACA;AACA,+DAA+D,aAAa;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4BAA4B;AACzF;AACA;AACA,6DAA6D;AAC7D;AACA;AACA,0DAA0D,OAAO;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA,0DAA0D,gBAAgB,YAAY,oBAAoB;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,8BAA8B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;AChSlC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,gBAAgB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,aAAa;AACb;AACA,cAAc;AACd;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc,2BAA2B,QAAQ;AACpG,gCAAgC;AAChC,qEAAqE,2BAA2B;AAChG;AACA;AACA,0CAA0C,2BAA2B;AACrE;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,mDAAmD,cAAc,2BAA2B,QAAQ;AACpG,6DAA6D,6BAA6B,GAAG,mDAAmD;AAChJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,UAAU,2BAA2B,GAAG;AAC3F,8BAA8B,0BAA0B,uCAAuC,2BAA2B;AAC1H;AACA;AACA,4DAA4D,+BAA+B;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;ACvJlC;AACkC;AAClC;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,+CAA+C,sBAAsB,WAAW,EAAE,UAAU,GAAG;AACxH,MAAM;AACN,gBAAgB,UAAU,oDAAoD,sBAAsB,WAAW,EAAE,UAAU,GAAG;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iDAAiD;AACxE;AACA;AACA;AACA;AACA;AACA,+BAA+B,MAAM;AACrC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,mFAAmF,kCAAkC;AACrH;AACA,qGAAqG,cAAc;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,2CAA2C,UAAU;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,cAAc;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,cAAc;AACzC;AACA;AACA;AACA,iCAAiC,8CAA8C,UAAU,UAAU;AACnG;AACA;AACA;AACA,kBAAkB;AAClB,mCAAmC,+CAA+C,UAAU,UAAU;AACtG;AACA;AACA;AACA,mCAAmC,kDAAkD,UAAU,UAAU;AACzG;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA,oBAAoB;AACpB,qCAAqC,2CAA2C,UAAU,UAAU;AACpG;AACA;AACA;AACA;AACA,oBAAoB;AACpB,iCAAiC,UAAU,aAAa,cAAc,kBAAkB,kCAAkC;AAC1H;AACA,gDAAgD,cAAc;AAC9D;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,wBAAwB;AACxB,mCAAmC,OAAO;AAC1C,4BAA4B;AAC5B;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;AC1SlC;AACkC;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qBAAqB;AACtD;AACA,sCAAsC;AACtC;AACA,kBAAkB;AAClB,+BAA+B,UAAU,YAAY,GAAG;AACxD,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU;AACzC;AACA,iCAAiC,QAAQ;AACzC,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD,+BAA+B,QAAQ,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,mBAAmB;;;;;;;;;;;;;;AClIlC;AACkC;AAClC;AACA;AACA;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","sources":["webpack://library/./src/reader/components/reader/channel/attribute-filter.f7.html","webpack://library/./src/reader/components/reader/channel/explore-total-info.f7.html","webpack://library/./src/reader/components/reader/channel/largest-sales.f7.html","webpack://library/./src/reader/components/reader/channel/leaderboard-rows.f7.html","webpack://library/./src/reader/components/reader/channel/mint-info.f7.html","webpack://library/./src/reader/components/reader/channel/transaction-row.f7.html","webpack://library/./src/reader/components/reader/item/infinite-scroll-content.f7.html","webpack://library/./src/reader/components/reader/item/mint-list.f7.html","webpack://library/./src/reader/components/reader/item/search-list.f7.html","webpack://library/./src/reader/components/reader/navbar.f7.html","webpack://library/./src/reader/components/reader/token-toolbar.f7.html","webpack://library/./src/reader/components/reader/transaction.f7.html","webpack://library/./src/library/html/css/app.css?bf77","webpack://library/./src/reader/html/css/app.css?d5df","webpack://library/./src/library/index.ts","webpack://library/./src/library/repository/web/home-repository-impl.ts","webpack://library/./src/library/service/web/home-web-service.ts","webpack://library/./src/reader/dto/animation.ts","webpack://library/./src/reader/dto/attribute-total.ts","webpack://library/./src/reader/dto/author.ts","webpack://library/./src/reader/dto/component-state.ts","webpack://library/./src/reader/dto/image.ts","webpack://library/./src/reader/dto/item.ts","webpack://library/./src/reader/dto/nft-metadata.ts","webpack://library/./src/reader/dto/reader-settings.ts","webpack://library/./src/reader/dto/static-page.ts","webpack://library/./src/reader/dto/token-owner.ts","webpack://library/./src/reader/dto/token.ts","webpack://library/./src/reader/inversify.config.ts","webpack://library/./src/reader/repository/browser/animation-repository-impl.ts","webpack://library/./src/reader/repository/browser/attribute-total-repository-impl.ts","webpack://library/./src/reader/repository/browser/author-repository-impl.ts","webpack://library/./src/reader/repository/browser/channel-repository-impl.ts","webpack://library/./src/reader/repository/browser/component-state-repository-impl.ts","webpack://library/./src/reader/repository/browser/image-repository-impl.ts","webpack://library/./src/reader/repository/browser/item-page-repository-impl.ts","webpack://library/./src/reader/repository/browser/item-repository-impl.ts","webpack://library/./src/reader/repository/browser/metadata-repository-impl.ts","webpack://library/./src/reader/repository/browser/processed-transaction-repository-impl.ts","webpack://library/./src/reader/repository/browser/reader-settings-repository-impl.ts","webpack://library/./src/reader/repository/browser/row-item-view-model-repository-impl.ts","webpack://library/./src/reader/repository/browser/static-page-repository-impl.ts","webpack://library/./src/reader/repository/browser/token-owner-page-repository-impl.ts","webpack://library/./src/reader/repository/browser/token-owner-repository-impl.ts","webpack://library/./src/reader/repository/browser/token-repository-impl.ts","webpack://library/./src/reader/repository/item-repository.ts","webpack://library/./src/reader/repository/token-owner-repository.ts","webpack://library/./src/reader/service/animation-service.ts","webpack://library/./src/reader/service/attribute-total-service.ts","webpack://library/./src/reader/service/author-service.ts","webpack://library/./src/reader/service/channel-service.ts","webpack://library/./src/reader/service/core/component-state-service.ts","webpack://library/./src/reader/service/core/database-service.ts","webpack://library/./src/reader/service/core/paging-service.ts","webpack://library/./src/reader/service/core/queue-service.ts","webpack://library/./src/reader/service/core/quill-service.ts","webpack://library/./src/reader/service/core/routing-service.ts","webpack://library/./src/reader/service/core/schema-service.ts","webpack://library/./src/reader/service/core/ui-service.ts","webpack://library/./src/reader/service/core/wallet-service-impl.ts","webpack://library/./src/reader/service/erc-event-service.ts","webpack://library/./src/reader/service/image-service.ts","webpack://library/./src/reader/service/item-page-service.ts","webpack://library/./src/reader/service/item-service.ts","webpack://library/./src/reader/service/processed-transaction-service.ts","webpack://library/./src/reader/service/reader-settings-service.ts","webpack://library/./src/reader/service/static-page-service.ts","webpack://library/./src/reader/service/token-contract-service.ts","webpack://library/./src/reader/service/token-owner-page-service.ts","webpack://library/./src/reader/service/token-owner-service.ts","webpack://library/./src/reader/service/token-service.ts","webpack://library/./src/reader/service/web/author-web-service.ts","webpack://library/./src/reader/service/web/channel-web-service.ts","webpack://library/./src/reader/service/web/item-web-service.ts","webpack://library/./src/reader/service/web/mint-web-service.ts","webpack://library/./src/reader/service/web/transaction-web-service.ts","webpack://library/./src/reader/util/validation-exception.ts","webpack://library/./src/sync/dto/erc-event.ts","webpack://library/ignored|/home/ptoner/repos/large-nft/node_modules/@noble/secp256k1/lib/esm|crypto","webpack://library/ignored|/home/ptoner/repos/large-nft/node_modules/immediate/lib|./nextTick"],"sourcesContent":["/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nlet attributeOptions;\nlet filters = [];\nlet attributeParams = {};\nlet handlerBody;\nlet handler = async e => {\n  return handlerBody(e);\n};\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  filters = [];\n  attributeParams = {};\n  handlerBody = async e => {\n    attributeOptions = e.attributeOptions;\n    if (e.attributeParams) {\n      attributeParams = e.attributeParams;\n      $('#attribute-accordian-item').addClass('accordion-item-opened');\n    }\n    await $update();\n  };\n  document.removeEventListener('attribute-options-loaded', handler);\n  document.addEventListener('attribute-options-loaded', handler);\n  const attributeChange = e => {\n    attributeParams[e.currentTarget.name] = e.currentTarget.value;\n    if (e.currentTarget.value) {\n      attributeParams[e.currentTarget.name] = e.currentTarget.value;\n    } else {\n      delete attributeParams[e.currentTarget.name];\n    }\n\n    //Dispatch event so we can refresh list\n    let ev = new CustomEvent('explore-attribute-filter-changed');\n    ev.attributeParams = attributeParams;\n    document.dispatchEvent(ev);\n  };\n  const deleteChipClick = async e => {\n    let attributeId = $(e.currentTarget).data('id');\n    delete attributeParams[attributeId];\n    await $update();\n\n    //Dispatch event so we can refresh list\n    let ev = new CustomEvent('explore-attribute-filter-changed');\n    ev.attributeParams = attributeParams;\n    document.dispatchEvent(ev);\n  };\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\n\n  <div>\n\n    <div class=\"block block-strong row\">\n      \n      <div class=\"col-50\">\n\n        ${Object.keys(attributeParams).map(key => $h`\n          <div class=\"chip\">\n            <div class=\"chip-label\">${key}: ${attributeParams[key]}</div>\n            <a href=\"#\" class=\"chip-delete\" @click=\"${deleteChipClick}\" data-id=\"${key}\"></a>\n          </div>\n        `)}\n\n      </div>\n      <div class=\"col-50 filter-button\">\n        \n        <a href=\"#\" data-popup=\".filter-popup\" class=\"popup-open\">Filters (${Object.keys(attributeParams).length})</a>\n\n        <div class=\"popup filter-popup\">\n          <div class=\"view\">\n            <div class=\"page\">\n              <div class=\"navbar\">\n                <div class=\"navbar-bg\"></div>\n                <div class=\"navbar-inner\">\n                  <div class=\"title\">Filters</div>\n                  <div class=\"right\">\n                    <!-- Link to close popup -->\n                    <a class=\"link popup-close\">Close</a>\n                  </div>\n                </div>\n              </div>\n              <div class=\"page-content\">\n\n                <div class=\"list\">\n                  <ul>\n                    ${attributeOptions?.map( ao => $h`\n                      <li class=\"item-content item-input\">\n                        <div class=\"item-inner\">\n                          <div class=\"item-title item-label\">${ao.traitType}</div>\n                          <div class=\"item-input-wrap input-dropdown-wrap\">\n                            <select name=\"${ao.traitType}\" @change=\"${attributeChange}\">\n                              <option selected ></option>\n                              ${ao.values?.map( v => $h`\n                                ${v.value == attributeParams[ao.traitType] ? $h`\n                                  <option value=\"${v.value}\" selected>${v.value} (${v.count})</option>\n                                ` : $h`\n                                  <option value=\"${v.value}\">${v.value} (${v.count})</option>\n                                `} \n                              `)}\n                            </select>\n                          </div>\n                        </div>\n                      </li>\n                    `)}\n                  </ul>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n    </div>\n\n\n\n\n  </div>\n\n\n\n\n\n\n`\n    }\n    ;\n}\nframework7Component.id = '9b0d9b80d4';\nframework7Component.style = `\n\n.item-content.attribute-select {\n  width: 175px;\n  display: inline-block;\n}\n\n\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let totalItems;\n  let totalMatches;\n  document.addEventListener('explore-total-info-changed', async e => {\n    totalItems = e.totalItems;\n    totalMatches = e.totalMatches;\n    await $update();\n  });\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\n\n  <div class=\"block-title block-title-small\">\n\n    ${totalMatches ? $h`\n\n      ${totalMatches != totalItems ? $h`\n        Showing ${totalMatches} results (${totalItems} total)\n      ` : $h`\n        Showing 1 - ${totalItems} results  \n      `}\n\n    ` : $h`<span/>`}\n\n  </div>\n\n`\n    }\n    ;\n}\nframework7Component.id = 'd4763f5bd7';\nframework7Component.style = `\n\n\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let walletService = globalThis.container.get(\"WalletService\");\n  let mintWebService = globalThis.container.get(\"MintWebService\");\n  let transactionWebService = globalThis.container.get(\"TransactionWebService\");\n  let baseURI = globalThis.container.get(\"baseURI\")();\n  const link = href => {\n    return baseURI + href;\n  };\n  let largestSales = props.largest_sales;\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\n\n    <div class=\"block block-strong inset largest-sales\">\n                    \n      ${largestSales?.sales?.map( (sale, index) => $h`\n        <div class=\"margin-bottom\">\n\n          <div class=\"rank\">#${index+1}</div>\n\n          <div class=\"square\">\n            <a href=\"${link(`t/${sale.tokenId}`)}\" class=\"item-link\">\n              <img src=\"${link(`backup/export/images/${largestSales.rowItemViewModels[sale.tokenId].coverImageId}.${largestSales.rowItemViewModels[sale.tokenId].coverImageGenerated ? 'svg' : 'jpg'}`)}\" alt=\"${sale.tokenId}\" height=\"125\" width=\"125\"/>\n            </a>\n          </div>\n\n          <div class=\"sale-info margin-top\">\n            <a href=\"${link(`t/${sale.tokenId}`)}\" class=\"item-link\">${largestSales.rowItemViewModels[sale.tokenId].title}</a><br />\n            ${new Intl.NumberFormat('en-US').format(sale.ethValue)} ETH (${transactionWebService.abbreviateDollars(sale.usdValue, 2)})\n            <div class=\"date\">${dayjs(sale.date).format('LL')}</div>\n          </div>\n\n        </div>\n      `)}\n      </div>\n\n  \n`\n    }\n    ;\n}\nframework7Component.id = 'b9838ea374';\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let transactionWebService = globalThis.container.get(\"TransactionWebService\");\n  let walletService = globalThis.container.get(\"WalletService\");\n  let baseURI = globalThis.container.get(\"baseURI\")();\n  let tokenOwners = props.token_owners;\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\r\n  \r\n  <tbody>\r\n                                    \r\n    ${tokenOwners?.map(u => $h`\r\n        <tr>\r\n            <td class=\"label-cell\">\r\n                ${u.rank}\r\n            </td>\r\n\r\n            <td class=\"address-cell\">\r\n\r\n                ${u.ensName ? $h`\r\n                    <a href=\"${baseURI}u/?address=${u._id}\">${u.ensName}</a>\r\n                ` : $h`\r\n                    <a href=\"${baseURI}u/?address=${u._id}\">${u._id ? walletService.truncateEthAddress(u._id) : ' '}</a>\r\n                `} \r\n\r\n            </td>\r\n\r\n\r\n            <td class=\"numeric-cell\">\r\n                ${u.count}\r\n            </td>\r\n\r\n            <td class=\"numeric-cell\">\r\n                <span class=\"eth-value\">${new Intl.NumberFormat('en-US').format(u.salesReport?.buys?.ethValue ? u.salesReport?.buys?.ethValue : 0)} ETH</span> <br />\r\n                <span class=\"dollar-value\">${transactionWebService.abbreviateDollars(u.salesReport?.buys?.usdValue ? u.salesReport?.buys?.usdValue : 0, 2)}</span>\r\n            </td>\r\n\r\n            <td class=\"numeric-cell\">\r\n                <span class=\"eth-value\">${new Intl.NumberFormat('en-US').format(u.salesReport?.sales?.ethValue ? u.salesReport?.sales?.ethValue : 0)} ETH</span> <br />\r\n                <span class=\"dollar-value\">${transactionWebService.abbreviateDollars(u.salesReport?.sales?.usdValue ? u.salesReport?.sales?.usdValue : 0, 2)}</span>\r\n            </td>\r\n\r\n            <td class=\"text-cell\">\r\n                ${u.lastActive ? dayjs(u.lastActive).fromNow() : \"\"}\r\n            </td>\r\n\r\n\r\n        </tr>\r\n    \r\n    `)}\r\n    </tbody>\r\n\r\n`\n    }\n    ;\n}\nframework7Component.id = 'b916457362';\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let hasProvider = false;\n  let mintingViewModel;\n  let baseURL = props.baseurl;\n  const link = href => {\n    return `${baseURL + href}`;\n  };\n  app.on('minting-view-model-updated', function (m) {\n    mintingViewModel = m;\n    $update();\n  });\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\r\n\r\n  <div class=\"card card-header-divider\">\r\n    <div class=\"card-header\">Mint NFTs</div>\r\n    <div class=\"card-content card-content-padding\">\r\n\r\n      ${mintingViewModel ? $h`\r\n        <p>\r\n          <strong>Total Minted:</strong> ${mintingViewModel.totalMinted} of ${mintingViewModel.totalSupply}\r\n        </p>\r\n\r\n        <a href=\"${link('mint.html')}\" class=\"link\">Mint NFTs</a>\r\n\r\n      ` : $h`\r\n        Minting information unavailable. \r\n        <p>Note: Use a web browser with wallet support to see NFT information.</p>\r\n      `}\r\n\r\n\r\n    </div>\r\n  </div>\r\n\r\n`\n    }\n    ;\n}\nframework7Component.id = '97726ae101';\nframework7Component.style = `\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\n// create local component\nconst Transfer = (props, {\n  $h\n}) => {\n  let walletService = globalThis.container.get(\"WalletService\");\n  let transactionWebService = globalThis.container.get(\"TransactionWebService\");\n  const link = href => {\n    return `${baseURI + href}`;\n  };\n  const imageLink = rowItemViewModel => {\n    if (!rowItemViewModel) return;\n    if (rowItemViewModel?.coverImageGenerated) {\n      return link('backup/export/images/' + rowItemViewModel.coverImageId + \".svg\");\n    }\n    return link('backup/generated/images/50x50/' + rowItemViewModel.coverImageId + \".webp\");\n  };\n  let transaction = props.transaction;\n  let event = props.event;\n  let baseURI = props.base_uri;\n  let rowItemViewModels = props.row_item_view_models;\n  let index = props.index;\n  return () => $h`\n    \n        <tr ${index % 2 == 0 ? 'class=\"alt-row\"' : ''}>\n\n          <td class=\"image\">\n            <a href=\"${baseURI}t/${event.tokenId}\">\n              <img src=\"${imageLink(rowItemViewModels[event.tokenId])}\" class=\"latest-img\" alt=\"${rowItemViewModels[event.tokenId]?.title}\" height=\"50\" width=\"50\" /> \n            </a>\n          </td>\n\n          <td class=\"label-cell medium-only\">\n\n            <a href=\"${baseURI}t/${event.tokenId}\" class=\"title\">\n              ${rowItemViewModels[event.tokenId]?.title}            \n            </a>\n\n          </td>\n          <td>\n            ${event.isMint ? $h`\n              <a href=\"https://etherscan.io/tx/${transaction._id}\" class=\"external\" target=\"_blank\">Mint</a>\n            ` : $h`\n\n              ${transaction?.transactionValue?.markets && Object.keys(transaction?.transactionValue?.markets).length > 0 ? $h`\n                <a href=\"https://etherscan.io/tx/${transaction._id}\" class=\"external\" target=\"_blank\">Sold</a> on ${Array.from(Object.keys(transaction.transactionValue?.markets).map(k => k)).join(\", \")} ${transaction.transactionValue?.aggregator ? ' / ' + transaction.transactionValue.aggregator : ''}\n\n              ` : $h`\n                <a href=\"https://etherscan.io/tx/${transaction._id}\" class=\"external\" target=\"_blank\">${event.event}</a>\n              `}\n              \n            `}\n\n            <p class=\"date\">${dayjs(transaction.timestamp * 1000).fromNow()}</p>\n          </td>\n\n          <td class=\"numeric-cell\">\n            \n            <span class=\"eth-value\">${transaction.transactionValue?.tokenPrice[event.tokenId]?.price.toFixed(5)} ${transaction.transactionValue?.tokenPrice[event.tokenId]?.currency}</span>\n            ${transaction.transactionValue?.tokenPrice[event.tokenId]?.usdValue ? $h`\n              <br />\n              <span class=\"dollar-value\">${transactionWebService.abbreviateDollars(transaction.transactionValue?.tokenPrice[event.tokenId]?.usdValue, 2)}</span>\n            ` : $h` `}\n\n           </td>\n          <td class=\"numeric-cell medium-only\">\n            <a href=\"${baseURI}u/?address=${event.fromAddress}\" class=\"${event.fromAddress == transaction.from ? 'is-from' : ''}\">\n                  ${getDisplayAddress(event.fromAddress)}\n            </a> <span class=\"f7-icons\">arrow_right</span>\n\n            <a href=\"${baseURI}u/?address=${event.toAddress}\" class=\"${event.toAddress == transaction.from ? 'is-from' : ''}\">\n              ${getDisplayAddress(event.toAddress)}\n            </a>\n\n          </td>\n        </tr>\n    `;\n};\nconst Approval = (props, {\n  $h\n}) => {\n  let walletService = globalThis.container.get(\"WalletService\");\n  let transactionWebService = globalThis.container.get(\"TransactionWebService\");\n  const link = href => {\n    return `${baseURI + href}`;\n  };\n  const imageLink = rowItemViewModel => {\n    if (rowItemViewModel.coverImageGenerated) {\n      return link('backup/export/images/' + rowItemViewModel.coverImageId + \".svg\");\n    }\n    return link('backup/generated/images/50x50/' + rowItemViewModel.coverImageId + \".webp\");\n  };\n  let transaction = props.transaction;\n  let event = props.event;\n  let baseURI = props.base_uri;\n  let rowItemViewModels = props.row_item_view_models;\n  let index = props.index;\n  let owner = event?.namedArgs?.owner;\n  let approved = event?.namedArgs?.approved;\n  let from = transaction?.from;\n  return () => $h`\n      <tr class=\"${index % 2 == 0 ? \"alt-row\" : ''}\">\n\n          <td class=\"image\">\n            <a href=\"${baseURI}t/${event.tokenId}\">\n              <img src=\"${imageLink(rowItemViewModels[event.tokenId])}\" class=\"latest-img\" alt=\"${rowItemViewModels[event.tokenId].title}\" height=\"40\" width=\"40\" /> \n            </a>\n          </td>\n\n          <td class=\"label-cell medium-only\">\n\n            <a href=\"${baseURI}t/${event.tokenId}\" class=\"title\">\n              ${rowItemViewModels[event.tokenId].title}            \n            </a>\n\n            \n          </td>\n          <td>\n            <a href=\"https://etherscan.io/tx/${transaction._id}\" class=\"external\" target=\"_blank\">${event.event}</a> <br />\n            \n            <p class=\"date\">${dayjs(transaction.timestamp * 1000).fromNow()}</p>\n          </td>\n\n          <td class=\"numeric-cell\"></td>\n          <td class=\"medium-only numeric-cell\">\n            <a href=\"#\">${approved}</a>\n          </td>\n        </tr>\n    `;\n};\nconst ApprovalForAll = (props, {\n  $h\n}) => {\n  let walletService = globalThis.container.get(\"WalletService\");\n  let transactionWebService = globalThis.container.get(\"TransactionWebService\");\n  let transaction = props.transaction;\n  let event = props.event;\n  let baseURI = props.base_uri;\n  let index = props.index;\n  return () => $h`\n        <tr class=\"${index % 2 == 0 ? \"alt-row\" : ''}\">\n\n          <td class=\"image\">\n            ${event.namedArgs.approved ? $h`🟢` : $h`🔴`}\n          </td>\n\n          <td class=\"label-cell medium-only\">\n            \n          </td>\n          <td>\n             <a href=\"https://etherscan.io/tx/${transaction._id}\" class=\"external\" target=\"_blank\">${event.event}</a>  <br />\n\n             <p class=\"date\">${dayjs(transaction.timestamp * 1000).fromNow()}</p>\n          </td>\n\n          <td class=\"numeric-cell\"></td>\n          <td class=\"medium-only numeric-cell\">\n            <a href=\"${baseURI}u/?address=${event.namedArgs.owner}\" class=\"${event.namedArgs.owner == transaction.from ? 'is-from' : ''}\">${getDisplayAddress(event.namedArgs.owner)}</a> \n            <span class=\"f7-icons\">arrow_right</span>\n            <a href=\"${baseURI}u/?address=${event.namedArgs.operator}\" class=\"${event.namedArgs?.operator == transaction.from ? 'is-from' : ''}\">${getDisplayAddress(event.namedArgs.operator)}</a>\n          </td>\n\n        </tr>\n    `;\n};\nconst getDisplayAddress = address => {\n  let walletService = globalThis.container.get(\"WalletService\");\n  if (transactionsViewModel?.ens && transactionsViewModel.ens[address]) return transactionsViewModel.ens[address];\n  return walletService.truncateEthAddress(address);\n};\nlet transactionsViewModel;\nlet handlerBody;\nlet handler = async e => {\n  return handlerBody(e);\n};\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let walletService = globalThis.container.get(\"WalletService\");\n  let baseURI = globalThis.container.get(\"baseURI\")();\n  let moment = globalThis.moment;\n  transactionsViewModel = props.transactions;\n  let rowItemViewModels = props.items;\n  let tokenId = props.token;\n  handlerBody = async e => {\n    transactionsViewModel = e.transactionsViewModel;\n    await $update();\n  };\n\n  // handle event\n  document.removeEventListener('transactions-updated', handler);\n  document.addEventListener('transactions-updated', handler);\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\r\n  \r\n  <div class=\"card data-table\">\r\n\r\n    <div class=\"card-content\">\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th class=\"label-cell medium-only\" colspan=\"2\">Item</th>\r\n            <th>Event</th>\r\n            <th class=\"numeric-cell\">Price</th>\r\n            <th class=\"numeric-cell medium-only\">From/To</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${transactionsViewModel?.transactions.map( (transaction, index) => $h`\r\n  \r\n            ${transaction.events?.map(processedEvent => $h`\r\n  \r\n              ${processedEvent.event == \"Approval\" && (!tokenId || processedEvent?.tokenId == tokenId) ? $h`\r\n                <${Approval} transaction=${transaction.transaction} event=${processedEvent} base_uri=${baseURI} row_item_view_models=${rowItemViewModels} index=\"${index}\" />\r\n              ` : $h` `}\r\n          \r\n              ${processedEvent.event == \"Transfer\" && (!tokenId || processedEvent?.tokenId == tokenId) ? $h`\r\n                <${Transfer} transaction=${transaction.transaction} event=${processedEvent} base_uri=${baseURI} row_item_view_models=${rowItemViewModels} index=\"${index}\"/>\r\n              ` : $h` `}\r\n          \r\n              ${processedEvent.event == \"ApprovalForAll\" && (!tokenId || processedEvent?.tokenId == tokenId) ? $h`\r\n                <${ApprovalForAll} transaction=${transaction.transaction} event=${processedEvent} base_uri=${baseURI} index=\"${index}\"/>\r\n              ` : $h` `}\r\n          \r\n            `)}\r\n  \r\n  \r\n          `)}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n  </div>\r\n\r\n`\n    }\n    ;\n}\nframework7Component.id = 'e79ef7c6df';\nframework7Component.style = `\n\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let baseURL = props.baseurl;\n  let items = props.items;\n  const link = href => {\n    return `${baseURL + href}`;\n  };\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\n\n    <div class=\"row\" id=\"item-list\">\n                            \n        ${items?.length > 0 ? $h`\n                                    \n            ${items.map(itemViewModel => $h`\n                <div class=\"card col-100 large-25\">\n                    <div class=\"card-content\">\n                        <div class=\"card-content card-content-padding\">\n                            <div class=\"square\">\n                                <a href=\"${link(`token-${itemViewModel.item.tokenId}.html`)}\">\n                                    <img src=\"${link(`backup/export/images/${itemViewModel.coverImage._id}`)}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}\" />\n                                </a>\n                            </div>\n\n                            <div class=\"preview-info\">\n                                <a href=\"\">${itemViewModel.item.title ? itemViewModel.item.title + ' ' : ''} #${itemViewModel.item.tokenId}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            `)}\n\n\n        ` : $h`<span />`}             \n                                            \n    </div>  \n  \n`\n    }\n    ;\n}\nframework7Component.id = '9175163a5a';\nframework7Component.style = `\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let mintWebService = globalThis.container.get(\"MintWebService\");\n  let walletService = globalThis.container.get(\"WalletService\");\n  let queueService = globalThis.container.get(\"QueueService\");\n  let baseURI = globalThis.container.get(\"baseURI\")();\n  let mintingViewModel;\n  let total = 0;\n  let quantity = 1;\n  let mintPriceWei;\n  let exactTokensOnly = false;\n  let baseURL = props.baseurl;\n  const link = href => {\n    return `${baseURL + href}`;\n  };\n  const updateTotal = async () => {\n    total = await mintWebService.updateTotal(mintPriceWei, quantity);\n    await $update();\n  };\n  $on('stepper:change', async e => {\n    quantity = parseInt(e.detail);\n    await updateTotal();\n    selectPreviews(quantity);\n  });\n  const selectPreviews = amount => {\n    let selected = 0;\n    $('.flex-card').each(ele => {\n      //Remove selected from all\n      $(ele).removeClass('selected');\n      if (selected < amount) {\n        $(ele).addClass('selected');\n        selected++;\n        // console.log(ele)\n      }\n    });\n  };\n\n  const mintOnSubmit = async e => {\n    e.preventDefault();\n\n    //Make sure we are connected\n    await walletService.connect();\n    let mintFunction;\n    if (exactTokensOnly) {\n      let start = parseInt(mintingViewModel.totalMinted + 1);\n      mintFunction = mintWebService.mintFromStartOrFail(quantity, start);\n    } else {\n      mintFunction = mintWebService.mint(quantity);\n    }\n    let promiseView = {\n      title: `Minting token(s). Approve transaction and wait for it to be mined.`,\n      promise: mintFunction\n    };\n\n    //Wait for it to be mined\n    await queueService.queuePromiseView(promiseView);\n  };\n  const exactTokensOnChange = async e => {\n    exactTokensOnly = e.currentTarget.checked;\n    await $update();\n  };\n  $f7.preloader.show();\n  const populate = async () => {\n    await walletService.connect();\n    try {\n      mintingViewModel = await mintWebService.getMintingViewModel();\n      mintPriceWei = await mintWebService.parseUnits(mintingViewModel.mintPrice, 'ether');\n      await updateTotal();\n      let e = new CustomEvent('mint-view-model-loaded');\n      e.mintingViewModel = mintingViewModel;\n      document.dispatchEvent(e);\n      $f7.preloader.hide();\n    } catch (ex) {\n      $f7.dialog.confirm(\"Problem connecting to contract on Ethereum Mainnet. Is your wallet connected to the right network?\", \"Problem connecting to network\", populate, () => {\n        $f7.views.main.router.navigate(baseURI);\n      });\n      $f7.preloader.hide();\n    }\n  };\n  populate();\n  let mintEventHandler = async e => {\n    if (e.tokenId > mintingViewModel?.totalMinted) {\n      mintingViewModel = await mintWebService.getMintingViewModel();\n      await $update();\n      let e = new CustomEvent('mint-view-model-refreshed');\n      e.mintingViewModel = mintingViewModel;\n      e.quantity = quantity;\n      document.dispatchEvent(e);\n    }\n  };\n  document.removeEventListener('mint-event', mintEventHandler);\n  document.addEventListener('mint-event', mintEventHandler);\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\n\n  <div>\n    \n    ${mintingViewModel ? $h`\n\n      ${mintingViewModel.minting ? $h`\n\n          <div class=\"card\">\n            <div class=\"card-header card-header-divider\">Create a digital collectible!</div>\n            <div class=\"card-content card-content-padding\">\n\n              <div class=\"list simple-list inset mint-list-info\">\n                <ul>\n                  <li>NFTs are minted in sequential order.</li>\n                  <li>Limited supply!</li>\n                </ul>\n              </div>\n\n            </div>\n          </div>\n\n          <div class=\"block block-strong inset\">\n            <p>\n              <strong>Total Minted:</strong> ${mintingViewModel.totalMinted} of ${mintingViewModel.totalSupply}\n            </p>              \n          </div>\n\n          \n          <div class=\"card\">\n            <div class=\"card-header card-header-divider\">Select between 1-10 NFTs and click the mint button.</div>\n            <div class=\"card-content card-content-padding\">\n              <form class=\"list no-hairlines inset\" @submit=\"${mintOnSubmit}\">\n                <ul>\n    \n                  <li class=\"item-content item-input\">\n                    <div class=\"item-inner\">\n                      <div class=\"item-title item-label\">Select number of NFTs to mint.</div>\n                      <div class=\"item-input-wrap\">\n    \n                        <div class=\"stepper\">\n                          <!-- Stepper minus/decrement button -->\n                          <div class=\"stepper-button-minus\"></div>\n                          <!-- Stepper input -->\n                          <div class=\"stepper-input-wrap\">\n                            <!-- recommended to make input not editable (readonly) -->\n                            <input type=\"text\" readonly value=\"1\" />\n                          </div>\n                          <!-- Stepper plus/increment button -->\n                          <div class=\"stepper-button-plus\"></div>\n                        </div>\n                        <!-- <div class=\"range-slider range-slider-init\" data-label=\"true\" data-scale=\"true\" data-scale-steps=\"5\" >\n                          <input type=\"range\" value=\"1\" min=\"0\" max=\"10\" step=\"1\" />\n                        </div> -->\n                      </div>\n                    </div>\n                  </li>\n    \n                  <li>\n                    <div class=\"item-content\">\n                        <div class=\"item-inner\">\n                            <div class=\"item-title mint-detail\">\n                              <p>\n                                <strong>Mint Fee:</strong> ${mintingViewModel.mintPrice} ETH\n                              </p>\n                              <p>\n                                <strong>Quantity:</strong> ${quantity} \n                              </p>\n                              <p>\n                                <strong>Total:</strong> ${total} ETH\n                              </p>\n                            </div>\n                        </div>\n                    </div>\n                  </li>\n    \n                  <li style=\"display:none;\">\n                    <label class=\"item-checkbox item-content\">\n    \n                        <input type=\"checkbox\" checked=\"${exactTokensOnly}\" @change=${exactTokensOnChange}/>\n                        \n                        <i class=\"icon icon-checkbox\"></i>\n                        <div class=\"item-inner\">\n    \n                            <div class=\"item-title\">\n                              <!-- Item header, must be first child of item-title -->\n                              <div class=\"item-header\"></div>\n                              Exact Tokens Only\n                              <!-- Item footer, must be last child of item-title -->\n                              <div class=\"item-footer\">If this box is checked the transaction will immediately fail if another transaction mints *any* of the selected tokens.</div>\n                            </div>\n    \n                        </div>\n                    </label>\n                  </li>\n    \n                  <li>\n                    <div class=\"item-content\">\n                        <div class=\"item-inner\">\n                          <button class=\"button button-fill ${quantity < 1 ? 'disabled': ''}\" id=\"mint-button\">Mint</button>\n                        </div>\n                    </div>\n                  </li>\n                  \n                </ul>\n    \n              </form>\n            </div>\n          </div>\n\n\n\n\n\n          <div class=\"card mint-list-card\"  style=\"display:none\">\n            <div class=\"card-header\">Next Up</div>\n            <div class=\"card-content\">\n\n              <div class=\"list cards-list virtual-list\" id=\"mint-list\">\n                <ul class=\"item-flex\"></ul>\n              </div>\n        \n              <div class=\"preloader infinite-scroll-preloader\"></div>\n\n            </div>\n          </div>\n          \n      ` : $h`\n        <div class=\"card\">\n          <div class=\"card-header\">Minting Complete</div>\n          <div class=\"card-content card-content-padding\">\n            Minting is complete. Thank you!\n          </div>\n        </div>\n      \n      `}\n    \n    ` : $h`\n      <li class=\"card skeleton-text skeleton-effect-wave\">\n        <div class=\"card-header\">Loading Loading Loading</div>\n        <div class=\"card-content card-content-padding\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi lobortis et massa ac\n            interdum. Cras consequat felis at consequat hendrerit. Aliquam vestibulum vitae lorem ac iaculis.\n            Praesent nec pharetra massa, at blandit lectus. Sed tincidunt, lectus eu convallis elementum, nibh nisi\n            aliquet urna, nec imperdiet felis sapien at enim.</div>\n      </li>\n    `}\n    \n  </div>\n\n\n\n`\n    }\n    ;\n}\nframework7Component.id = '64a7837ce7';\nframework7Component.style = `\n\n\n\n.mint-list-card .card-header {\n  font-size: 27px;\n  font-weight: bold;\n}\n\n.mint-list-card .block {\n  margin-top: 10px;\n  margin-bottom: 10px;\n}\n\n.mint-list-info li {\n  white-space: unset;\n  line-height: unset;\n  height: unset;\n  padding-top: 10px;\n  padding-bottom: 10px;\n}\n\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $,\n  $on,\n  $f7,\n  $update\n}) {\n  let itemWebService = globalThis.container.get(\"ItemWebService\");\n  let baseURI = globalThis.container.get(\"baseURI\")();\n  const link = href => {\n    return baseURI + href;\n  };\n  let results;\n  let searching = false;\n  const searchbarSubmit = async e => {\n    e.preventDefault();\n    $('.searchbar input').blur();\n    $f7.preloader.showIn('.cards-list');\n    searching = true;\n    $update();\n    results = await itemWebService.query($('.searchbar input').val());\n    searching = false;\n    $update();\n    $f7.preloader.hideIn('.cards-list');\n  };\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\r\n\r\n  <div class=\"margin-top\">\r\n\r\n\r\n\r\n    <div class=\"block block-strong block-search\">\r\n\r\n      <form class=\"searchbar\" @submit=\"${searchbarSubmit}\">\r\n        <div class=\"searchbar-inner\">\r\n          <div class=\"searchbar-input-wrap\">\r\n            <input type=\"search\" placeholder=\"Enter a search term\" />\r\n            <i class=\"searchbar-icon\"></i>\r\n            <span class=\"input-clear-button\"></span>\r\n          </div>\r\n          <span class=\"searchbar-disable-button\">Cancel</span>\r\n        </div>\r\n      </form>\r\n\r\n      Note: All searches are local. The first search will take longer because it has to build a local search index.\r\n    </div>\r\n\r\n\r\n    <div class=\"list cards-list\">\r\n  \r\n      <ul>\r\n\r\n        ${results ? $h`\r\n          \r\n          ${ results?.length > 0 ? $h`\r\n          \r\n            ${results?.map( (itemViewModel) => $h`\r\n              <li class=\"card item-card\">\r\n                <div class=\"card-content card-content-padding\">\r\n                  ${itemViewModel.item.excerpt ? $h`\r\n                  \r\n                    <div class=\"item-preview\">\r\n    \r\n                      <div class=\"left\">\r\n                        \r\n                          <a class=\"title\" href=\"${link(`token-${itemViewModel.item.tokenId}.html`)}\">\r\n                              ${itemViewModel.item.title}\r\n                              <span class=\"channel-show-token-id\">#${itemViewModel.item.tokenId}</span>\r\n                          </a>\r\n    \r\n                          <p innerHTML=\"${itemViewModel.item.excerpt}\">\r\n                              \r\n                          </p>\r\n    \r\n                      </div>\r\n    \r\n                      ${itemViewModel.coverImage ? $h`\r\n                        <div class=\"right\">\r\n                          <a class=\"title\" href=\"${link(`token-${itemViewModel.item.tokenId}.html`)}\">\r\n                            <img src=\"backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}\" />\r\n                          </a>\r\n                        </div>\r\n                      ` : $h`<span />`}\r\n    \r\n                    </div>\r\n    \r\n    \r\n                  ` : $h`\r\n                  \r\n                    <div class=\"item-preview\">\r\n                      <div class=\"left\">\r\n    \r\n                          <a class=\"title\" href=\"${link(`t/${itemViewModel.item.tokenId}`)}\">\r\n                            ${itemViewModel.item.title} <span class=\"channel-show-token-id\">#${itemViewModel.item.tokenId}</span>\r\n                          </a>\r\n    \r\n                          <div class=\"content\" innerHTML=\"${itemViewModel.item.contentHTML}\"></div>\r\n    \r\n                      </div>\r\n                    </div>\r\n                  \r\n                  `}\r\n    \r\n                </div>\r\n              </li>                        \r\n            `)}\r\n    \r\n          ` : $h`\r\n              <li class=\"card item-card\">\r\n                <div class=\"card-content card-content-padding\">\r\n                  No results found\r\n                </div>\r\n              </li>\r\n          `}\r\n          \r\n          \r\n        ` :$h`<span />`}\r\n  \r\n\r\n  \r\n      </ul>\r\n  \r\n    </div>\r\n\r\n  </div>\r\n\r\n`\n    }\n    ;\n}\nframework7Component.id = 'ba1941e6af';\nframework7Component.style = `\n\n.block-search {\n  background: #f1f1f1;\n  font-size: 14px;\n}\n\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $on,\n  $f7,\n  $update\n}) {\n  let walletService = globalThis.container.get(\"WalletService\");\n  let uiService = globalThis.container.get(\"UiService\");\n  let baseURI = globalThis.container.get(\"baseURI\");\n  let hostname = globalThis.container.get(\"hostname\");\n  let symbol = props.symbol;\n  let logo = props.logo;\n  let title = props.title;\n  let active = props.active;\n  let libraryURL = props.library_url;\n  let largeURL = props.large_url;\n  let showMintPage = props.show_mint_page == \"true\";\n  let showActivityPage = props.show_activity_page == \"true\";\n  let hideMenu = props.hide_menu == \"true\";\n  let breadcrumbs = props.breadcrumbs;\n  let walletAddress;\n  let showConnect = true;\n  const getForkLink = () => {\n    if (largeURL?.length > 0) {\n      return `${largeURL}/index.html#!/admin/channel/fork-reader?path=${encodeURIComponent(`${hostname()}${baseURI()}`)}`;\n    } else {\n      return `${baseURI()}large/index.html#!/admin/channel/fork-reader?path=${encodeURIComponent(`${hostname()}${baseURI()}`)}`;\n    }\n  };\n  const truncateEthAddress = address => {\n    return walletService.truncateEthAddress(address);\n  };\n  const displayAddress = async e => {\n    walletAddress = undefined;\n    if (!walletService.provider) {\n      await walletService.initProvider();\n    }\n    walletAddress = await walletService.getAddress();\n\n    //If no provider still then clear the address so we don't show the button\n    if (!walletService.provider) {\n      showConnect = false;\n    }\n    if (walletAddress) {\n      walletService.address = walletAddress;\n      if (!walletService.wallet) {\n        await walletService.connect();\n      }\n    }\n    $update();\n  };\n  const connectWallet = async e => {\n    await walletService.initWallet();\n\n    //Connect to metamask\n    await walletService.connect();\n    displayAddress();\n  };\n  displayAddress();\n  const showPopoverMenu = async e => {};\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\r\n\r\n    <div class=\"navbar\">\r\n        <div class=\"navbar-bg\"></div>\r\n\r\n        <div class=\"navbar-inner sliding\">\r\n                \r\n          <div class=\"left\">\r\n            <a href=\"${libraryURL?.length > 0 ? libraryURL : baseURI() }\">\r\n              <i class=\"f7-icons\">house</i>\r\n            </a>\r\n          </div>\r\n\r\n\r\n          <div class=\"title\">${title}</div>\r\n          \r\n          <div class=\"right\">\r\n            \r\n            ${!hideMenu ? $h`\r\n              \r\n              <div class=\"small-only\">\r\n\r\n                <a href=\"#\" class=\"link popover-open\" data-popover=\".popover-menu\">\r\n                  <i class=\"f7-icons\">menu</i>\r\n                </a> \r\n  \r\n                <div class=\"popover popover-menu\">\r\n                  <div class=\"popover-angle\"></div>\r\n                  <div class=\"popover-inner\">                    \r\n                    <div class=\"list\">\r\n                      <ul>\r\n  \r\n                        ${showConnect ? $h`\r\n          \r\n                            <li>\r\n                              <div class=\"item-content\">\r\n                                <div class=\"item-inner\">\r\n                                    <div class=\"item-title\">\r\n                                        ${walletAddress != undefined ? $h`\r\n                                          <a href=\"#\" class=\"button button-fill\">${truncateEthAddress(walletAddress)}</a>\r\n                                      ` : $h`\r\n                                          <button class=\"button button-outline button-fill\" @click=${connectWallet}>\r\n                                            Connect Wallet\r\n                                          </button>\r\n                                      `} \r\n                                    </div>\r\n                                </div>\r\n                              </div>\r\n                            </li>\r\n  \r\n                            ${showMintPage ? $h`\r\n                              <li>\r\n                                <a href=\"${baseURI()}mint.html\" class=\"item-link popover-close\">\r\n                                  <div class=\"item-content\">\r\n                                    <div class=\"item-inner\">\r\n                                        <div class=\"item-title\">\r\n                                            Mint\r\n                                        </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </a>\r\n                              </li>\r\n                            ` : $h`<span />`}\r\n  \r\n                                \r\n                          ` : $h`<span />`}\r\n  \r\n  \r\n  \r\n  \r\n                        <li>\r\n                          <a href=\"${getForkLink()}\" class=\"item-link external popover-close\">\r\n                            <div class=\"item-content\">\r\n                              <div class=\"item-inner\">\r\n                                  <div class=\"item-title\">\r\n                                    Fork\r\n                                  </div>\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                        </li>\r\n    \r\n  \r\n  \r\n  \r\n                        <li>\r\n                          <a href=\"${baseURI()}explore.html\" class=\"item-link popover-close\">\r\n                            <div class=\"item-content\">\r\n                              <div class=\"item-inner\">\r\n                                  <div class=\"item-title\">\r\n                                      Explore\r\n                                  </div>\r\n                              </div>\r\n                            </div>\r\n                          </a>\r\n                        </li>\r\n  \r\n  \r\n                        ${showActivityPage ? $h`\r\n                          <li>\r\n                            <a href=\"${baseURI()}activity\" class=\"item-link popover-close\">\r\n                              <div class=\"item-content\">\r\n                                <div class=\"item-inner\">\r\n                                    <div class=\"item-title\">\r\n                                        Activity\r\n                                    </div>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n  \r\n                          <li>\r\n                            <a href=\"${baseURI()}leaderboard\" class=\"item-link popover-close\">\r\n                              <div class=\"item-content\">\r\n                                <div class=\"item-inner\">\r\n                                    <div class=\"item-title\">\r\n                                        Leaderboard\r\n                                    </div>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </li>\r\n  \r\n  \r\n                        ` : $h`<span />`}\r\n  \r\n                      </ul>\r\n                \r\n                    </div>\r\n        \r\n                  </div>\r\n                </div>\r\n  \r\n              </div>\r\n  \r\n              <div class=\"large-only\">\r\n    \r\n                <a href=\"${getForkLink()}\" class=\"external link\">\r\n                  Fork\r\n                </a>\r\n  \r\n                <a class=\"link ${active == 'Explore' ? $h`link-active` : $h` `}\" href=\"${baseURI()}explore.html\">\r\n                  Explore\r\n                </a>      \r\n  \r\n                ${showActivityPage ? $h`\r\n                  <a class=\"link ${active == 'Activity' ? $h`link-active` : $h` `}\" href=\"${baseURI()}activity\">\r\n                    Activity\r\n                  </a> \r\n  \r\n                  <a class=\"link ${active == 'Leaderboard' ? $h`link-active` : $h` `}\" href=\"${baseURI()}leaderboard\" >\r\n                    Leaderboard\r\n                  </a> \r\n  \r\n                ` : $h`<span />`}\r\n  \r\n                ${showConnect ? $h`\r\n  \r\n                  ${showMintPage ? $h`\r\n                    <a class=\"link ${active == 'Mint' ? $h`link-active` : $h` `}\" href=\"${baseURI()}mint.html\" >\r\n                      Mint\r\n                    </a> \r\n                  ` : $h`<span />`}\r\n  \r\n                  ${walletAddress != undefined ? $h`\r\n                      <a href=\"${baseURI()}u/?address=${walletAddress}\" class=\"link\" >${truncateEthAddress(walletAddress)}</a>\r\n                  ` : $h`\r\n                      <a class=\"link\" @click=\"${connectWallet}\">Connect Wallet</a>\r\n                  `} \r\n       \r\n                ` : $h`<span style=\"display: none;\" />`}\r\n  \r\n              </div>\r\n              \r\n            ` : $h` `}\r\n            \r\n          </div>\r\n\r\n\r\n\r\n          ${breadcrumbs ? $h`\r\n                  \r\n            <div class=\"subnavbar\">\r\n              <div class=\"subnavbar-inner\">\r\n        \r\n                <div class=\"breadcrumbs \">\r\n  \r\n                  ${breadcrumbs.map( b => $h`\r\n                    <div class=\"breadcrumbs-item\">\r\n\r\n                      ${b.path ? $h`\r\n                        <a href=\"${b.path}\" class=\"link\">\r\n                          ${b.text}\r\n                        </a>\r\n                      ` : $h`${b.text}`}\r\n\r\n\r\n                    </div>  \r\n\r\n                    ${b.path ? $h`\r\n                      <div class=\"breadcrumbs-separator\"></div>\r\n                    ` : $h`<span />`}\r\n\r\n                    \r\n                  `)}\r\n\r\n                </div>\r\n        \r\n              </div>\r\n            </div>\r\n\r\n\r\n            ` : $h`<span />`}\r\n\r\n\r\n\r\n          \r\n        </div>\r\n        \r\n    </div>\r\n\r\n`\n    }\n    ;\n}\nframework7Component.id = 'da8ee920ea';\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $on,\n  $,\n  $f7,\n  $update\n}) {\n  let baseURI = globalThis.container.get(\"baseURI\");\n  let readerSettingsService = globalThis.container.get(\"ReaderSettingsService\");\n  let tokenId = props.token_id;\n  let itemCount = props.item_count;\n  let currentPage = props.current_page;\n  const link = href => {\n    return baseURI() + href;\n  };\n  const rangeSliderChange = async e => {\n    e.preventDefault();\n    let tokenId = $(e.currentTarget).val();\n    $f7.preloader.show();\n    if (tokenId > 0) {\n      await readerSettingsService.updateCurrentPage(parseInt(tokenId));\n      $f7.views.main.router.navigate(link('t/' + tokenId), {\n        transition: 'f7-flip'\n      });\n    } else {\n      $f7.views.main.router.navigate(link(`index.html`));\n    }\n    $f7.preloader.hide();\n  };\n  const rangeChange = e => {\n    e.preventDefault();\n    const range = $f7.range.get(e.target);\n    tokenId = range.value;\n    $update();\n  };\n  app.on('current-page-updated', function (p) {\n    currentPage = p;\n    $update();\n  });\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\r\n\r\n  <div class=\"toolbar toolbar-bottom\">\r\n    <div class=\"toolbar-inner\">\r\n\r\n        <div style=\"width: 100%; margin-bottom: -20px;\">\r\n\r\n            <div style=\"display: flex;\">\r\n            \r\n                ${currentPage && tokenId == 0 ? $h`\r\n                    <a href=\"${link(`t/${currentPage}`)}\" class=\"button button-outline back-to-page\">\r\n                        Back to page ${currentPage}\r\n                    </a>\r\n                ` : $h`<span />`}\r\n    \r\n    \r\n                <div class=\"range-slider range-slider-init\" \r\n                    @range:change=${rangeChange}\r\n                    data-label=\"true\"\r\n                    >\r\n                \r\n                    <!-- range input -->\r\n                    <input type=\"range\" \r\n                        min=\"0\" \r\n                        max=\"${itemCount}\"\r\n                        step=\"1\" \r\n                        value=\"${tokenId}\" \r\n                        @change=\"${rangeSliderChange}\"\r\n                />\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div class=\"page-number\" style=\"width: 100%;\">\r\n                Page <strong>${tokenId}</strong> of ${itemCount}\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n  </div>\r\n\r\n`\n    }\n    ;\n}\nframework7Component.id = '3fc6e22438';\nframework7Component.style = `\n.page-number {\n    width: 100%;\n    text-align: center;\n    font-size: 13px;\n    margin-bottom: 15px;\n}\n\n.range-slider {\n    width: 100%;\n    margin-left: 20px; \n    margin-right: 20px;\n    flex: 1;\n}\n\n.toolbar a.back-to-page {\n    height: 45px;\n    width: 70px;\n    margin-left: 10px;\n    flex: 0 0 70px;\n    font-size: 10px;\n    text-transform: none;\n    white-space: normal;\n    line-height: 13px;\n}\n`;\nexport default framework7Component;","/** @jsx $jsx */\nimport { $jsx } from 'framework7';\nfunction framework7Component(props, {\n  $on,\n  $f7,\n  $update\n}) {\n  // let walletService = globalThis.container.get(\"WalletService\")\n\n  return function ($ctx) {\n      var $ = $ctx.$;\n      var $h = $ctx.$h;\n      var $root = $ctx.$root;\n      var $f7 = $ctx.$f7;\n      var $f7route = $ctx.$f7route;\n      var $f7router = $ctx.$f7router;\n      var $theme = $ctx.$theme;\n      var $update = $ctx.$update;\n      var $store = $ctx.$store;\n\n      return $h`\r\n\r\n\r\n\r\n\r\n`\n    }\n    ;\n}\nframework7Component.id = 'ada3dd9104';\nframework7Component.style = `\n\n\n\n\n`;\nexport default framework7Component;","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import \"regenerator-runtime/runtime.js\"\nimport \"reflect-metadata\"\n\nimport {Workbox} from 'workbox-window'\nimport { Container } from \"inversify\"\n\nimport { getMainContainer } from \"../reader/inversify.config.js\"\n\nimport { HomeWebService } from \"./service/web/home-web-service.js\"\nimport { HomeRepository } from \"./repository/home-repository.js\"\nimport { HomeRepositoryBrowserImpl } from \"./repository/web/home-repository-impl.js\"\nimport { RoutingService } from \"../reader/service/core/routing-service.js\"\n\n//Import CSS\nimport './html/css/app.css'\n\n\nlet initLibrary = async (libraryURL:string, baseURI:string, hostname:string, version:string, channelId:string) => {\n\n    console.log(\"Initializing Library\")\n    \n    if ('serviceWorker' in navigator) {\n\n        const wb = new Workbox(`${hostname}/sw-library-${version}.js`, {\n            scope: `/`\n        })\n    \n        let container:Container = new Container()\n\n        container.bind(\"libraryURL\").toConstantValue(libraryURL)\n        container.bind<HomeWebService>(\"HomeWebService\").to(HomeWebService).inSingletonScope()\n        container.bind<HomeRepository>(\"HomeRepository\").to(HomeRepositoryBrowserImpl).inSingletonScope()\n\n\n        let routes = RoutingService.getLibraryRoutes(libraryURL)\n\n        container = await getMainContainer(container, baseURI, hostname, version, routes, channelId)\n\n        if (navigator.serviceWorker.controller) {\n            startApp(container, hostname)\n        } else {\n            wb.addEventListener('controlling', e => {\n                startApp(container, hostname)\n            })\n        }\n\n        wb.register()\n    }\n\n\n} \n\nlet startApp = async (container:Container, hostname:string) => {\n\n    // let container = getMainContainer(baseURI, version, routablePages)            \n    let app:any = container.get(\"framework7\")\n    \n    //Create the main view\n\n    //Get URL\n    let internalUrl = window.location.toString().replace(`${hostname}`, '')\n\n    // console.log(`internal URL ${internalUrl}`)\n\n    const mainView = app.views.create('.view-main', {\n        url: internalUrl\n    })\n\n\n    mainView.on(\"init\", async (view) => {\n\n        console.log(`Navigating to ${internalUrl}`)\n        //When the view loads lets reload the initial page so that we fire the component logic. \n        view.router.navigate(internalUrl, { reloadCurrent: true, animate: false })\n    })\n    \n    app.init()\n\n\n}\n\nexport { initLibrary }\n\n","import axios from \"axios\"\nimport { inject, injectable } from \"inversify\"\nimport { HomeRepository } from \"../home-repository.js\"\n\n\n@injectable()\nclass HomeRepositoryBrowserImpl implements HomeRepository {\n\n    constructor(\n        @inject('libraryURL') private libraryURL\n    ) {}\n\n    async get(pageNumber: number): Promise<HomeViewModel> {   \n        const response = await axios.get(`${this.libraryURL}/home.json`)\n            \n        return response.data\n    }\n\n}\n\ninterface HomeViewModel {\n    \n}\n\nexport {\n    HomeRepositoryBrowserImpl, HomeViewModel\n}\n\n\n","import { inject, injectable } from \"inversify\";\nimport { HomeRepository } from \"../../repository/home-repository.js\";\nimport { HomeViewModel } from \"../../repository/web/home-repository-impl.js\";\n\n\n@injectable()\nclass HomeWebService {\n\n    constructor() {}\n\n    @inject(\"HomeRepository\")\n    private homeRepository:HomeRepository\n\n    async get() : Promise<HomeViewModel> {\n        return this.homeRepository.get(0)\n    }\n\n    abbreviateDollars(number, digits) {\n\n        if (!number) return \"$0\"\n\n        var SI_SYMBOL = [\"\", \"\", \"M\", \"G\", \"T\", \"P\", \"E\"]\n\n\n        // what tier? (determines SI symbol)\n        var tier = Math.log10(Math.abs(number)) / 3 | 0\n\n        // if zero or thousands, we don't need a suffix\n        if(tier == 0 || tier == 1) {\n          let result = new Intl.NumberFormat('en-US', { currency: \"USD\", style:\"currency\" }).format(number)\n          return result\n        }\n\n        // get suffix and determine scale\n        var suffix = SI_SYMBOL[tier]\n        var scale = Math.pow(10, tier * 3)\n\n        // scale the number\n        var scaled = number / scale\n\n        // format number and add suffix\n        return new Intl.NumberFormat('en-US', { currency: \"USD\", style:\"currency\" }).format(scaled) + suffix\n    }\n\n}\n\n\nexport {\n    HomeWebService\n}","\nclass Animation {\n    \n    _id?:string\n    _rev?:string \n    content?:string\n    cid?:string \n    dateCreated?:string\n}\n\nexport {\n    Animation\n}","class AttributeTotal {\n    _id?:string\n    traitType?:string\n    value?:string \n    count?:number \n    categoryPercent?:string\n    tokenIds?:number[]\n}\n\nexport { AttributeTotal }","\nclass Author {\n\n  _id?: string\n  _rev?:string\n  walletAddress?: string\n  name?: string\n  description?: string\n  url?:string \n  coverPhotoId?: string\n  dateCreated?:string\n  lastUpdated?:string\n\n}\n\nexport {\n  Author\n}","import { Allow } from \"class-validator\"\r\n\r\nclass ComponentState {\r\n\r\n    @Allow()\r\n    _id?:string\r\n\r\n    @Allow()\r\n    _rev?:string \r\n    \r\n    @Allow()\r\n    data:any\r\n\r\n    @Allow()\r\n    dateCreated?:string\r\n\r\n    @Allow()\r\n    lastUpdated?:string\r\n}\r\n\r\nexport {\r\n    ComponentState\r\n}\r\n","class Image {\n    _id?:string\n    data?:any\n    cid?:string\n    buffer?:any\n    svg?:string \n    generated?:boolean\n}\n\nexport {\n    Image\n}","import { AttributeOptions, AttributeSelection } from \"./attribute.js\"\n\n\nclass Item {    \n    _id?:string\n    _rev?:string\n    channelId?:string\n    tokenId?:number\n    title?:string \n    link?:string \n    description?:string\n    content?:any\n    contentHTML?:string\n    excerpt?:string\n    authorId?:string\n    category?:string[]\n    attributeSelections?: AttributeSelection[] \n    coverImageId?:string\n    coverImageAsAnimation?:string \n    originalJSONMetadataId?:any\n    animationId?:string\n    datePublished?:string\n    dateCreated?:string\n    lastUpdated?:string\n}\n\n\nexport { Item }","import { AttributeSelection } from \"./attribute.js\";\n\nclass NFTMetadata {\n\n    tokenId:string\n\n    name?:string\n    description?:string\n\n    image?:string\n    image_data?:string\n\n    external_url?:string \n    \n    attributes?:AttributeSelection[]\n\n    background_color?:string \n    animation_url?:string\n} \n\nexport {\n    NFTMetadata\n}","import { MinLength, ArrayNotEmpty, ArrayMinSize ,IsNotEmpty, Allow } from 'class-validator'\r\n\r\n\r\nclass ReaderSettings {\r\n\r\n    @Allow()\r\n    _id?:string\r\n    \r\n    @Allow()\r\n    _rev?:string\r\n\r\n    @Allow()\r\n    currentPage?:number\r\n    \r\n    @Allow()\r\n    lastPageJump?:number\r\n    \r\n    @Allow()\r\n    dateCreated?:string\r\n    \r\n    @Allow()\r\n    lastUpdated?:string\r\n  \r\n  }\r\n  \r\n  export {\r\n    ReaderSettings\r\n  }","\nclass StaticPage {\n  _id?: string\n  _rev?:string\n  channelId?:string\n  name?: string\n  slug?:string\n  content?:any\n  contentHTML?:string\n  contentMarkdown?:string\n  locations?:string[] \n  dateCreated?:string\n  lastUpdated?:string\n}\n\n\nexport {\n  StaticPage\n}","\r\nclass TokenOwner {\r\n    \r\n    declare _id?:string\r\n    declare _rev?:string \r\n    declare count?:number\r\n    declare rank?:number\r\n    declare overallRank?:number\r\n    declare tokenIds?:number[]\r\n    declare latestTransactionInitiatorId?:string\r\n    declare latestTransactionId?:string\r\n    declare ensName?:string\r\n    declare lastActive?:string \r\n    declare lastUpdated?:string \r\n    declare dateCreated?:string\r\n\r\n}\r\n\r\nexport {\r\n    TokenOwner\r\n}","\r\nclass Token {\r\n    \r\n    declare _id?:string\r\n\r\n    declare _rev?:string \r\n\r\n    declare tokenId?:number\r\n\r\n    declare attributeSelections?:[{\r\n        traitType: string\r\n        value: string\r\n    }]\r\n\r\n    declare currentOwnerId?:string \r\n\r\n    declare ownershipHistory?:OwnershipHistory[]\r\n\r\n    declare latestTransactionId?:string\r\n\r\n    declare lastUpdated?:Date \r\n\r\n    declare dateCreated?:Date\r\n\r\n}\r\n\r\ninterface OwnershipHistory {\r\n    owner:string,\r\n    blockNumber:number\r\n    transactionIndex:number\r\n    transactionHash:string\r\n    timestamp:number\r\n}\r\n\r\nexport {\r\n    Token\r\n}","import { Container } from \"inversify\";\r\nimport Framework7 from 'framework7';\r\n\r\nimport axios from \"axios\"\r\nimport he from 'he'\r\nimport { BrowserProvider } from \"ethers\"\r\n\r\nimport PouchDB from 'pouchdb-browser';\r\nimport PouchFind from 'pouchdb-find'\r\n// import PouchQuickSearch from 'pouchdb-quick-search'\r\n\r\n//Enable find plugin\r\nPouchDB.plugin(PouchFind)\r\n\r\n//Enable quicksearch\r\n// PouchDB.plugin(PouchQuickSearch)\r\n\r\nimport dayjs from \"dayjs\"\r\nimport relativeTime from 'dayjs/plugin/relativeTime.js'\r\ndayjs.extend(relativeTime)\r\n\r\nimport localizedFormat from 'dayjs/plugin/localizedFormat.js'\r\ndayjs.extend(localizedFormat)\r\n\r\n\r\n//Import CSS\r\nimport 'framework7/css/bundle'\r\nimport 'framework7-icons/css/framework7-icons.css'\r\nimport './html/css/app.css'\r\n\r\n\r\n// Import additional components\r\nimport Dialog from 'framework7/components/dialog'\r\nimport Toast from 'framework7/components/toast'\r\nimport Preloader from 'framework7/components/preloader'\r\nimport VirtualList from 'framework7/components/virtual-list'\r\nimport ListIndex from 'framework7/components/list-index'\r\nimport Range from 'framework7/components/range'\r\nimport Accordion from 'framework7/components/accordion'\r\nimport InfiniteScroll from 'framework7/components/infinite-scroll'\r\nimport Card from 'framework7/components/card'\r\nimport Chip from 'framework7/components/chip'\r\nimport Form from 'framework7/components/form'\r\nimport Grid from 'framework7/components/grid'\r\nimport Popup from 'framework7/components/popup'\r\nimport Popover from 'framework7/components/popover'\r\nimport Stepper from 'framework7/components/stepper'\r\n\r\n// import 'framework7/components/stepper/css'\r\n// import 'framework7/components/popover/css'\r\n// import 'framework7/components/popup/css'\r\n// import 'framework7/components/grid/css'\r\n// import 'framework7/components/form/css'\r\n// import 'framework7/components/chip/css'\r\n// import 'framework7/components/card/css'\r\n// import 'framework7/components/infinite-scroll/css'\r\n// import 'framework7/components/accordion/css'\r\n// import 'framework7/components/range/css'\r\n// import 'framework7/components/list-index/css'\r\n// import 'framework7/components/virtual-list/css'\r\n// import 'framework7/components/preloader/css'\r\n// import 'framework7/components/dialog/css'\r\n// import 'framework7/components/toast/css'\r\n\r\n\r\n\r\n// Install F7 Components using .use() method on Framework7 class:\r\nFramework7.use([Dialog, Toast, Preloader, VirtualList, ListIndex, Card, Chip, Form, Grid, \r\n  Range, Accordion, Popup, InfiniteScroll, Popover, Stepper])\r\n\r\n\r\n\r\n\r\nimport Navbar from './components/reader/navbar.f7.html'\r\n\r\nimport TokenToolbar from './components/reader/token-toolbar.f7.html'\r\nimport Transaction from './components/reader/transaction.f7.html'\r\n\r\n// import NftInfo from './components/reader/item/nft-info.f7.html'\r\nimport MintList from './components/reader/item/mint-list.f7.html'\r\n\r\nimport AttributeFilter from './components/reader/channel/attribute-filter.f7.html'\r\nimport ExploreTotalInfo from './components/reader/channel/explore-total-info.f7.html'\r\n\r\nimport MintInfo from './components/reader/channel/mint-info.f7.html'\r\nimport LargestSales from './components/reader/channel/largest-sales.f7.html'\r\n\r\nimport TransactionRow from './components/reader/channel/transaction-row.f7.html'\r\nimport LeaderboardRows from './components/reader/channel/leaderboard-rows.f7.html'\r\n\r\n\r\n\r\nimport SearchList from './components/reader/item/search-list.f7.html'\r\nimport InfiniteScrollContent from './components/reader/item/infinite-scroll-content.f7.html'\r\n\r\n\r\nimport { WalletService } from \"./service/core/wallet-service.js\";\r\nimport { WalletServiceImpl } from \"./service/core/wallet-service-impl.js\";\r\nimport { ChannelRepository } from \"./repository/channel-repository.js\";\r\nimport { TokenRepository } from \"./repository/token-repository.js\";\r\n\r\nimport { ItemRepository } from \"./repository/item-repository.js\";\r\nimport { AuthorRepository } from \"./repository/author-repository.js\";\r\nimport { MetadataRepository } from \"./repository/metadata-repository.js\";\r\nimport { ImageRepository } from \"./repository/image-repository.js\";\r\nimport { AnimationRepository } from \"./repository/animation-repository.js\";\r\nimport { StaticPageRepository } from \"./repository/static-page-repository.js\";\r\nimport { ItemPageRepository } from \"./repository/item-page-repository.js\";\r\nimport { AttributeTotalRepository } from \"./repository/attribute-total-repository.js\";\r\nimport { ReaderSettingsRepository } from \"./repository/reader-settings-repository.js\";\r\nimport { ChannelRepositoryBrowserImpl } from \"./repository/browser/channel-repository-impl.js\";\r\nimport { ItemRepositoryBrowserImpl } from \"./repository/browser/item-repository-impl.js\";\r\nimport { AuthorRepositoryBrowserImpl } from \"./repository/browser/author-repository-impl.js\";\r\nimport { MetadataRepositoryBrowserImpl } from \"./repository/browser/metadata-repository-impl.js\";\r\nimport { ImageRepositoryBrowserImpl } from \"./repository/browser/image-repository-impl.js\";\r\nimport { AnimationRepositoryBrowserImpl } from \"./repository/browser/animation-repository-impl.js\";\r\nimport { StaticPageRepositoryBrowserImpl } from \"./repository/browser/static-page-repository-impl.js\";\r\nimport { ItemPageRepositoryBrowserImpl } from \"./repository/browser/item-page-repository-impl.js\";\r\nimport { AttributeTotalRepositoryBrowserImpl } from \"./repository/browser/attribute-total-repository-impl.js\";\r\nimport { ReaderSettingsRepositoryBrowserImpl } from \"./repository/browser/reader-settings-repository-impl.js\";\r\nimport { TokenRepositoryBrowserImpl } from \"./repository/browser/token-repository-impl.js\";\r\n\r\nimport { ChannelWebService } from \"./service/web/channel-web-service.js\";\r\nimport { ItemWebService } from \"./service/web/item-web-service.js\";\r\nimport { AuthorWebService } from \"./service/web/author-web-service.js\";\r\nimport { MintWebService } from \"./service/web/mint-web-service.js\";\r\nimport { StaticPageService } from \"./service/static-page-service.js\";\r\nimport { ItemPageService } from \"./service/item-page-service.js\";\r\nimport { QueueService } from \"./service/core/queue-service.js\";\r\nimport { PagingService } from \"./service/core/paging-service.js\";\r\nimport { DatabaseService } from \"./service/core/database-service.js\";\r\nimport { AnimationService } from \"./service/animation-service.js\";\r\nimport { UiService } from \"./service/core/ui-service.js\";\r\nimport { ItemService } from \"./service/item-service.js\";\r\nimport { ImageService } from \"./service/image-service.js\";\r\nimport { ChannelService } from \"./service/channel-service.js\";\r\nimport { AuthorService } from \"./service/author-service.js\";\r\nimport { TokenContractService } from \"./service/token-contract-service.js\";\r\nimport { SchemaService } from \"./service/core/schema-service.js\";\r\nimport { QuillService } from \"./service/core/quill-service.js\";\r\nimport { ReaderSettingsService } from \"./service/reader-settings-service.js\";\r\n\r\n\r\nimport { ERCEventService } from \"./service/erc-event-service.js\";\r\nimport { AttributeTotalService } from \"./service/attribute-total-service.js\"; \r\nimport { ComponentStateService } from \"./service/core/component-state-service.js\";\r\nimport { ComponentStateRepository } from \"./repository/component-state-repository.js\";\r\nimport { ComponentStateRepositoryBrowserImpl } from \"./repository/browser/component-state-repository-impl.js\";\r\nimport { ComponentState } from \"./dto/component-state.js\";\r\n\r\n\r\nimport { TokenOwnerPageService } from \"./service/token-owner-page-service.js\";\r\nimport { TokenOwnerPageRepository } from \"./repository/token-owner-page-repository.js\";\r\nimport { TokenOwnerPageRepositoryBrowserImpl } from \"./repository/browser/token-owner-page-repository-impl.js\";\r\n\r\n\r\nimport { TransactionWebService } from \"./service/web/transaction-web-service.js\";\r\nimport { ProcessedTransactionService } from \"./service/processed-transaction-service.js\";\r\nimport { ProcessedTransactionRepository } from \"./repository/processed-transaction-repository.js\";\r\nimport { ProcessedTransactionRepositoryBrowserImpl } from \"./repository/browser/processed-transaction-repository-impl.js\";\r\nimport { TokenOwnerService } from \"./service/token-owner-service.js\";\r\nimport { TokenOwnerRepositoryBrowserImpl } from \"./repository/browser/token-owner-repository-impl.js\";\r\nimport { TokenOwnerRepository } from \"./repository/token-owner-repository.js\";\r\nimport { ContractStateRepository } from \"../sync/repository/contract-state-repository.js\";\r\nimport { TokenService } from \"./service/token-service.js\";\r\nimport { RowItemViewModelRepositoryBrowserImpl } from \"./repository/browser/row-item-view-model-repository-impl.js\";\r\nimport { RowItemViewModelRepository } from \"./repository/row-item-view-model-repository.js\";\r\n\r\n\r\n\r\nlet container: Container\r\n\r\n\r\nasync function getMainContainer(customContainer:Container, theBaseURI:string, theHostname:string, version:string, routes:any[], channelId:string) {\r\n\r\n  if (container) return container\r\n\r\n  container = customContainer\r\n  \r\n  globalThis.baseURI = theBaseURI\r\n  globalThis.hostname = theHostname\r\n  globalThis.channelId = channelId\r\n\r\n  function framework7() {\r\n\r\n    Framework7.registerComponent(\"nav-bar\", Navbar)\r\n\r\n    Framework7.registerComponent(\"token-toolbar\", TokenToolbar)\r\n\r\n    // Framework7.registerComponent(\"nft-info\", NftInfo)\r\n    Framework7.registerComponent(\"mint-list\", MintList)\r\n    Framework7.registerComponent(\"attribute-filter\", AttributeFilter)\r\n    Framework7.registerComponent(\"explore-total-info\", ExploreTotalInfo)\r\n\r\n    Framework7.registerComponent(\"mint-info\", MintInfo)\r\n    Framework7.registerComponent(\"largest-sales\", LargestSales)\r\n\r\n\r\n    Framework7.registerComponent(\"transaction-viewer\", Transaction)\r\n    Framework7.registerComponent(\"transaction-row\", TransactionRow)\r\n\r\n    Framework7.registerComponent(\"leaderboard-rows\", LeaderboardRows)\r\n\r\n\r\n    Framework7.registerComponent(\"search-list\", SearchList)\r\n    Framework7.registerComponent(\"infinite-scroll-content\", InfiniteScrollContent)\r\n\r\n    \r\n\r\n    globalThis.app = new Framework7({\r\n      el: '#app', // App root element\r\n      id: 'large-reader', // App bundle ID\r\n      name: 'Large Reader', // App name\r\n      theme: 'auto', // Automatic theme detection\r\n      init: false,\r\n      \r\n      view: {\r\n        browserHistory: true,\r\n        browserHistorySeparator: \"\",\r\n        browserHistoryOnLoad: false,\r\n        browserHistoryInitialMatch: false\r\n      },\r\n      \r\n      navbar: {\r\n        hideOnPageScroll: true\r\n      },\r\n\r\n      // subnavbar: {\r\n      //   hideOnPageScroll: true\r\n      // },\r\n\r\n      toolbar: {\r\n        hideOnPageScroll: true\r\n      },\r\n\r\n      routes: routes\r\n    })\r\n\r\n    return globalThis.app\r\n  }\r\n\r\n  container.bind(\"framework7\").toConstantValue(framework7())\r\n\r\n  container.bind(\"version\").toConstantValue(version)\r\n\r\n  container.bind(\"PouchDB\").toConstantValue(async () => {\r\n    return PouchDB\r\n  })\r\n\r\n\r\n  container.bind(\"provider\").toConstantValue(async () => {\r\n\r\n    if (typeof window !== \"undefined\" && window['ethereum']) {\r\n\r\n      //@ts-ignore\r\n      window.web3Provider = window.ethereum\r\n\r\n      return new BrowserProvider(window['ethereum'])\r\n\r\n    }\r\n\r\n  })\r\n\r\n\r\n  container.bind(\"contracts\").toConstantValue(async () => {\r\n\r\n    let contract\r\n    let contractABI\r\n\r\n\r\n    let contractResponse = await axios.get(`${globalThis.hostname}${globalThis.baseURI}backup/contract/contract.json`, { responseType: 'json'})\r\n    let contractABIResponse = await axios.get(`${globalThis.hostname}${globalThis.baseURI}backup/contract/contract-abi.json`, { responseType: 'json'})\r\n\r\n\r\n    if (contractResponse.status === 200) {\r\n        contract = contractResponse.data\r\n    }\r\n\r\n    if (contractResponse.status === 200) {\r\n        contractABI = contractABIResponse.data\r\n    }\r\n\r\n    if (!contract.contractAddress) return []\r\n\r\n    //Override address\r\n    contractABI['Channel'].address = contract.contractAddress\r\n\r\n    return contractABI\r\n\r\n  })\r\n\r\n  container.bind(\"baseURI\").toConstantValue(() => {\r\n    return globalThis.baseURI\r\n  })\r\n\r\n  container.bind(\"hostname\").toConstantValue(() => {\r\n    return globalThis.hostname\r\n  })\r\n\r\n  container.bind(\"channelId\").toConstantValue(() => {\r\n    return globalThis.channelId\r\n  })\r\n\r\n\r\n  container.bind<WalletService>(\"WalletService\").to(WalletServiceImpl).inSingletonScope()\r\n\r\n  container.bind<ChannelRepository>(\"ChannelRepository\").to(ChannelRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<ItemRepository>(\"ItemRepository\").to(ItemRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<AuthorRepository>(\"AuthorRepository\").to(AuthorRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<MetadataRepository>(\"MetadataRepository\").to(MetadataRepositoryBrowserImpl).inSingletonScope()\r\n  \r\n  container.bind<ImageRepository>(\"ImageRepository\").to(ImageRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<AnimationRepository>(\"AnimationRepository\").to(AnimationRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<StaticPageRepository>(\"StaticPageRepository\").to(StaticPageRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<ItemPageRepository>(\"ItemPageRepository\").to(ItemPageRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<TokenOwnerPageRepository>(\"TokenOwnerPageRepository\").to(TokenOwnerPageRepositoryBrowserImpl).inSingletonScope()\r\n\r\n  container.bind<AttributeTotalRepository>(\"AttributeTotalRepository\").to(AttributeTotalRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<ReaderSettingsRepository>(\"ReaderSettingsRepository\").to(ReaderSettingsRepositoryBrowserImpl).inSingletonScope()\r\n\r\n  //@ts-ignore\r\n  container.bind<ContractStateRepository>(\"ContractStateRepository\").to({}).inSingletonScope()\r\n  container.bind<ComponentStateRepository>(\"ComponentStateRepository\").to(ComponentStateRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<TokenOwnerRepository>(\"TokenOwnerRepository\").to(TokenOwnerRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<TokenRepository>(\"TokenRepository\").to(TokenRepositoryBrowserImpl).inSingletonScope()\r\n\r\n  container.bind<ProcessedTransactionRepository>(\"ProcessedTransactionRepository\").to(ProcessedTransactionRepositoryBrowserImpl).inSingletonScope()\r\n  container.bind<RowItemViewModelRepository>(\"RowItemViewModelRepository\").to(RowItemViewModelRepositoryBrowserImpl).inSingletonScope()\r\n\r\n\r\n  container.bind<ChannelWebService>(\"ChannelWebService\").to(ChannelWebService).inSingletonScope()\r\n  container.bind<ItemWebService>(\"ItemWebService\").to(ItemWebService).inSingletonScope()\r\n  container.bind<AuthorWebService>(\"AuthorWebService\").to(AuthorWebService).inSingletonScope()\r\n  container.bind<MintWebService>(\"MintWebService\").to(MintWebService).inSingletonScope()\r\n  container.bind<StaticPageService>(\"StaticPageService\").to(StaticPageService).inSingletonScope()\r\n  container.bind<ItemPageService>(\"ItemPageService\").to(ItemPageService).inSingletonScope()\r\n  container.bind<QueueService>(\"QueueService\").to(QueueService).inSingletonScope()\r\n  container.bind<TransactionWebService>(\"TransactionWebService\").to(TransactionWebService).inSingletonScope()\r\n\r\n\r\n  container.bind<PagingService>(\"PagingService\").to(PagingService).inSingletonScope()\r\n  container.bind<DatabaseService>(\"DatabaseService\").to(DatabaseService).inSingletonScope()\r\n  container.bind<AnimationService>(\"AnimationService\").to(AnimationService).inSingletonScope()\r\n\r\n  container.bind<UiService>(\"UiService\").to(UiService).inSingletonScope()\r\n  container.bind<ItemService>(\"ItemService\").to(ItemService).inSingletonScope()\r\n  container.bind<ImageService>(\"ImageService\").to(ImageService).inSingletonScope()\r\n  container.bind<ChannelService>(\"ChannelService\").to(ChannelService).inSingletonScope()\r\n  container.bind<AuthorService>(\"AuthorService\").to(AuthorService).inSingletonScope()\r\n  container.bind<TokenContractService>(\"TokenContractService\").to(TokenContractService).inSingletonScope()\r\n  container.bind<SchemaService>(\"SchemaService\").to(SchemaService).inSingletonScope()\r\n  container.bind<QuillService>(\"QuillService\").to(QuillService).inSingletonScope()\r\n  container.bind<AttributeTotalService>(\"AttributeTotalService\").to(AttributeTotalService).inSingletonScope()\r\n  container.bind<ComponentStateService>(\"ComponentStateService\").to(ComponentStateService).inSingletonScope()\r\n\r\n  container.bind<ReaderSettingsService>(\"ReaderSettingsService\").to(ReaderSettingsService).inSingletonScope()\r\n  container.bind<ERCEventService>(\"ERCEventService\").to(ERCEventService).inSingletonScope()\r\n\r\n  //@ts-ignore\r\n  container.bind(\"GenerateService\").to({}).inSingletonScope()\r\n  container.bind<TokenOwnerService>(\"TokenOwnerService\").to(TokenOwnerService).inSingletonScope()\r\n  container.bind<TokenService>(\"TokenService\").to(TokenService).inSingletonScope()\r\n\r\n  container.bind<TokenOwnerPageService>(\"TokenOwnerPageService\").to(TokenOwnerPageService).inSingletonScope()\r\n\r\n  container.bind<ProcessedTransactionService>(\"ProcessedTransactionService\").to(ProcessedTransactionService).inSingletonScope()\r\n\r\n\r\n  //Attach container to window so we can easily access it from the browser console\r\n  globalThis.container = container\r\n  globalThis.he = he\r\n  globalThis.dayjs = dayjs\r\n  globalThis.ComponentState = ComponentState \r\n\r\n\r\n  return container\r\n}\r\n\r\n\r\n\r\nexport {\r\n  getMainContainer, container\r\n}\r\n\r\n\r\n\r\n\r\n","import {  inject, injectable } from \"inversify\"\r\nimport { Animation } from \"../../dto/animation.js\"\r\nimport { DatabaseService } from \"../../service/core/database-service.js\"\r\nimport { AnimationRepository } from \"../animation-repository.js\"\r\n\r\n@injectable()\r\nclass AnimationRepositoryBrowserImpl implements AnimationRepository {\r\n\r\n    db:any\r\n    dbName:string = \"animations\"\r\n\r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            initialRecords: true\r\n        })\r\n    }\r\n\r\n    constructor(\r\n    ) {}\r\n\r\n\r\n    async get(_id:string): Promise<Animation> {        \r\n        return Object.assign(new Animation(), await this.db.get(_id))\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport {\r\n    AnimationRepositoryBrowserImpl\r\n}","import { inject, injectable } from \"inversify\"\nimport { AttributeTotal } from \"../../dto/attribute-total.js\"\nimport { DatabaseService } from \"../../service/core/database-service.js\"\nimport { AttributeTotalRepository } from \"../attribute-total-repository.js\"\n\n@injectable()\nclass AttributeTotalRepositoryBrowserImpl implements AttributeTotalRepository {\n\n    db:any\n    dbName:string = \"attribute-totals\"\n\n    @inject('DatabaseService')\n    private databaseService: DatabaseService\n\n    async load() {\n        this.db = await this.databaseService.getDatabase({\n            name: this.dbName,\n            initialRecords: true,\n            initialRecordsPath: 'attributeTotals.json'\n        })\n    }\n\n    constructor(\n    ) {}\n\n\n    async get(_id:string): Promise<AttributeTotal> {        \n        return Object.assign(new AttributeTotal(), await this.db.get(_id))\n    }\n\n    async getByIds(ids:string[]) : Promise<AttributeTotal[]> {\n\n        let results = await this.db.allDocs({\n            keys: ids,\n            include_docs: true\n        })\n\n        return results.rows?.map( d => d.doc)\n\n    }\n\n\n    async put(attributeTotal:AttributeTotal) : Promise<void> {\n        await this.db.put(attributeTotal)\n    }\n\n    async list(limit?:number, skip?:number) : Promise<AttributeTotal[]> {\n        \n        let response = await this.db.find({\n            selector: {\n                count: { $exists: true }\n            },\n            limit: limit,\n            skip: skip\n        })\n\n        return response.docs\n\n    }\n\n}\n\nexport {\n    AttributeTotalRepositoryBrowserImpl\n}\n\n\n","import {  inject, injectable } from \"inversify\"\r\nimport { Author } from \"../../dto/author.js\"\r\nimport { DatabaseService } from \"../../service/core/database-service.js\"\r\nimport { AuthorRepository } from \"../author-repository.js\"\r\n\r\n@injectable()\r\nclass AuthorRepositoryBrowserImpl implements AuthorRepository {\r\n\r\n    db:any\r\n    dbName:string = \"authors\"\r\n\r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            initialRecords: true\r\n        })\r\n    }\r\n\r\n    constructor(\r\n    ) {}\r\n\r\n\r\n    async get(_id:string): Promise<Author> {        \r\n        return Object.assign(new Author(), await this.db.get(_id))\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    AuthorRepositoryBrowserImpl\r\n}","import axios from \"axios\"\r\nimport {  inject, injectable } from \"inversify\"\r\nimport { Channel } from \"../../dto/channel.js\"\r\nimport { Changeset, DatabaseService } from \"../../service/core/database-service.js\"\r\nimport { ChannelRepository } from \"../channel-repository.js\"\r\n\r\n@injectable()\r\nclass ChannelRepositoryBrowserImpl implements ChannelRepository {\r\n    \r\n    changesets:Changeset[] = [{\r\n        id: '0',\r\n        changeset: async (db) => {\r\n            //Create indexes\r\n            await db.createIndex({ index: { fields: ['dateCreated'] } })\r\n            await db.createIndex({ index: { fields: ['lastUpdated'] } })\r\n            \r\n        }\r\n    }]\r\n\r\n\r\n    db:any\r\n    dbName:string = \"channels\"\r\n\r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n\r\n    constructor(\r\n        @inject(\"baseURI\") private baseURI:Function,\r\n        @inject(\"hostname\") private hostname:Function\r\n    ) {}\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            changesets: this.changesets,\r\n            initialRecords: true\r\n        })\r\n    }\r\n\r\n\r\n    async get(): Promise<Channel> {        \r\n        \r\n        let channels = await this.db.allDocs({\r\n            include_docs: true\r\n        })\r\n\r\n        let channel:Channel \r\n\r\n        //Find the first actual channel (skip design)\r\n        for (let c of channels.rows) {\r\n            if (c.doc.dateCreated) channel = c.doc\r\n        }\r\n\r\n        // console.log(channels)\r\n\r\n        // let channel:Channel = channels.rows[0].doc\r\n        // console.log(channel)\r\n\r\n        const contractResponse = await axios.get(`${this.hostname()}${this.baseURI()}backup/contract/contract.json`)\r\n        // console.log(contractResponse)\r\n\r\n        if (contractResponse?.data) {\r\n            channel.contractAddress = contractResponse.data.contractAddress\r\n        }\r\n\r\n        return channel\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    ChannelRepositoryBrowserImpl\r\n}","import {  inject, injectable } from \"inversify\"\r\nimport { ComponentState } from \"../../dto/component-state.js\"\r\nimport {  DatabaseService } from \"../../service/core/database-service.js\"\r\nimport { ComponentStateRepository } from \"../component-state-repository.js\"\r\n\r\n\r\n@injectable()\r\nclass ComponentStateRepositoryBrowserImpl implements ComponentStateRepository {\r\n\r\n    db:any\r\n    dbName:string = \"component-state\"\r\n\r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            initialRecords: false,\r\n        })\r\n    }\r\n\r\n    constructor() {}\r\n\r\n\r\n    async get(_id:string): Promise<ComponentState> {        \r\n        return Object.assign(new ComponentState(), await this.db.get(_id))\r\n    }\r\n\r\n    async put(componentState:ComponentState) {\r\n        await this.db.put(componentState)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n    ComponentStateRepositoryBrowserImpl\r\n}","import {  inject, injectable } from \"inversify\"\r\nimport { Image } from \"../../dto/image.js\"\r\nimport { DatabaseService } from \"../../service/core/database-service.js\"\r\nimport { ImageRepository } from \"../image-repository.js\"\r\n\r\n@injectable()\r\nclass ImageRepositoryBrowserImpl implements ImageRepository {\r\n\r\n    db:any\r\n    dbName:string = \"images\"\r\n\r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            initialRecords: true\r\n        })\r\n    }\r\n\r\n    constructor(\r\n    ) {}\r\n\r\n\r\n    async get(_id:string): Promise<Image> {        \r\n        return Object.assign(new Image(), await this.db.get(_id))\r\n    }\r\n\r\n    async list() : Promise<Image[]> {\r\n        return //unimplemented\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport {\r\n    ImageRepositoryBrowserImpl\r\n}","import axios from \"axios\"\nimport { inject, injectable } from \"inversify\"\nimport { ItemPage } from \"../../dto/item-page.js\"\nimport { ItemPageRepository } from \"../item-page-repository.js\"\n\n@injectable()\nclass ItemPageRepositoryBrowserImpl implements ItemPageRepository {\n\n    constructor(\n        @inject(\"baseURI\") private baseURI:Function,\n        @inject(\"hostname\") private hostname:Function\n    ) {}\n\n    async get(pageNumber: number): Promise<ItemPage> {   \n\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}itemPages/${pageNumber}.json`)\n            \n        return response.data\n    }\n\n}\n\nexport {\n    ItemPageRepositoryBrowserImpl\n}\n\n\n","import { inject, injectable } from \"inversify\"\r\nimport { Item } from \"../../dto/item.js\"\r\nimport { ItemRepository, CHUNK_SIZE } from \"./../item-repository.js\"\r\nimport { Changeset, DatabaseService } from \"../../service/core/database-service.js\"\r\nimport axios from \"axios\"\r\nimport { ItemPage, RowItemViewModel } from \"../../dto/item-page.js\"\r\n\r\n\r\n\r\n\r\n@injectable()\r\nclass ItemRepositoryBrowserImpl implements ItemRepository {\r\n\r\n    static CHUNK_SIZE = CHUNK_SIZE\r\n\r\n    changesets:Changeset[] = [\r\n        {\r\n            id: '0',\r\n            changeset: async (db) => {\r\n\r\n                await db.createIndex({\r\n                    index: {\r\n                        fields: ['tokenId']\r\n                    }\r\n                })\r\n        \r\n        \r\n                // await db.search({\r\n                //     build: true,\r\n                //     fields: ['contentHTML', 'title', 'tokenId']\r\n                // })\r\n        \r\n                \r\n            }\r\n        }\r\n    ]\r\n\r\n    db:any\r\n    dbName:string = \"items\"\r\n    \r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n    \r\n    constructor(\r\n        @inject(\"baseURI\") private baseURI:Function,\r\n        @inject(\"hostname\") private hostname:Function\r\n    ) {}\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            changesets: this.changesets,\r\n            initialRecords: true\r\n        })\r\n    }\r\n\r\n\r\n    async get(_id: string): Promise<Item> {\r\n        return Object.assign(new Item(), await this.db.get(_id))\r\n    }\r\n    \r\n\r\n\r\n    async put(item: Item) {\r\n        await this.db.put(item)\r\n    }\r\n\r\n    async list(skip: number, limit:number=CHUNK_SIZE): Promise<Item[]> {\r\n\r\n        let response = await this.db.find({\r\n            selector: {\r\n                tokenId: { $exists: true }\r\n            },\r\n            sort: [{ 'tokenId': 'asc' }],\r\n            limit: limit,\r\n            skip: skip\r\n        })\r\n\r\n        return response.docs\r\n\r\n    }\r\n\r\n    async getByTokenId(tokenId:number) : Promise<Item> {\r\n\r\n        let response = await this.db.find({\r\n            selector: {\r\n                tokenId: { $eq: tokenId },\r\n            },\r\n            limit: 1\r\n        })\r\n\r\n        if (response.docs?.length > 0) {\r\n            return response.docs[0]\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    async getByTokenIds(ids:number[]) : Promise<Item[]> {\r\n\r\n        let response = await this.db.find({\r\n            selector: {\r\n                tokenId: { $in: ids },\r\n            }\r\n        })\r\n\r\n        if (response.docs?.length > 0) {\r\n            return response.docs\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n\r\n    async getRowItemViewModelsByAttribute(traitType:string, value:string, pageNumber:number) : Promise<ItemPage> {\r\n\r\n        const escape = (s) => {\r\n            return s.replace(/[^a-z0-9]/gi, '_').toLowerCase()\r\n        }\r\n\r\n        let itemPage:ItemPage\r\n\r\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}attributes/items/${escape(traitType)}/${escape(value)}/${pageNumber}.json`)\r\n        \r\n        itemPage = response.data\r\n\r\n        return itemPage\r\n    }\r\n\r\n    async getRowItemViewModelsByOwner(address:string, pageNumber:number) : Promise<ItemPage> {\r\n\r\n        let itemPage:ItemPage\r\n\r\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}sync/tokenOwner/${address}/tokens/${pageNumber}.json`)\r\n        \r\n        itemPage = response.data\r\n\r\n        return itemPage\r\n    }\r\n\r\n    async getRowItemViewModelsByTokenIds(tokenIds:number[]) : Promise<RowItemViewModel[]> {\r\n\r\n        let items:RowItemViewModel[] = []\r\n\r\n        for (let tokenId of tokenIds) {\r\n            const response = await axios.get(`${this.hostname()}${this.baseURI()}t/${tokenId}/rowItemViewModel.json`)\r\n            items.push(response.data)\r\n        }\r\n\r\n        return items\r\n    }\r\n\r\n    async getRowItemViewModelsByTokenId(tokenId:number) : Promise<RowItemViewModel> {\r\n\r\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}t/${tokenId}/rowItemViewModel.json`)\r\n        return response.data\r\n\r\n    }\r\n\r\n\r\n    \r\n    async listByTokenId(startTokenId:number, limit:number) : Promise<Item[]> {\r\n\r\n        let response = await this.db.find({\r\n            selector: {\r\n                tokenId: { $eq: startTokenId },\r\n            },\r\n            sort: [{ 'tokenId': 'desc' }],\r\n            limit: limit\r\n        })\r\n\r\n        return response.docs\r\n\r\n    }\r\n\r\n    async query(query:string) : Promise<Item[]> {\r\n\r\n        let response = await this.db.search({\r\n            query: query,\r\n            fields: ['contentHTML', 'title', 'tokenId'],\r\n            include_docs: true,\r\n            highlighting: true, \r\n            limit: CHUNK_SIZE\r\n        })\r\n\r\n\r\n        let rows = response.rows.map( row => {\r\n\r\n            if (row.highlighting.contentHTML) {\r\n                row.doc.contentHTML = row.highlighting.contentHTML\r\n            } \r\n\r\n            //Remove image tags\r\n            row.doc.contentHTML = row.doc.contentHTML.replace(/<img .*?>/g,\"\"); \r\n\r\n\r\n            return row.doc\r\n        })\r\n\r\n\r\n        return rows\r\n\r\n    }\r\n\r\n\r\n\r\n    async all(): Promise<Item[]> {\r\n        let response = await this.db.find({\r\n            selector: {\r\n                tokenId: { $exists: true }\r\n            },\r\n            sort: [{ 'tokenId': 'asc' }],\r\n            limit: 100000,\r\n            skip: 0\r\n        })\r\n\r\n        return response.docs\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nexport {\r\n    ItemRepositoryBrowserImpl\r\n}\r\n\r\n\r\n","import axios from \"axios\"\nimport { inject, injectable } from \"inversify\"\nimport { NFTMetadata } from \"../../dto/nft-metadata.js\"\nimport { MetadataRepository } from \"../metadata-repository.js\"\n\n@injectable()\nclass MetadataRepositoryBrowserImpl implements MetadataRepository {\n\n    static CHUNK_SIZE = 10\n\n    constructor(\n        @inject('baseURI') private baseURI:Function,\n        @inject('hostname') private hostname:Function\n    ) {}\n\n    async get(tokenId: string): Promise<NFTMetadata> {\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}backup/metadata/${tokenId}.json`)\n        return Object.assign(new NFTMetadata(), response.data)\n    }\n\n}\n\nexport {\n    MetadataRepositoryBrowserImpl\n}\n\n\n","import axios from \"axios\"\r\nimport {  inject, injectable } from \"inversify\"\r\nimport { AttributeOverallSales, AttributeSaleReport, ProcessedTransaction, Sale, SalesReport } from \"../../dto/processed-transaction.js\"\r\nimport { TransactionsViewModel, TransactionViewModel } from \"../../service/processed-transaction-service.js\"\r\nimport { ProcessedTransactionRepository } from \"../processed-transaction-repository.js\"\r\n\r\n\r\n\r\n@injectable()\r\nclass ProcessedTransactionRepositoryBrowserImpl implements ProcessedTransactionRepository {\r\n\r\n\r\n\r\n    @inject('baseURI') \r\n    private baseURI:Function\r\n\r\n    async get(_id: string): Promise<TransactionViewModel> {\r\n\r\n        let processedTransaction\r\n    \r\n\r\n        try {\r\n            //Download it.\r\n            let result = await axios.get(`${this.baseURI()}sync/transactions/${_id}.json`)\r\n            processedTransaction = result.data\r\n\r\n        } catch(ex) {\r\n            console.log(ex)\r\n        }\r\n\r\n        return processedTransaction\r\n\r\n\r\n    }\r\n\r\n    async getSalesReport(): Promise<SalesReport> {\r\n\r\n        let salesReport\r\n    \r\n        try {\r\n            //Download it.\r\n            let result = await axios.get(`${this.baseURI()}sync/sales/overall.json`)\r\n            salesReport = result.data\r\n\r\n        } catch(ex) {\r\n            console.log(ex)\r\n        }\r\n\r\n        return salesReport\r\n\r\n    }\r\n\r\n    async getAttributeSalesReport(traitType:string, value:string): Promise<AttributeSaleReport> {\r\n\r\n        let attributeSalesReport\r\n    \r\n        try {\r\n            //Download it.\r\n            let result = await axios.get(`${this.baseURI()}sync/attributes/${this.attributeKeyToInteger(`${traitType}::::${value}`)}/attribute.json`)\r\n            attributeSalesReport = result.data\r\n\r\n        } catch(ex) {\r\n            console.log(ex)\r\n        }\r\n\r\n        return attributeSalesReport\r\n    }\r\n\r\n    async getAttributesOverall(): Promise<AttributeOverallSales> {\r\n\r\n        let attributeOverallSales\r\n    \r\n        try {\r\n            //Download it.\r\n            let result = await axios.get(`${this.baseURI()}sync/attributes/totals.json`)\r\n            attributeOverallSales = result.data\r\n\r\n        } catch(ex) {\r\n            console.log(ex)\r\n        }\r\n\r\n        return attributeOverallSales\r\n\r\n    }\r\n\r\n    private attributeKeyToInteger(key:string) {\r\n\r\n        let hash = 0, i, chr\r\n  \r\n        if (key.length === 0) return hash\r\n  \r\n        for (i = 0; i < key.length; i++) {\r\n  \r\n          chr = key.charCodeAt(i)\r\n          hash = ((hash << 5) - hash) + chr\r\n          hash |= 0 // Convert to 32bit integer\r\n        }\r\n        \r\n        return hash\r\n    }\r\n\r\n    async getLargestSales(limit:number): Promise<Sale[]> {\r\n\r\n        let largestSales\r\n    \r\n        try {\r\n            //Download it.\r\n            let result = await axios.get(`${this.baseURI()}sync/sales/largest-${limit}.json`)\r\n            largestSales = result.data\r\n\r\n        } catch(ex) {\r\n            console.log(ex)\r\n        }\r\n\r\n        return largestSales\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    ProcessedTransactionRepositoryBrowserImpl\r\n}","import {  inject, injectable } from \"inversify\"\r\nimport { ReaderSettings } from \"../../dto/reader-settings.js\"\r\nimport { DatabaseService } from \"../../service/core/database-service.js\"\r\nimport { ReaderSettingsRepository } from \"../reader-settings-repository.js\"\r\n\r\n@injectable()\r\nclass ReaderSettingsRepositoryBrowserImpl implements ReaderSettingsRepository {\r\n\r\n    db:any\r\n    dbName:string = \"reader-settings\"\r\n\r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            initialRecords: false\r\n        })\r\n    }\r\n\r\n    constructor(\r\n    ) {}\r\n\r\n    async put(readerSettings:ReaderSettings): Promise<void> {     \r\n        \r\n        //Just gonna have one record\r\n        readerSettings._id = \"reader-settings\"\r\n        \r\n        await this.db.put(readerSettings)\r\n    }\r\n\r\n\r\n    async get(): Promise<ReaderSettings> {     \r\n        \r\n        let result\r\n\r\n        try {\r\n            result = await this.db.get(\"reader-settings\")\r\n        } catch(ex) {}\r\n\r\n        if (!result) {\r\n            result = new ReaderSettings()\r\n            result._id = \"reader-settings\"\r\n        }\r\n\r\n\r\n        return Object.assign(new ReaderSettings(), result )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport {\r\n    ReaderSettingsRepositoryBrowserImpl\r\n}","import { inject, injectable } from \"inversify\"\r\nimport { RowItemViewModel } from \"../../dto/item-page.js\"\r\nimport { Item } from \"../../dto/item.js\"\r\nimport { Changeset, DatabaseService } from \"../../service/core/database-service.js\"\r\nimport { RowItemViewModelRepository } from \"../row-item-view-model-repository.js\"\r\n\r\n\r\n\r\n\r\n@injectable()\r\nclass RowItemViewModelRepositoryBrowserImpl implements RowItemViewModelRepository {\r\n\r\n\r\n    changesets:Changeset[] = [\r\n        {\r\n            id: '0',\r\n            changeset: async (db) => {\r\n\r\n                await db.createIndex({\r\n                    index: {\r\n                        fields: ['tokenId']\r\n                    }\r\n                })\r\n                        \r\n            }\r\n        }\r\n    ]\r\n\r\n\r\n    db:any\r\n    dbName:string = \"row-item-view-models\"\r\n    \r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n    \r\n    constructor() {}\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            initialRecords: true,\r\n            initialRecordsPath: \"t/all.json\",\r\n            changesets: this.changesets\r\n        })\r\n    }\r\n\r\n\r\n    async get(_id: string): Promise<RowItemViewModel> {\r\n        return this.db.get(_id)\r\n    }\r\n    \r\n\r\n\r\n    async put(item: Item) {\r\n        await this.db.put(item)\r\n    }\r\n\r\n\r\n\r\n    async getByTokenIds(ids:number[]) : Promise<RowItemViewModel[]> {\r\n\r\n        let response = await this.db.find({\r\n            selector: {\r\n                tokenId: { $in: ids },\r\n            }\r\n        })\r\n\r\n        if (response.docs?.length > 0) {\r\n            return response.docs\r\n        } else {\r\n            return []\r\n        }\r\n    }\r\n\r\n\r\n\r\n    \r\n}\r\n\r\nexport {\r\n    RowItemViewModelRepositoryBrowserImpl\r\n}\r\n\r\n\r\n","import { inject, injectable } from \"inversify\"\r\nimport { Changeset, DatabaseService } from \"../../service/core/database-service.js\"\r\n\r\nimport { StaticPageRepository } from \"../static-page-repository.js\"\r\nimport { StaticPage } from \"../../dto/static-page.js\"\r\n\r\n\r\n@injectable()\r\nclass StaticPageRepositoryBrowserImpl implements StaticPageRepository {\r\n\r\n    changesets:Changeset[] = [{\r\n        id: '0',\r\n        changeset: async (db) => {\r\n            //Create indexes\r\n            await db.createIndex({\r\n                index: {\r\n                    fields: ['channelId']\r\n                }\r\n            })\r\n            await db.createIndex({\r\n                index: {\r\n                    fields: ['dateCreated']\r\n                }\r\n            })\r\n            \r\n        }\r\n    }]\r\n\r\n\r\n\r\n    db:any\r\n    dbName:string = \"static-pages\"\r\n    \r\n    @inject('DatabaseService')\r\n    private databaseService: DatabaseService\r\n    \r\n    constructor() {}\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            changesets: this.changesets,\r\n            initialRecords: true\r\n        })\r\n    }\r\n\r\n\r\n    async get(_id: string): Promise<StaticPage> {\r\n        return Object.assign(new StaticPage(), await this.db.get(_id))\r\n    }\r\n\r\n    async listByLocation(location:string, skip:number): Promise<StaticPage[]> {\r\n\r\n        let response = await this.db.find({\r\n            selector: {\r\n                locations: { $all: [location] },\r\n                dateCreated: { $exists: true }\r\n            },\r\n            sort: [{ 'dateCreated': 'asc' }],\r\n            skip: skip\r\n        })\r\n\r\n        return response.docs\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    StaticPageRepositoryBrowserImpl\r\n}\r\n\r\n\r\n","import axios from \"axios\"\nimport { inject, injectable } from \"inversify\"\nimport { TokenOwnerPageRepository } from \"../../../reader/repository/token-owner-page-repository.js\"\nimport { TokenOwnerPage, TokenOwnerPageTotals } from \"../../dto/token-owner-page.js\"\n\n@injectable()\nclass TokenOwnerPageRepositoryBrowserImpl implements TokenOwnerPageRepository {\n\n    constructor(\n        @inject(\"baseURI\") private baseURI:Function,\n        @inject(\"hostname\") private hostname:Function\n    ) {}\n\n    async getHome(): Promise<TokenOwnerPage> {\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}sync/tokenOwner/pages/home.json`)    \n        return response.data\n    }\n\n    async getTotals(): Promise<TokenOwnerPageTotals> {\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}sync/tokenOwner/pages/total.json`)    \n        return response.data\n    }\n\n    async get(pageNumber: number): Promise<TokenOwnerPage> {   \n\n        const response = await axios.get(`${this.hostname()}${this.baseURI()}sync/tokenOwner/pages/${pageNumber}.json`)\n            \n        return response.data\n    }\n\n}\n\nexport {\n    TokenOwnerPageRepositoryBrowserImpl\n}\n\n\n","import axios from \"axios\"\r\nimport {  inject, injectable } from \"inversify\"\r\nimport { TokenOwner } from \"../../dto/token-owner.js\"\r\nimport { DatabaseService } from \"../../../reader/service/core/database-service.js\"\r\nimport { changesets, TokenOwnerRepository } from \"../token-owner-repository.js\"\r\n\r\n\r\n@injectable()\r\nclass TokenOwnerRepositoryBrowserImpl implements TokenOwnerRepository {\r\n  \r\n    db:any\r\n    dbName:string = \"token-owners\"\r\n\r\n    @inject('DatabaseService')\r\n    private databaseService:DatabaseService\r\n\r\n    @inject('baseURI') \r\n    private baseURI:Function\r\n\r\n\r\n    async load() {\r\n        this.db = await this.databaseService.getDatabase({\r\n            name: this.dbName,\r\n            initialRecords: false,\r\n            changesets: changesets\r\n        })\r\n    }\r\n\r\n    constructor() {}\r\n\r\n    async getENS(_id: string): Promise<string> {\r\n\r\n        let name\r\n\r\n        try {\r\n            //Download it.\r\n            let result:any = await axios.get(`${this.baseURI()}sync/tokenOwner/${_id}/ens.json`)\r\n            name = result.data?.name\r\n        } catch(ex) {}\r\n\r\n        return name\r\n    }\r\n\r\n\r\n    async get(_id:string): Promise<TokenOwner> {    \r\n        \r\n        try {\r\n            //Download it.\r\n            let result = await axios.get(`${this.baseURI()}sync/tokenOwner/${_id}/tokenOwner.json`)\r\n            return Object.assign(new TokenOwner(), result.data)\r\n        } catch(ex) {\r\n            console.log(ex)\r\n        }\r\n\r\n    }\r\n\r\n    async put(tokenOwner:TokenOwner) : Promise<TokenOwner> {\r\n        return\r\n    }\r\n\r\n    async putAll(tokenOwners:TokenOwner[]) : Promise<void> {\r\n        return\r\n    }\r\n\r\n    async list(limit: number, skip: number): Promise<TokenOwner[]> {\r\n        return\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    TokenOwnerRepositoryBrowserImpl\r\n}","import axios from \"axios\"\r\nimport {  inject, injectable } from \"inversify\"\r\nimport { Token } from \"../../dto/token.js\"\r\n\r\nimport { TokenRepository } from \"../token-repository.js\"\r\n\r\n\r\n@injectable()\r\nclass TokenRepositoryBrowserImpl implements TokenRepository {\r\n  \r\n\r\n    @inject('baseURI') \r\n    private baseURI:Function\r\n\r\n\r\n    constructor() {}\r\n\r\n\r\n\r\n    async get(_id:string): Promise<Token> {    \r\n        \r\n        try {\r\n            //Download it.\r\n            let result = await axios.get(`${this.baseURI()}sync/tokens/${_id}/token.json`)\r\n            return Object.assign(new Token(), result.data)\r\n        } catch(ex) {\r\n            // console.log(ex)\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    TokenRepositoryBrowserImpl\r\n}","import { Item } from \"../dto/item.js\"\nimport { ItemPage, RowItemViewModel } from \"../dto/item-page.js\"\n\nlet CHUNK_SIZE = 10\n\ninterface ItemRepository {\n    get(_id:string): Promise<Item>\n    list(skip:number, limit?:number): Promise<Item[]>\n    getByTokenId(tokenId:number) : Promise<Item>\n    getByTokenIds(tokenIds:number[]) : Promise<Item[]>\n    getRowItemViewModelsByAttribute(traitType:string, value:string, pageNumber:number) : Promise<ItemPage>\n    getRowItemViewModelsByTokenIds(tokenIds:number[]) : Promise<RowItemViewModel[]>\n    getRowItemViewModelsByTokenId(tokenId:number) : Promise<RowItemViewModel>\n    query(query:string) : Promise<Item[]>\n    all() : Promise<Item[]>\n    listByTokenId(startTokenId:number, limit:number) : Promise<Item[]> \n    getRowItemViewModelsByOwner(address:string, pageNumber:number) : Promise<ItemPage> \n\n}\n\nexport {\n    ItemRepository, CHUNK_SIZE\n}\n","import { Changeset } from \"../../reader/service/core/database-service.js\"\nimport { TokenOwner } from \"../dto/token-owner.js\"\n\n\ninterface TokenOwnerRepository {\n    get(_id:string): Promise<TokenOwner>\n    put(tokenOwner:TokenOwner) : Promise<TokenOwner>\n    putAll(tokenOwners:TokenOwner[]) : Promise<void>\n    getENS(_id:string) : Promise<string>\n    list(limit: number, skip: number): Promise<TokenOwner[]> \n\n}\n\n\nlet changesets:Changeset[] = [\n    {\n        id: '0',\n        changeset: async (db) => {\n\n            await db.createIndex({\n                index: {\n                    fields: ['count']\n                }\n            })\n\n            await db.put({\n                _id: '_design/by_token_id',\n                views: {\n                    by_token_id: {\n                            map: function (doc) { \n                          \n                                for (let tokenId of doc.tokenIds) {\n                                    //@ts-ignore\n                                    emit(tokenId)\n                                }\n\n                            }.toString(),\n                    }\n                }\n            })\n\n        }\n    }\n]\n\n\nexport {\n    TokenOwnerRepository, changesets\n}\n","import { inject, injectable } from \"inversify\";\nimport { AnimationRepository } from \"../repository/animation-repository.js\";\nimport { Animation } from \"../dto/animation.js\";\nimport { ItemService } from \"./item-service.js\";\n\n\n@injectable()\nclass AnimationService {\n\n  @inject(\"AnimationRepository\")\n  private animationRepository:AnimationRepository\n\n  constructor() { }\n\n  async get(_id: string): Promise<Animation> {\n    return this.animationRepository.get(_id)\n  }\n\n}\n\n\nexport { AnimationService }\n\n","import { inject, injectable } from \"inversify\";\r\nimport { AttributeTotal } from \"../dto/attribute-total.js\";\r\nimport { Channel } from \"../dto/channel.js\";\r\nimport { Item } from \"../dto/item.js\";\r\nimport { AttributeTotalRepository } from \"../repository/attribute-total-repository.js\";\r\n\r\n@injectable()\r\nclass AttributeTotalService {\r\n\r\n    @inject(\"AttributeTotalRepository\")\r\n    private attributeTotalRepository:AttributeTotalRepository\r\n\r\n    constructor() {}\r\n\r\n    async get(_id:string): Promise<AttributeTotal> {      \r\n        return this.attributeTotalRepository.get(_id)\r\n    }\r\n\r\n    async put(attributeTotal:AttributeTotal) : Promise<void> {\r\n        return this.attributeTotalRepository.put(attributeTotal)\r\n    }\r\n\r\n    async getByIds(ids:string[]) : Promise<AttributeTotal[]> {\r\n        return this.attributeTotalRepository.getByIds(ids)\r\n    }\r\n\r\n    async list() : Promise<AttributeTotal[]> {\r\n        return this.attributeTotalRepository.list()\r\n    }\r\n\r\n    async buildAttributeTotals(channel:Channel, items:Item[]) : Promise<AttributeTotal[]> {\r\n\r\n        let totals:AttributeTotal[] = []\r\n        \r\n        //Build starting total objects.\r\n        let totalKeys = new Set(items.map( item => item.attributeSelections.map( as => `${as.traitType}:::${as.value}`) ).flat())\r\n\r\n\r\n        for (let totalKey of totalKeys) {\r\n\r\n            let attributeTotal:AttributeTotal = {\r\n                _id: totalKey,\r\n                traitType: totalKey.substring(0, totalKey.indexOf(\":::\")),\r\n                value: totalKey.substring(totalKey.indexOf(\":::\") + 3, totalKey.length ),\r\n                count: 0,\r\n                tokenIds: []\r\n            }\r\n\r\n            totals.push(attributeTotal)\r\n\r\n        }\r\n\r\n\r\n\r\n        //Loop through the items\r\n        for (let item of items) {\r\n\r\n            for (let as of item.attributeSelections) {\r\n                \r\n                //Find the matching AttributeTotal\r\n                let total:AttributeTotal = totals.filter( at => at.traitType == as.traitType && at.value == as.value)[0]\r\n\r\n                // console.log(as.traitType, as.value, totals.filter( at => at.traitType == as.traitType))\r\n\r\n                //Add one to the report total\r\n                total.tokenIds.push(item.tokenId)\r\n                total.count++\r\n            }\r\n\r\n        }\r\n\r\n        //Loop through keys and calculate totals for each one.\r\n        for (let total of totals) {\r\n            total.categoryPercent = new Intl.NumberFormat('default', {\r\n                style: 'percent',\r\n                minimumFractionDigits: 2,\r\n                maximumFractionDigits: 2,\r\n              }).format((total.count / channel.itemCount))\r\n        }\r\n\r\n\r\n\r\n        //Sort totals by count\r\n        totals.sort((a,b) => b.count - a.count)\r\n\r\n\r\n        return totals\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {\r\n    AttributeTotalService\r\n}","import { Author } from \"../dto/author.js\";\nimport { inject, injectable } from \"inversify\";\nimport { AuthorRepository } from \"../repository/author-repository.js\";\nimport { WalletService } from \"./core/wallet-service.js\";\n\n\n@injectable()\nclass AuthorService {\n\n  @inject(\"AuthorRepository\")\n  private authorRepository:AuthorRepository\n\n  @inject(\"WalletService\")\n  private walletService:WalletService\n\n  constructor() { }\n\n  async get(_id: string): Promise<Author> {\n    return this.authorRepository.get(_id)\n  }\n\n  getDisplayName(author: Author): string {\n    if (!author) return\n    if (author.name) return author.name\n    return this.walletService.truncateEthAddress(author._id)\n  }\n\n\n}\n\n\nexport { AuthorService }\n\n","import { inject, injectable } from \"inversify\"\r\n\r\nimport { Channel } from \"../dto/channel.js\"\r\nimport { ChannelRepository } from \"../repository/channel-repository.js\"\r\n\r\n@injectable()\r\nclass ChannelService {\r\n\r\n  @inject(\"ChannelRepository\")\r\n  private channelRepository:ChannelRepository\r\n\r\n  constructor() { }\r\n\r\n  async get(): Promise<Channel> {\r\n    return this.channelRepository.get()\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n  ChannelService\r\n}\r\n","import { validate, ValidationError } from \"class-validator\";\r\nimport { inject, injectable } from \"inversify\";\r\nimport { ComponentState } from \"../../dto/component-state.js\";\r\nimport { ComponentStateRepository } from \"../../repository/component-state-repository.js\";\r\nimport { ValidationException } from \"../../util/validation-exception.js\";\r\n\r\n@injectable()\r\nclass ComponentStateService {\r\n\r\n    @inject(\"ComponentStateRepository\")\r\n    private componentStateRepository:ComponentStateRepository\r\n\r\n    constructor(\r\n    ) {}\r\n\r\n    async get(_id:string) {\r\n        return this.componentStateRepository.get(_id)\r\n    }\r\n\r\n\r\n    async put(componentState:ComponentState) {\r\n\r\n        if (!componentState.dateCreated) {\r\n            componentState.dateCreated = new Date().toJSON()\r\n        }\r\n\r\n        componentState.lastUpdated = new Date().toJSON()\r\n\r\n        //Validate\r\n        let errors: ValidationError[] = await validate(componentState, {\r\n            forbidUnknownValues: true,\r\n            whitelist: true\r\n        })\r\n\r\n        if (errors.length > 0) {\r\n            throw new ValidationException(errors)\r\n        }\r\n\r\n        return this.componentStateRepository.put(componentState)\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n    ComponentStateService\r\n}","\r\nimport { inject, injectable } from 'inversify';\r\n\r\n\r\n@injectable()\r\nclass DatabaseService {\r\n\r\n    dbCache = {}\r\n\r\n    constructor(\r\n        @inject('baseURI') private baseURI:Function,\r\n        @inject('hostname') private hostname:Function,\r\n        @inject('PouchDB') private PouchDB,\r\n        @inject('channelId') private channelId:Function,\r\n\r\n    ) {}\r\n\r\n    async getDatabase(config:DatabaseConfig) {\r\n\r\n        let PouchDB = await this.PouchDB()\r\n\r\n\r\n        const fullName = `./pouch/${this.channelId()}/${config.name}`\r\n\r\n        if (this.dbCache[fullName]) return this.dbCache[fullName]\r\n\r\n        //Create or open database\r\n        this.dbCache[fullName] = new PouchDB(fullName)\r\n\r\n        const details = await this.dbCache[fullName].info()\r\n\r\n        //If it's empty build the indexes\r\n        if (details.doc_count == 0 && details.update_seq == 0) {\r\n\r\n            //Create indexes\r\n            if (config.changesets) {\r\n\r\n                console.log(`Creating indexes for ${fullName}`)\r\n\r\n                let localChangesets:LocalChangeset = { \r\n                    _id: \"_local/changesets\",\r\n                    ids: [] \r\n                }\r\n\r\n                for (let changeset of config.changesets) {\r\n                    await changeset.changeset(this.dbCache[fullName])\r\n                    localChangesets.ids.push(changeset.id)\r\n                    console.log(`New changeset detected...${changeset.id}`)\r\n                }\r\n\r\n                //Mark changesets as run\r\n                await this.dbCache[fullName].put(localChangesets)\r\n\r\n                \r\n            }\r\n\r\n            //Load initial records\r\n            if (config.initialRecords) {\r\n                await this.loadInitialRecords(config, fullName)\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            //Otherwise check if each changeset has been applied and if not then apply it.\r\n            if (config.changesets) {\r\n\r\n                let localChangesets:LocalChangeset \r\n\r\n                try {\r\n                    localChangesets = await this.dbCache[fullName].get(\"_local/changesets\")\r\n                } catch(ex) {}\r\n\r\n                if (!localChangesets) {\r\n                    localChangesets = { \r\n                        _id: \"_local/changesets\",\r\n                        ids: [] \r\n                    }\r\n                }\r\n\r\n\r\n                let updated = false\r\n\r\n                for (let changeset of config.changesets) {\r\n                    \r\n                    //If it hasn't been run then run it.\r\n                    if (!localChangesets.ids.includes(changeset.id)) {\r\n\r\n                        try {\r\n                            //Execute the changes. This could fail if the changes have actually been applied but it wasn't marked. \r\n                            //But in that scenario we just accept the failure and mark it applied. \r\n                            await changeset.changeset(this.dbCache[fullName])\r\n                        } catch(ex) { }\r\n                        \r\n                        \r\n                        localChangesets.ids.push(changeset.id)\r\n                        \r\n                        updated = true\r\n                        \r\n                        console.log(`New changeset detected...${changeset.id}`)\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                if (updated) {\r\n                    console.log(`Saving changeset log...`, localChangesets)\r\n                    await this.dbCache[fullName].put(localChangesets)\r\n                }\r\n\r\n                \r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        return this.dbCache[fullName]\r\n\r\n    }\r\n\r\n    private async loadInitialRecords(config: DatabaseConfig, fullName: string) {\r\n\r\n        let response\r\n\r\n        if (config.initialRecordsPath) {\r\n            response = await fetch(`${this.hostname()}${this.baseURI()}${config.initialRecordsPath}`)\r\n        } else {\r\n            response = await fetch(`${this.hostname()}${this.baseURI()}backup/export/backup/${config.name}.json`)\r\n        }\r\n\r\n        let initialRecords = await response.json()\r\n\r\n\r\n        if (initialRecords?.length > 0) {\r\n            console.log(`Loading ${initialRecords?.length} initial records for ${fullName}`);\r\n            await this.dbCache[fullName].bulkDocs(initialRecords);\r\n        }\r\n\r\n    }\r\n}\r\n\r\ninterface DatabaseConfig {\r\n    name:string\r\n    changesets?:Changeset[]\r\n    initialRecords?:boolean\r\n    initialRecordsPath?:string\r\n}\r\n\r\ninterface Changeset {\r\n    id:string\r\n    changeset(db): Promise<void>\r\n}\r\n\r\ninterface LocalChangeset {\r\n    _id:string\r\n    ids:string[]\r\n}\r\n\r\nexport {\r\n    DatabaseService, Changeset\r\n}\r\n","import { injectable } from \"inversify\";\n\n@injectable()\nclass PagingService {\n    \n    constructor() {}\n\n    /**\n     * This function takes in a limit, offset, and count and generates a model \n     * \n     * @param offset \n     * @param limit \n     * @param count \n     */\n    buildPagingViewModel(offset: number, limit: number, count: number, numberOfPages:number) : PagingViewModel {\n\n        let viewModel = new PagingViewModel()\n\n        viewModel.offset = offset ? offset : 0\n        viewModel.limit = limit\n        viewModel.count = count \n\n        viewModel.start = viewModel.offset + 1\n\n\n        viewModel.end = Math.min(viewModel.offset + limit, count) \n\n        \n        viewModel.previousOffset = Math.max(viewModel.offset-limit, 0);\n\n        if ( (viewModel.offset + limit) < count ) {\n            viewModel.nextOffset = viewModel.offset + limit\n        }\n\n        \n        //Set current page\n        viewModel.page = viewModel.offset/viewModel.limit + 1\n        if (viewModel.page > viewModel.endPage) viewModel.page = viewModel.endPage\n\n        viewModel.endPage = Math.ceil(viewModel.count / viewModel.limit)\n\n\n        viewModel.lastOffset = viewModel.endPage * viewModel.limit - viewModel.limit\n        \n\n        viewModel.showNext = viewModel.endPage > viewModel.page\n        viewModel.showPrevious = viewModel.offset != 0\n\n        viewModel.showFirst = viewModel.page > 2\n        viewModel.showLast = viewModel.page < (viewModel.endPage - 1)\n\n\n        //Number of pages shouldn't be past the end\n        // numberOfPages = Math.min(numberOfPages, viewModel.endPage - viewModel.page)\n\n        // viewModel.pageNumbers = []\n        // for (let i=viewModel.page; i < numberOfPages + viewModel.page; i++) {\n        //     viewModel.pageNumbers.push({\n        //         display: i + 1,\n        //         offset: i * viewModel.limit\n        //     })\n        // }\n\n        return viewModel\n    }\n\n\n\n    calculateEndIndex(limit, offset, currentCount) {\n        let endIndex = offset + limit - 1\n\n        //If it's the last page don't go past the final record\n        return Math.min( currentCount - 1,  endIndex )\n    }\n\n\n    calculateDescendingEndIndex(limit, offset) {\n        let endIndex = offset - (limit - 1)\n\n        //Don't go lower than 0\n        return Math.max( 0,  endIndex )\n    }\n\n    calculateDescendingOffset(offset, currentCount) {\n\n        let calculatedOffset = (currentCount - 1) - offset\n        // console.log(`offset: ${offset}, currentCount: ${currentCount}, calculatedOffset: ${calculatedOffset}`)\n        return Math.max( 0,  calculatedOffset )\n    }\n\n\n}\n\nclass PagingViewModel {\n\n    page:number\n    pageNumbers:PageNumber[]\n    endPage:number\n\n    offset: number\n    limit: number\n    count: number\n\n    start: number\n    end: number \n\n    previousOffset: number \n    nextOffset: number \n    lastOffset:number\n\n    showPrevious:boolean\n    showNext:boolean\n    showFirst:boolean\n    showLast:boolean\n\n}\n\ninterface PageNumber {\n    display:number\n    offset:number\n}\n\nexport {\n    PagingService,\n    PagingViewModel\n}\n","\nimport { inject, injectable } from \"inversify\";\n\n@injectable()\nclass QueueService {\n\n    constructor(\n      @inject(\"framework7\") private app,\n    ) {}\n\n    async queuePromiseView(promiseView) : Promise<any> {\n\n      const self = this\n\n      let queueItem: QueueItem = {\n        id: Guid.newGuid(),\n        icon: promiseView.icon,\n        title: promiseView.title,\n      }\n\n      let before = async function () {\n        return new Promise<void>((resolve, reject) => {\n          self._beforeSaveAction(queueItem)\n          resolve()\n        })\n      }\n\n      let after = async function() {\n\n        let result = await promiseView.promise\n\n        try {\n          console.log(\"Transaction hash is \", result)\n\n\n          self._showSuccess(result, queueItem)\n        } catch(ex) {\n          self._showError(ex, queueItem)\n        }\n\n        return result\n\n      }\n\n      return before()\n              .then(after)\n    }\n\n    private _beforeSaveAction(queueItem: QueueItem) : void {     \n\n      // Create toast with close button\n      queueItem.toast = this.app.toast.create({\n        text: queueItem.title,\n        closeButton: true\n      })\n\n      queueItem.toast.open()\n\n    }\n\n    private _showError(error, queueItem:QueueItem) {\n\n      queueItem.toast.close()\n\n      console.log(error)\n\n      let toast = {\n        text: error.message,\n        closeButton: true,\n        closeButtonText: \"Close\",\n        closeTimeout: 5000\n      }\n\n      this.app.toast.create(toast).open()\n\n    }\n\n    private _showSuccess(result, queueItem:QueueItem): void {\n\n      const self = this\n\n      queueItem.toast.close()\n\n      let toast = {\n        text: \"Transaction Submitted\",\n        closeButton: true,\n        closeTimeout: 5000\n      }\n\n      this.app.toast.create(toast).open()\n    }\n\n}\n\ninterface QueueItem {\n  toast?: any\n\n  id: string,\n  icon: string,\n  title: string,\n}\n\n//from https://stackoverflow.com/questions/26501688/a-typescript-guid-class\nclass Guid {\n  static newGuid() {\n      return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n          var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n          return v.toString(16);\n      });\n  }\n}\n\nexport { QueueService, QueueItem }\n","import { QuillDeltaToHtmlConverter } from \"quill-delta-to-html\"\nimport { deltaToMarkdown } from 'quill-delta-to-markdown'\n\nimport { injectable } from 'inversify';\n\n\n@injectable()\nclass QuillService {\n\n  constructor() {}\n\n  async translateContent(content: any): Promise<string> {\n\n    if (!content?.ops) return \"\"\n\n    // console.log(content.ops)\n\n    const qdc = new QuillDeltaToHtmlConverter(content.ops, { })\n\n    //Render dividers into HTML\n    qdc.renderCustomWith(function (customOp, contextOp) {\n\n      if (customOp.insert.type === 'divider') {\n        return \"<hr />\"\n      }\n\n      if (customOp.insert.type === 'ipfsimage') {\n        \n        let img = `<img src=\"${customOp.insert.value.src}\" `\n\n        if (customOp.insert.value.width) {\n          img += `width=\"${customOp.insert.value.width}\" `\n        }\n\n        if (customOp.insert.value.height) {\n          img += `height=\"${customOp.insert.value.height}\" `\n        }\n\n        if (customOp.insert.value.style) {\n          img += `style=\"${customOp.insert.value.style}\"`\n        }\n\n        img += \"/>\"\n\n        return img\n      }\n\n    })\n\n    return qdc.convert()\n  }\n\n\n  async generateMarkdown(content: any) : Promise<string> {\n    return deltaToMarkdown(content)\n  }\n\n\n}\n\n\n\nexport { QuillService }\n\n","class RoutingService {\n\n    static async resolveWithSpinner(resolve, url, options?) {\n\n        if (!globalThis.app) return \n\n        globalThis.app.preloader.show()\n\n        resolve({ \n          componentUrl: url, \n          options: options\n        })\n        \n\n        globalThis.app.preloader.hide()\n\n    }\n\n    static getReaderRoutes (baseURI) {\n\n        const routes = []\n\n        //Map the base route without a slash if it's longer than just a slash\n        if (baseURI != \"/\" && baseURI.endsWith(\"/\")) {\n    \n          routes.push({\n            path: `${baseURI.substring(0, baseURI.length -1)}`,\n            async async({ resolve, reject, to }) {\n              await RoutingService.resolveWithSpinner(resolve, 'index.html')\n            }\n          })\n    \n        }\n    \n        RoutingService.addSharedRoutes(routes, baseURI)\n    \n\n        routes.push({\n          path: '(.*)',\n          //@ts-ignore\n          async async({ resolve, reject, to }) {\n            console.log(`404 error: ${to.path}`)\n            await RoutingService.resolveWithSpinner(resolve, '404.html')\n          }\n        })\n\n          \n        return routes\n\n\n    }\n\n    static getLibraryRoutes (libraryURL) {\n\n        let resolvedLibraryURL = `${libraryURL}/partial`\n\n        const routes = [\n          {\n            path: `${libraryURL}`,\n            async async({ resolve, reject, to }) {\n              await RoutingService.resolveWithSpinner(resolve, `${resolvedLibraryURL}/index.html`)\n            }\n          },\n\n          {\n            path: `${libraryURL}/`,\n            async async({ resolve, reject, to }) {\n              await RoutingService.resolveWithSpinner(resolve, `${resolvedLibraryURL}/index.html`)\n            }\n          },\n\n\n          {\n            path: `${libraryURL}/index.html`,\n            async async({ resolve, reject, to }) {\n              await RoutingService.resolveWithSpinner(resolve,`${resolvedLibraryURL}/index.html`)\n            }\n          }\n\n        ]\n    \n        RoutingService.addSharedRoutes(routes, \"/r/:reader_slug/\")\n    \n        routes.push({\n          path: '(.*)',\n          //@ts-ignore\n          async async({ resolve, reject, to }) {\n            console.log(`404 error: ${to.path}`)\n            await RoutingService.resolveWithSpinner(resolve, `${resolvedLibraryURL}/404.html`)\n          }\n        })\n\n\n        return routes\n    }\n\n    private static addSharedRoutes(routes, baseURI) {\n            \n        let resolvedBaseURI\n\n        if (baseURI.indexOf(':reader_slug') > 0) {\n          resolvedBaseURI = baseURI.replace(\":reader_slug\", \"{{reader_slug}}\")\n        } else {\n          resolvedBaseURI = baseURI\n        }\n\n        resolvedBaseURI += \"partial/\"\n\n\n        routes.push(...[\n            {\n              path: `${baseURI}`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}index.html`)\n              }\n            },\n            {\n              path: `${baseURI}index.html`,\n              async async({ resolve, reject, to }) {\n                console.log()\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}index.html`)\n              }\n            },\n      \n      \n            {\n              path: `${baseURI}mint.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}mint.html`)\n              }\n            },\n      \n            {\n              path: `${baseURI}search.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}search.html`)\n              }\n            },      \n            {\n              path: `${baseURI}explore.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}explore.html`)\n              }\n            },\n            {\n              path: `${baseURI}activity`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}activity/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}activity/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}activity/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}leaderboard`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}leaderboard/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}leaderboard/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve,`${resolvedBaseURI}leaderboard/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}sales`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}sales/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}sales/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}sales/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}attributes`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}attributes/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}attributes/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}attributes/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}attribute`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}attribute/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}attribute/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}attribute/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}u`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}u/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}u/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}u/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}u/activity`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}u/activity/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}u/activity/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}u/activity/index.html`)\n              }\n            },\n            {\n              path: `${baseURI}list-:page.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}list-{{page}}.html`)\n              }\n            },\n            {\n              path: `${baseURI}t/:tokenId`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}t/{{tokenId}}/index.html`, { force: true })\n              }\n            },\n            {\n              path: `${baseURI}t/:tokenId/index.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve,`${resolvedBaseURI}t/{{tokenId}}/index.html`, { force: true })\n              }\n            },\n            {\n              path: `${baseURI}s/:slug.html`,\n              async async({ resolve, reject, to }) {\n                await RoutingService.resolveWithSpinner(resolve, `${resolvedBaseURI}s/{{slug}}.html`)\n              }\n            }\n      \n        ])\n\n    }\n\n\n}\n\n\nexport { RoutingService }","import { inject, injectable } from \"inversify\"\r\n\r\nimport { AnimationRepository } from \"../../repository/animation-repository.js\"\r\nimport { AttributeTotalRepository } from \"../../repository/attribute-total-repository.js\"\r\nimport { AuthorRepository } from \"../../repository/author-repository.js\"\r\nimport { ChannelRepository } from \"../../repository/channel-repository.js\"\r\nimport { ComponentStateRepository } from \"../../repository/component-state-repository.js\"\r\n\r\nimport { ImageRepository } from \"../../repository/image-repository.js\"\r\nimport { ItemRepository } from \"../../repository/item-repository.js\"\r\nimport { ReaderSettingsRepository } from \"../../repository/reader-settings-repository.js\"\r\nimport { RowItemViewModelRepository } from \"../../repository/row-item-view-model-repository.js\"\r\nimport { StaticPageRepository } from \"../../repository/static-page-repository.js\"\r\n\r\n\r\n@injectable()\r\nclass SchemaService {\r\n\r\n    @inject(\"ItemRepository\")\r\n    private itemRepository:ItemRepository \r\n\r\n    @inject(\"ChannelRepository\")\r\n    private channelRepository:ChannelRepository\r\n\r\n    @inject(\"AuthorRepository\")\r\n    private authorRepository:AuthorRepository\r\n\r\n    @inject(\"ImageRepository\")\r\n    private imageRepository:ImageRepository\r\n    \r\n    @inject(\"AnimationRepository\")\r\n    private animationRepository:AnimationRepository\r\n\r\n    @inject(\"StaticPageRepository\")\r\n    private staticPageRepository:StaticPageRepository\r\n\r\n    @inject(\"ReaderSettingsRepository\")\r\n    private readerSettingsRepository:ReaderSettingsRepository\r\n\r\n    @inject(\"RowItemViewModelRepository\")\r\n    private rowItemViewModelRepository:RowItemViewModelRepository\r\n\r\n    @inject(\"AttributeTotalRepository\")\r\n    private attributeTotalRepository:AttributeTotalRepository\r\n\r\n    @inject(\"ComponentStateRepository\")\r\n    private componentStateRepository:ComponentStateRepository\r\n\r\n\r\n    constructor() {\r\n\r\n    }\r\n\r\n    async load(dbs:string[]) {\r\n\r\n        const repositories = this.getRepositories()\r\n\r\n        for (let db of dbs) {\r\n            let repo = repositories.filter( r => r.dbName == db)[0]\r\n            await repo?.load()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async reloadAll() {\r\n\r\n        const repositories = this.getRepositories()\r\n\r\n        for (let repo of repositories) {\r\n            await repo.load()\r\n        }\r\n\r\n    }\r\n\r\n    getRepositories() {\r\n\r\n        const repositories = []\r\n\r\n        repositories.push(this.itemRepository)\r\n        repositories.push(this.channelRepository)\r\n        repositories.push(this.authorRepository)\r\n        repositories.push(this.imageRepository)\r\n        repositories.push(this.animationRepository)\r\n        repositories.push(this.staticPageRepository)\r\n        repositories.push(this.readerSettingsRepository)\r\n\r\n        repositories.push(this.staticPageRepository)\r\n        repositories.push(this.readerSettingsRepository)\r\n\r\n        repositories.push(this.attributeTotalRepository)\r\n        repositories.push(this.componentStateRepository)\r\n        repositories.push(this.rowItemViewModelRepository)\r\n\r\n        return repositories\r\n\r\n    }\r\n\r\n\r\n    async loadWallet(walletAddress:string) {\r\n        console.log(`Loading wallet: ${walletAddress}`)\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport {\r\n    SchemaService\r\n}","import { injectable, inject } from \"inversify\";\n\n\n\n@injectable()\nclass UiService {\n\n    constructor(@inject(\"framework7\") public app) {\n    }\n\n    showExceptionPopup(ex) {\n        console.log(ex)\n        this.app.dialog.alert(ex.message, \"There was an error\")\n    }\n\n    showPopup(message) {\n        this.app.dialog.alert(message)\n    }\n\n\n\n    showAlert(message) {\n        this.app.dialog.alert(message)\n    }\n\n\n    /**\n     * Spinner\n     */\n\n    spinnerDialog: any\n\n    showSpinner(message?:string) {\n\n        if (this.spinnerDialog) this.hideSpinner()\n\n        this.spinnerDialog = this.app.dialog.preloader(message ? message : \"Loading\")\n\n    }\n\n\n    hideSpinner() {\n        if (this.spinnerDialog) {\n            this.spinnerDialog.close()\n            this.spinnerDialog = null \n        }\n    }\n\n\n    progressDialog:any\n\n    showProgress(message:string) {\n\n        if (this.progressDialog) this.hideProgress()\n\n        var progress = 0\n\n        this.progressDialog = this.app.dialog.progress(message ? message : \"Loading\", progress)\n\n    }\n\n    setProgress(progress:number, message:string) {\n        if (this.progressDialog) {\n            this.progressDialog.setProgress(progress)\n            this.progressDialog.setText(message)\n        }\n    }\n\n    hideProgress() {\n        if (this.progressDialog) {\n            this.progressDialog.close()\n            this.progressDialog = null \n        }\n    }\n\n\n}\n\nexport {\n    UiService\n}","import { inject, injectable } from \"inversify\"\r\nimport { WalletService } from \"./wallet-service.js\"\r\nimport { getAddress, Contract } from \"ethers\"\r\n\r\n\r\n@injectable()\r\nclass WalletServiceImpl implements WalletService {\r\n\r\n  public wallet: any\r\n  public address: any\r\n  public ethersContracts:any = {}\r\n\r\n  public provider \r\n  \r\n\r\n  constructor(\r\n    @inject(\"contracts\") private contracts:Function,\r\n    @inject(\"provider\") private getProvider:Function,\r\n    @inject(\"framework7\") private $f7\r\n  ) {\r\n\r\n  }\r\n\r\n  async initProvider() {\r\n\r\n    this.provider = await this.getProvider()\r\n\r\n    globalThis.ethereum?.on('accountsChanged', async (accounts) => {\r\n          \r\n      delete this.address\r\n\r\n      if (accounts?.length > 0) {\r\n        await this.initWallet()\r\n      }\r\n\r\n      this.$f7.views.main.router.refreshPage()\r\n\r\n    })\r\n\r\n    globalThis.ethereum?.on('networkChanged', async (networkId) => {\r\n      this.ethersContracts = {}\r\n      this.provider = await this.getProvider()\r\n\r\n      await this.initWallet()\r\n\r\n    })\r\n\r\n\r\n  }\r\n\r\n  async initWallet() {\r\n\r\n    console.log('Init wallet')\r\n\r\n    delete this.address\r\n\r\n\r\n    if (!this.provider) {\r\n      await this.initProvider()\r\n    }\r\n    \r\n    //@ts-ignore\r\n    let accounts = await this.provider.send(\"eth_accounts\", [])\r\n\r\n    if (accounts?.length > 0) {\r\n      // this.address = accounts[0]\r\n      return this.connect()\r\n    }\r\n    \r\n    console.log(\"Init wallet complete\") \r\n\r\n\r\n  }\r\n\r\n\r\n  async connect() {\r\n    \r\n    console.log(\"Connect wallet\")\r\n\r\n    await this.provider.send(\"eth_requestAccounts\", []);\r\n\r\n    this.wallet = await this.provider.getSigner()\r\n    this.address = await this.getAddress()\r\n    \r\n    console.log(`Wallet ${this.address} connected`) \r\n\r\n  }\r\n\r\n  async getAddress() {\r\n\r\n      if (!this.provider) return\r\n\r\n      let accounts = await this.provider.send(\"eth_accounts\", []);\r\n\r\n      if (accounts?.length > 0) {\r\n        return getAddress(accounts[0]) \r\n      }\r\n\r\n  }\r\n\r\n  async getWallet() {\r\n    return this.provider.getSigner()\r\n  }\r\n\r\n  async getContract(name:string)  {\r\n\r\n    let contracts = await this.contracts()\r\n\r\n    //Initialize and return\r\n    let c = contracts[name]\r\n    this.ethersContracts[name] = new Contract(c.address, c.abi, this.wallet ? this.wallet : this.provider)\r\n\r\n    // console.log(`Getting contract ${name}`)\r\n\r\n    return this.ethersContracts[name]\r\n  }\r\n\r\n\r\n  truncateEthAddress(address) : string {\r\n    if (!address) return\r\n    // Captures 0x + 4 characters, then the last 4 characters.\r\n    const truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/\r\n    const match = address.match(truncateRegex)\r\n    if (!match) return address\r\n    return `${match[1]}…${match[2]}`\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    WalletServiceImpl\r\n}\r\n\r\n","import { inject, injectable } from \"inversify\"\r\n\r\nimport { ERCEvent } from \"../../sync/dto/erc-event.js\"\r\n\r\n\r\n@injectable()\r\nclass ERCEventService {\r\n\r\n    constructor() {}\r\n\r\n    async translateEventToERCEvent(event: any) : Promise<ERCEvent> {\r\n\r\n        let ercEvent = new ERCEvent()\r\n    \r\n        ercEvent.removed = event.removed\r\n        ercEvent.address = event.address\r\n        ercEvent.data = event.data\r\n        ercEvent.topics = event.topics\r\n        ercEvent.logIndex = event.index\r\n        ercEvent.event = event.fragment?.name\r\n        ercEvent.eventSignature = event.eventSignature\r\n        ercEvent.dateCreated = new Date().toJSON()\r\n    \r\n        //Convert BigInt args to strings    \r\n        ercEvent.args = event.args?.map(a => a.toString())\r\n\r\n        ercEvent.namedArgs = {}\r\n\r\n        //Check wether it's a transfer and if it's newer than the most recently recorded transfer\r\n        switch(ercEvent.event) {\r\n                                       \r\n            case \"Transfer\":\r\n                ercEvent.isTransfer = true\r\n                ercEvent.namedArgs.fromAddress = ercEvent.args[0]\r\n                ercEvent.namedArgs.toAddress = ercEvent.args[1]\r\n                ercEvent.namedArgs.tokenId = ercEvent.args[2]\r\n                break\r\n            case \"Approval\":\r\n                ercEvent.namedArgs.owner = ercEvent.args[0]\r\n                ercEvent.namedArgs.approved = ercEvent.args[1]\r\n                ercEvent.namedArgs.tokenId = ercEvent.args[2]\r\n                break\r\n            case \"ApprovalForAll\":\r\n                ercEvent.namedArgs.owner = ercEvent.args[0]\r\n                ercEvent.namedArgs.operator = ercEvent.args[1]\r\n                ercEvent.namedArgs.approved = ercEvent.args[2]\r\n                break\r\n        }\r\n    \r\n\r\n        if (ercEvent.isTransfer && ercEvent.namedArgs?.fromAddress == \"0x0000000000000000000000000000000000000000\") {\r\n            ercEvent.isMint = true\r\n        }\r\n\r\n        if (ercEvent.isTransfer && ercEvent.namedArgs?.toAddress == \"0x0000000000000000000000000000000000000000\") {\r\n            ercEvent.isBurn = true\r\n        }\r\n\r\n    \r\n        // ercEvent._id = `${ercEvent.blockHash}-${ercEvent.transactionHash}-${ercEvent.logIndex}`\r\n\r\n        return ercEvent\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport {\r\n    ERCEventService\r\n}\r\n\r\n","import { inject, injectable } from \"inversify\";\nimport svgToMiniDataURI from 'mini-svg-data-uri'\n\n\nimport { ImageRepository } from \"../repository/image-repository.js\";\nimport { Image } from \"../dto/image.js\";\n\n\n@injectable()\nclass ImageService {\n\n  @inject(\"ImageRepository\")\n  private imageRepository:ImageRepository\n\n  constructor() { }\n\n  async get(_id: string): Promise<Image> {\n    return this.imageRepository.get(_id)\n  }\n\n  async list() : Promise<Image[]> {\n    return this.imageRepository.list()\n  }\n\n  async getUrl(image: Image) {\n\n    if (!image.buffer && !image.svg) return \"\"\n\n    //If we have a buffer return it as a URL\n    if (image.buffer) {\n      return this.bufferToDataURL(\"image/jpg\", image.buffer)\n    } \n\n    if (image.svg) {\n      return this.getSVGURL(image)\n    }\n    \n\n  }\n\n\n  async getSVGURL(image: Image) {\n\n    if (!image.svg) return \"\"\n    return this.svgToDataURL(image.svg)\n\n  }\n\n\n  public svgToDataURL(svgStr) {  \n    return svgToMiniDataURI(svgStr)\n\n    // return \"data:image/svg+xml;base64,\" + Buffer.from(svgStr).toString(\"base64\")\n  }\n\n  public bufferToDataURL (mimeType, buffer) {\n    return `data:${mimeType};base64,${buffer.toString(\"base64\")}`\n  }\n\n}\n\n\nexport { ImageService }\n\n","import { inject, injectable } from \"inversify\";\n\nimport { ItemPage } from \"../dto/item-page.js\";\nimport { ItemPageRepository } from \"../repository/item-page-repository.js\";\n\n@injectable()\nclass ItemPageService {\n\n    @inject(\"ItemPageRepository\")\n    private itemPageRepository:ItemPageRepository\n  \n    constructor(\n    ) { }\n\n    async get(pageNumber: number): Promise<ItemPage> {\n        return this.itemPageRepository.get(pageNumber)\n    }\n    \n}\n\nexport {\n    ItemPageService\n}","import { inject, injectable } from \"inversify\";\nimport { Item } from \"../dto/item.js\";\nimport { ItemPage, RowItemViewModel } from \"../dto/item-page.js\";\nimport { ItemRepository } from \"../repository/item-repository.js\";\nimport { AttributeTotal } from \"../dto/attribute-total.js\";\nimport { AttributeTotalService } from \"./attribute-total-service.js\";\nimport { Channel } from \"../dto/channel.js\";\nimport { RowItemViewModelRepository } from \"../repository/row-item-view-model-repository.js\";\n\n@injectable()\nclass ItemService {\n\n    @inject(\"ItemRepository\")\n    private itemRepository:ItemRepository\n\n    @inject(\"RowItemViewModelRepository\")\n    private rowItemViewModelRepository:RowItemViewModelRepository\n    \n    \n    @inject(\"AttributeTotalService\")\n    private attributeTotalService:AttributeTotalService\n\n    constructor(\n    ) { }\n\n    async get(_id: string): Promise<Item> {\n        return this.itemRepository.get(_id)\n    }\n    \n    async list(skip: number, limit?:number): Promise<Item[]> {\n        return this.itemRepository.list(skip, limit)\n    }\n\n    async query(query:string) {\n        return this.itemRepository.query(query)\n    }\n    \n    async all() {\n        return this.itemRepository.all()\n    }\n    \n    async getByTokenId(tokenId:number) : Promise<Item> {\n        return this.itemRepository.getByTokenId(tokenId)\n    }\n\n    async getByTokenIds(tokenIds:number[]) : Promise<Item[]> {\n        return this.itemRepository.getByTokenIds(tokenIds)\n    }\n\n    async getRowItemViewModelsByAttribute(traitType:string, value:string, pageNumber:number) : Promise<ItemPage> {\n        return this.itemRepository.getRowItemViewModelsByAttribute(traitType, value, pageNumber)\n    }\n\n    async getRowItemViewModelsByOwner(address:string, pageNumber:number) : Promise<ItemPage> {\n        return this.itemRepository.getRowItemViewModelsByOwner(address, pageNumber)\n    }\n\n    async getRowItemViewModelsByTokenIds(tokenIds:number[]) : Promise<RowItemViewModel[]> {\n        return this.itemRepository.getRowItemViewModelsByTokenIds(tokenIds)    \n    }\n\n    async getRowItemViewModelsByTokenId(tokenId:number) : Promise<RowItemViewModel> {\n        return this.itemRepository.getRowItemViewModelsByTokenId(tokenId)    \n    }\n\n\n    async listByTokenId(startTokenId:number, limit:number=10) {\n        return this.itemRepository.listByTokenId(startTokenId, limit)\n    }\n\n\n    async buildAttributeTotals(channel:Channel) : Promise<AttributeTotal[]> {\n\n        let items:Item[] = await this.all()\n\n        return this.attributeTotalService.buildAttributeTotals(channel, items)\n    }\n\n\n    async searchTokenIds(tokenIds:number[]) {\n        return this.rowItemViewModelRepository.getByTokenIds(tokenIds)\n    } \n\n\n}\n\nexport {\n    ItemService\n}","import { inject, injectable } from \"inversify\"\r\n\r\n\r\nimport { ItemService } from \"../../reader/service/item-service.js\"\r\nimport { ProcessedEvent, ProcessedTransaction, Sale, SalesReport, AttributeSaleReport, AttributeOverallSales } from \"../dto/processed-transaction.js\"\r\nimport { ProcessedTransactionRepository } from \"../repository/processed-transaction-repository.js\"\r\nimport { RowItemViewModel } from \"../dto/item-page.js\"\r\n\r\n\r\n@injectable()\r\nclass ProcessedTransactionService {\r\n\r\n    @inject(\"ProcessedTransactionRepository\")\r\n    private processedTransactionRepository:ProcessedTransactionRepository\r\n\r\n    @inject(\"ItemService\")\r\n    private itemService:ItemService\r\n\r\n    constructor() {}\r\n\r\n    async get(_id:string) : Promise<TransactionViewModel> {\r\n        return this.processedTransactionRepository.get(_id)\r\n    }\r\n\r\n\r\n    async getRowItemViewModels(processedEvents) {\r\n\r\n        let result = {}\r\n\r\n        let tokenIds = new Set<number>()\r\n\r\n\r\n        for (let processedEvent of processedEvents) {\r\n\r\n            if (!processedEvent.tokenId) continue\r\n            tokenIds.add(processedEvent.tokenId)\r\n        }\r\n\r\n        let rowItemViewModels = await this.itemService.getRowItemViewModelsByTokenIds(Array.from(tokenIds))\r\n\r\n\r\n        for (let rivm of rowItemViewModels) {\r\n            result[rivm.tokenId] = rivm\r\n        }\r\n\r\n        return result\r\n\r\n    }\r\n\r\n    async translateSalesToViewModels(sales:Sale[]) : Promise<SaleViewModel[]> {\r\n\r\n        let viewModels:SaleViewModel[] = []\r\n\r\n        for (let sale of sales) {\r\n            viewModels.push({\r\n                sale: sale,\r\n                item: await this.itemService.getRowItemViewModelsByTokenId(sale.tokenId)\r\n            })\r\n        }\r\n\r\n        return viewModels\r\n    }\r\n\r\n    async getSalesReport(): Promise<SalesReport> {\r\n        return this.processedTransactionRepository.getSalesReport()\r\n    }\r\n\r\n    async getAttributeSalesReport(traitType:string, value:string): Promise<AttributeSaleReport> {\r\n        return this.processedTransactionRepository.getAttributeSalesReport(traitType, value)\r\n    }\r\n    \r\n    async getAttributesOverall(): Promise<AttributeOverallSales> {\r\n        return this.processedTransactionRepository.getAttributesOverall()\r\n    }\r\n    \r\n    async getLargestSales(limit:number) : Promise<Sale[]> {\r\n        return this.processedTransactionRepository.getLargestSales(limit)\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\ninterface TransactionsViewModel {\r\n    lastUpdated?:string\r\n    transactions?:TransactionViewModel[],\r\n    rowItemViewModels?:{}\r\n}\r\n\r\ninterface TransactionValue {\r\n    totalPrice?: number\r\n    usdValue?:number\r\n    currency?: string\r\n    tokenPrice?: any,\r\n    markets?: any\r\n    aggregator?:string\r\n    tokenIds?: number[]\r\n}\r\n\r\n\r\ninterface ProcessedTransactionViewModel {\r\n    _id?:string\r\n    _rev?:string \r\n    blockNumber?:number\r\n    transactionIndex?:number\r\n    transactionFrom?:string\r\n    tokenTraders?:string[]\r\n    timestamp?:number\r\n    tokenIds?:number[]\r\n    transactionValue?:TransactionValue\r\n    previousId?:string\r\n}\r\n\r\ninterface ProcessedEventViewModel {\r\n    isMint: boolean\r\n    isBurn: boolean\r\n    namedArgs: any\r\n    tokenId: number\r\n    fromAddress: string\r\n    toAddress: string\r\n    price: number\r\n    currency: string\r\n    usdValue: number\r\n    event: string\r\n}\r\n\r\ninterface TransactionViewModel {\r\n    transaction?:ProcessedTransactionViewModel\r\n    events?:ProcessedEventViewModel[]\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface SaleViewModel {\r\n    sale:Sale\r\n    item:RowItemViewModel\r\n}\r\n\r\n\r\nexport {\r\n    ProcessedTransactionService, TransactionsViewModel, SaleViewModel, TransactionViewModel\r\n}\r\n\r\n","import { inject, injectable } from \"inversify\";\r\nimport { ReaderSettings } from \"../dto/reader-settings.js\";\r\nimport { ValidationException } from \"../util/validation-exception.js\";\r\n\r\nimport { ReaderSettingsRepository } from \"../repository/reader-settings-repository.js\";\r\nimport { validate, ValidationError } from 'class-validator';\r\nimport { SchemaService } from \"./core/schema-service.js\";\r\n\r\n\r\n@injectable()\r\nclass ReaderSettingsService {\r\n\r\n  @inject(\"ReaderSettingsRepository\")\r\n  private readerSettingsRepository:ReaderSettingsRepository\r\n\r\n  @inject(\"SchemaService\")\r\n  private schemaService: SchemaService\r\n\r\n\r\n  constructor() { \r\n  }\r\n\r\n  async get(): Promise<ReaderSettings> {\r\n\r\n    await this.schemaService.load([\"reader-settings\"])\r\n\r\n    return this.readerSettingsRepository.get()\r\n  }\r\n\r\n  async put(readerSettings:ReaderSettings): Promise<void> {     \r\n\r\n    readerSettings.lastUpdated = new Date().toJSON()\r\n\r\n\r\n    //Validate\r\n    let errors: ValidationError[] = await validate(readerSettings, {\r\n        forbidUnknownValues: true,\r\n        whitelist: true\r\n    })\r\n\r\n    if (errors.length > 0) {\r\n        throw new ValidationException(errors)\r\n    }\r\n\r\n\r\n    await this.readerSettingsRepository.put(readerSettings)     \r\n  }\r\n\r\n\r\n  async updateCurrentPage(tokenId:number) {\r\n\r\n    let readerSettings = await this.get()\r\n\r\n    readerSettings.currentPage = tokenId\r\n    await this.put(readerSettings)\r\n\r\n  }\r\n}\r\n\r\n\r\nexport { ReaderSettingsService }\r\n\r\n","import { inject, injectable } from \"inversify\";\nimport { StaticPageRepository } from \"../repository/static-page-repository.js\";\nimport { StaticPage } from \"../dto/static-page.js\";\n\n\n@injectable()\nclass StaticPageService {\n\n  @inject(\"StaticPageRepository\")\n  private staticPageRepository:StaticPageRepository\n\n\n  constructor() { }\n\n  async get(_id: string): Promise<StaticPage> {\n    return this.staticPageRepository.get(_id)\n  }\n\n  async listByLocation(location:string, skip:number): Promise<StaticPage[]> {\n    return this.staticPageRepository.listByLocation(location, skip)\n  }\n\n  async listRoutablePages(additionalStaticPages?:StaticPage[]): Promise<StaticPage[]> {\n\n    let results = []\n\n    if (additionalStaticPages?.length > 0) {\n      results.push(...additionalStaticPages)\n    }\n    \n    results = results.concat(await this.staticPageRepository.listByLocation(\"navbar\", 0))\n    results = results.concat(await this.staticPageRepository.listByLocation(\"links\", 0))\n\n    //Clone these so we don't change the underlying objects\n    results = JSON.parse(JSON.stringify(results))\n\n    //Strip the content.\n    if (results?.length > 0) {\n      for (let staticPage of results) {\n        delete staticPage?.content\n        delete staticPage?.contentHTML\n        delete staticPage?.contentMarkdown\n      }\n    }\n\n    \n    return results \n  }\n}\n\n\nexport { StaticPageService }\n\n","import { inject, injectable } from \"inversify\";\nimport { MetadataRepository } from \"../repository/metadata-repository.js\";\nimport { WalletService } from \"./core/wallet-service.js\";\nimport { id } from \"ethers\"\n\n\n@injectable()\nclass TokenContractService {\n\n    @inject(\"MetadataRepository\")\n    private metadataRepository:MetadataRepository\n\n    @inject(\"WalletService\")\n    private walletService:WalletService\n\n    constructor(\n    ) {}\n\n    private lastMintedTokenId=0\n\n\n    async getBalance(address) : Promise<number> {\n        if (!address) return 0\n\n        let channelContract = await this.getChannelContract()\n\n        return parseInt(await channelContract.balanceOf(address))\n    }\n\n    async getMetadata(tokenId) : Promise<any> {\n        return this.metadataRepository.get(tokenId)      \n    }\n\n    async mint(quantity:number, totalMintCost:string) {\n\n        let channelContract = await this.getChannelContract()\n\n\n        await channelContract.mint(quantity, { value: totalMintCost })\n    }\n\n    async mintFromStartOrFail(quantity:number, start:number, totalMintCost:string) {\n        let channelContract = await this.getChannelContract()\n        await channelContract.mintFromStartOrFail(quantity, start, { value: totalMintCost })\n    }\n\n    \n    async mintAsOwner(quantity:number) {\n        let channelContract = await this.getChannelContract()\n        await channelContract.mint(quantity, {})\n    }\n\n    async ownerOf(tokenId:number)  {\n        let channelContract = await this.getChannelContract()\n        return channelContract.ownerOf(tokenId)\n    }\n\n    async getTotalMinted() {\n        let channelContract = await this.getChannelContract()\n        return channelContract.totalMinted()\n    }\n\n    async getTotalSupply() {\n        let channelContract = await this.getChannelContract()\n        return channelContract.totalSupply()\n    }\n\n    async owner() {\n        let channelContract = await this.getChannelContract()\n        return channelContract.owner()\n    }\n\n    async getChannelContract() : Promise<ChannelContract> {\n\n\n        let contract:ChannelContract = await this.walletService.getContract(\"Channel\")\n\n        //Add event listener for mints if it's not already added. Maybe won't work if we ever add a second listener anywhere\n        if (this.walletService.provider && this.walletService.provider.listeners()?.length == 0) {\n            \n            let filter = {\n                address: contract.address,\n                topics: [\n                    // the name of the event, parnetheses containing the data type of each event, no spaces\n                    id(\"MintEvent(uint256)\")\n                ]\n            }\n            \n            this.walletService.provider.on( filter, async (e) => {\n\n                let tokenId = parseInt(e.data)\n\n                if (tokenId > this.lastMintedTokenId) {\n                    this.lastMintedTokenId = tokenId\n\n                    let mintEvent = new CustomEvent('mint-event')\n\n                    //@ts-ignore\n                    mintEvent.tokenId = tokenId\n              \n                    document.dispatchEvent(mintEvent)\n\n                }\n\n            })\n\n        }\n\n        return contract\n    }\n\n\n}\n\ninterface ChannelContract {\n    mint(quantity:number, options:any)\n    mintFromStartOrFail(quantity:number, start:number,options:any)\n    ownerOf(tokenId:number) : string\n    tokenURI(tokenId:number) : string\n    balanceOf(address) : string\n    totalMinted() : BigInt\n    totalSupply() : BigInt\n    owner() : string\n    address:string\n}\n\n\n\nexport {\n    TokenContractService\n}","import { inject, injectable } from \"inversify\";\nimport { LeaderboardRowViewModel, TokenOwnerPage, TokenOwnerPageTotals } from \"../dto/token-owner-page.js\";\nimport { TokenOwnerPageRepository } from \"../repository/token-owner-page-repository.js\";\n\n\n\n@injectable()\nclass TokenOwnerPageService {\n\n    @inject(\"TokenOwnerPageRepository\")\n    private tokenOwnerPageRepository:TokenOwnerPageRepository\n\n    constructor(\n    ) { }\n\n    async getHome(): Promise<TokenOwnerPage> {\n        return this.tokenOwnerPageRepository.getHome()\n    }\n\n    async get(pageNumber: number): Promise<TokenOwnerPage> {\n        return this.tokenOwnerPageRepository.get(pageNumber)\n    }\n\n    async getTotals(): Promise<TokenOwnerPageTotals> {\n        return this.tokenOwnerPageRepository.getTotals()\n    }\n\n}\n\nexport {\n    TokenOwnerPageService\n}","import { inject, injectable } from \"inversify\"\r\n\r\nimport { WalletService } from \"../../reader/service/core/wallet-service.js\"\r\nimport { TokenOwner } from \"../dto/token-owner.js\"\r\nimport { TokenOwnerRepository } from \"../repository/token-owner-repository.js\"\r\n\r\n@injectable()\r\nclass TokenOwnerService {\r\n\r\n    @inject(\"WalletService\")\r\n    private walletService:WalletService\r\n\r\n    @inject(\"TokenOwnerRepository\")\r\n    private tokenOwnerRepository:TokenOwnerRepository\r\n\r\n    constructor() {}\r\n\r\n\r\n    async get(_id:string): Promise<TokenOwner> {        \r\n        return this.tokenOwnerRepository.get(_id)\r\n    }\r\n\r\n    async getDisplayName(_id:string) : Promise<string> {\r\n\r\n        if (!_id) return\r\n\r\n        let ens = await this.tokenOwnerRepository.getENS(_id)\r\n\r\n        if (ens) return ens\r\n        return this.walletService.truncateEthAddress(_id)\r\n\r\n    }\r\n\r\n    async getOrCreate(address:string) {\r\n\r\n        let tokenOwner: TokenOwner \r\n\r\n        if (!tokenOwner) {\r\n            try {\r\n                tokenOwner = await this.get(address)\r\n            } catch (ex) { }\r\n        }\r\n\r\n        if (!tokenOwner) {\r\n            tokenOwner = new TokenOwner()\r\n            tokenOwner._id = address\r\n            tokenOwner.tokenIds = []\r\n            tokenOwner.count = 0\r\n        }\r\n\r\n        return tokenOwner\r\n\r\n    }\r\n\r\n\r\n    async put(tokenOwner:TokenOwner) {\r\n        return this.tokenOwnerRepository.put(tokenOwner)\r\n    }\r\n\r\n    /**\r\n     * No validation for speeeeeeeeed\r\n     * @param tokenOwners \r\n     * @returns \r\n     */\r\n     async putAll(tokenOwners:TokenOwner[]) {\r\n\r\n        //Update lastUpdated\r\n        tokenOwners.forEach(tokenOwner => {\r\n\r\n            if (!tokenOwner._id) {\r\n                tokenOwner.dateCreated = new Date().toJSON()\r\n            } \r\n    \r\n\r\n            tokenOwner.lastUpdated = new Date().toJSON()\r\n        })\r\n\r\n        return this.tokenOwnerRepository.putAll(tokenOwners)\r\n    }\r\n\r\n\r\n    async list(limit: number, skip: number): Promise<TokenOwner[]> {\r\n        return this.tokenOwnerRepository.list(limit, skip)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n    TokenOwnerService\r\n}\r\n\r\n","import { inject, injectable } from \"inversify\"\r\nimport { Token } from \"../dto/token.js\"\r\nimport { TokenRepository } from \"../repository/token-repository.js\"\r\n\r\n@injectable()\r\nclass TokenService {\r\n\r\n    @inject(\"TokenRepository\")\r\n    private tokenRepository:TokenRepository\r\n\r\n    constructor() {}\r\n\r\n\r\n    async get(_id:string): Promise<Token> {        \r\n        return this.tokenRepository.get(_id)\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n    TokenService\r\n}\r\n\r\n","import { inject, injectable } from \"inversify\";\nimport { Author } from \"../../dto/author.js\";\nimport { AuthorViewModel } from \"../../dto/viewmodel/author-view-model.js\";\nimport { ImageViewModel } from \"../../dto/viewmodel/image-view-model.js\";\nimport { AuthorService } from \"../author-service.js\";\n\n@injectable()\nclass AuthorWebService {\n\n    @inject(\"AuthorService\")\n    private authorService:AuthorService\n\n    constructor(\n    ) {}\n\n    async get(_id: string): Promise<AuthorViewModel> {\n        return this.getViewModel(await this.authorService.get(_id))\n    }\n\n    async getViewModel(author: Author): Promise<AuthorViewModel> {\n\n        let authorPhoto:ImageViewModel\n\n        return {\n            author: author,\n            authorDisplayName: this.authorService.getDisplayName(author)\n        }\n\n    }\n\n\n\n}\n\nexport {\n    AuthorWebService\n}","import { inject, injectable } from \"inversify\";\nimport { Author } from \"../../dto/author.js\";\nimport { Channel } from \"../../dto/channel.js\";\nimport { Image } from \"../../dto/image.js\";\nimport { StaticPage } from \"../../dto/static-page.js\";\n\n\nimport { ChannelViewModel } from \"../../dto/viewmodel/channel-view-model.js\";\nimport { CHUNK_SIZE } from \"../../repository/item-repository.js\";\nimport { AuthorService } from \"../author-service.js\";\nimport { ChannelService } from \"../channel-service.js\";\nimport { PagingService } from \"../core/paging-service.js\";\nimport { SchemaService } from \"../core/schema-service.js\";\nimport { WalletService } from \"../core/wallet-service.js\";\nimport { ImageService } from \"../image-service.js\";\nimport { StaticPageService } from \"../static-page-service.js\";\n\n@injectable()\nclass ChannelWebService {\n\n    @inject(\"ChannelService\")\n    private channelService:ChannelService\n\n    @inject(\"AuthorService\")\n    private authorService:AuthorService\n\n    @inject(\"ImageService\")\n    private imageService:ImageService\n\n    @inject(\"PagingService\")\n    private pagingService:PagingService\n\n    @inject(\"SchemaService\")\n    private schemaService:SchemaService\n\n    @inject(\"WalletService\")\n    private walletService:WalletService\n\n    @inject(\"StaticPageService\")\n    private staticPageService:StaticPageService\n\n    private loadedChannelData\n\n    constructor() {}\n\n    async get(offset:number, additionalStaticPages?:StaticPage[]) : Promise<ChannelViewModel> {\n        return this.getViewModel(await this.channelService.get(), offset, additionalStaticPages)\n    }\n\n    async getViewModel(channel:Channel, offset:number, additionalStaticPages?:StaticPage[]) : Promise<ChannelViewModel> {\n \n        let author:Author\n        let coverImage:Image\n\n        if (channel.authorId) {            \n            author = await this.authorService.get(channel.authorId)\n        }\n\n        let itemCount = channel.itemCount\n\n        let pagingViewModel = this.pagingService.buildPagingViewModel(offset, CHUNK_SIZE, itemCount, 5)\n\n        // let items = await this.itemWebService.list(offset)\n\n        \n        let locations = [\"navbar\", \"links\", \"index\", \"none\"]\n\n        let staticPagesViewModel = {}\n\n        for (let location of locations) {\n            staticPagesViewModel[location] = await this.staticPageService.listByLocation(location, 0)\n        }\n\n\n        if (additionalStaticPages?.length > 0) {\n            for (let staticPage of additionalStaticPages) {\n                for (let location of staticPage?.locations) {\n                    staticPagesViewModel[location].push(staticPage)\n                }\n            }\n        }\n\n\n        if (channel.coverImageId) {\n            coverImage = await this.imageService.get(channel.coverImageId)\n        }\n\n\n        return {\n            channelContractAbbrev: channel.contractAddress ? this.walletService.truncateEthAddress(channel.contractAddress) : undefined,\n            channel: channel,\n            staticPagesViewModel: staticPagesViewModel,\n            author: author,\n            authorDisplayName: this.authorService.getDisplayName(author),\n            itemCount: itemCount,\n            pagingViewModel: pagingViewModel,\n            coverImage: coverImage\n        }\n\n    }\n\n    \n\n    async loadChannel(channelId, baseURI, hostname) {\n\n        globalThis.channelId = channelId\n        globalThis.baseURI = baseURI\n        globalThis.hostname = hostname     \n\n\n    }\n\n    async loadChannelData(channelId) {\n\n        if (channelId && this.loadedChannelData != channelId) {\n            await this.schemaService.reloadAll()\n            await this.schemaService.load(['component-state'])\n        }\n\n        this.loadedChannelData = channelId\n\n    }\n\n\n\n}\n\nexport {\n    ChannelWebService\n}","import { inject, injectable } from \"inversify\";\r\nimport { Author } from \"../../dto/author.js\";\r\nimport { Channel } from \"../../dto/channel.js\";\r\nimport { Image } from \"../../dto/image.js\";\r\nimport { Item } from \"../../dto/item.js\";\r\nimport { Animation } from \"../../dto/animation.js\";\r\n\r\nimport { AttributeSelectionViewModel } from \"../../dto/viewmodel/attribute-selection-view-model.js\";\r\n\r\n\r\nimport { ItemViewModel } from \"../../dto/viewmodel/item-view-model.js\";\r\nimport { AnimationService } from \"../animation-service.js\";\r\nimport { AuthorService } from \"../author-service.js\";\r\nimport { ChannelService } from \"../channel-service.js\";\r\nimport { QuillService } from \"../core/quill-service.js\";\r\nimport { SchemaService } from \"../core/schema-service.js\";\r\nimport { ImageService } from \"../image-service.js\";\r\nimport { ItemService } from \"../item-service.js\";\r\n\r\nimport { ItemPage, ItemResults, RowItemViewModel } from \"../../dto/item-page.js\";\r\nimport { ItemPageService } from \"../item-page-service.js\";\r\nimport { AttributeTotal } from \"../../dto/attribute-total.js\";\r\nimport { AttributeTotalService } from \"../attribute-total-service.js\";\r\nimport { AttributeOptions, AttributeOptionsViewModel } from \"../../dto/attribute.js\";\r\n\r\nimport he from \"he\"\r\nimport { DOMParser, XMLSerializer } from '@xmldom/xmldom'\r\n\r\nconst parser = new DOMParser()\r\n\r\n@injectable()\r\nclass ItemWebService {\r\n\r\n    @inject(\"ItemService\")\r\n    private itemService: ItemService\r\n\r\n    @inject(\"ChannelService\")\r\n    private channelService: ChannelService\r\n\r\n    @inject(\"AuthorService\")\r\n    private authorService: AuthorService\r\n\r\n    @inject(\"ImageService\")\r\n    private imageService: ImageService\r\n\r\n    @inject(\"SchemaService\")\r\n    private schemaService: SchemaService\r\n\r\n    @inject(\"QuillService\")\r\n    private quillService: QuillService\r\n\r\n    @inject(\"AnimationService\")\r\n    private animationService: AnimationService\r\n\r\n    @inject(\"ItemPageService\")\r\n    private itemPageService: ItemPageService\r\n\r\n    @inject(\"AttributeTotalService\")\r\n    private attributeTotalService: AttributeTotalService\r\n\r\n\r\n\r\n    private allTokensCache:number[]\r\n\r\n    constructor() {}\r\n\r\n    async get(_id: string): Promise<ItemViewModel> {\r\n\r\n        let item:Item = await this.itemService.get(_id)\r\n\r\n        //Get channel\r\n        const channel = await this.channelService.get()\r\n\r\n        //Get attribute report\r\n        const attributeReport:AttributeTotal[] = await this.attributeTotalService.list()\r\n\r\n        return this.getViewModel(item, channel, attributeReport)\r\n    }\r\n\r\n    async getByTokenId(tokenId:number) : Promise<Item> {\r\n\r\n        return this.itemService.getByTokenId(tokenId)\r\n\r\n    }\r\n\r\n    async getViewModel(item: Item, channel:Channel, attributeReport:AttributeTotal[]): Promise<ItemViewModel> {\r\n\r\n        let attributeSelections:AttributeSelectionViewModel[] = []\r\n\r\n        let author: Author\r\n        let coverImage:Image\r\n        let animation:Animation\r\n\r\n        let animationContentHTML\r\n\r\n        //Get author\r\n        if (channel.authorId) {\r\n            author = await this.authorService.get(channel.authorId)\r\n        }\r\n\r\n        //Only show attributes that are valid at the category level. \r\n        if (channel.attributeOptions.length > 0) {\r\n\r\n            for (let ao of channel.attributeOptions) {\r\n\r\n                //find the one selected by this item\r\n                let selections = item?.attributeSelections?.filter( as => ao?.traitType == as?.traitType)\r\n\r\n                let selection = selections?.length > 0 ? selections[0].value : undefined\r\n\r\n\r\n                let attributeTotals:AttributeTotal[] = attributeReport.filter( at => at.traitType == ao.traitType)\r\n\r\n                let matches = attributeTotals?.filter( at => at.value == selection)\r\n\r\n\r\n                attributeSelections.push({\r\n                    id: ao.id,\r\n                    traitType: ao.traitType,\r\n                    values: ao.values,\r\n                    value: selection,\r\n                    attributeTotal: matches?.length > 0 ? matches[0] : undefined\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n\r\n        //Get image\r\n        if (item.coverImageId) {\r\n            coverImage = await this.imageService.get(item.coverImageId)\r\n        }\r\n\r\n        //Get animation if we are displaying it.\r\n        if (item.animationId && !item.coverImageAsAnimation) {\r\n\r\n            animation = await this.animationService.get(item.animationId)\r\n\r\n            let page = parser.parseFromString(animation.content, 'text/html')\r\n\r\n            let body = page.getElementsByTagName('body')[0]\r\n            \r\n            animationContentHTML = he.unescape(new XMLSerializer().serializeToString(body))\r\n\r\n            //Swap body tag to a div\r\n            animationContentHTML = \"<div\" + animationContentHTML.slice(5)\r\n            animationContentHTML = animationContentHTML.substring(0, animationContentHTML.length - 7) + \"</div>\"\r\n\r\n                \r\n        }\r\n\r\n\r\n        //Get image data and re-insert it into the content ops\r\n        if (item.content?.ops?.length > 0) {\r\n\r\n            let ops = []\r\n\r\n            for (let op of item.content.ops) {\r\n\r\n                if (op.insert && op.insert.ipfsimage) {\r\n\r\n                    let image:Image = await this.imageService.get(op.insert.ipfsimage.cid)\r\n            \r\n                    op.insert.ipfsimage.src = await this.imageService.getUrl(image)\r\n\r\n                    // console.log(op.src)\r\n                }\r\n\r\n                ops.push(op)\r\n            }\r\n\r\n            item.content.ops = ops\r\n\r\n        }\r\n\r\n\r\n        //Load previous and nex\r\n\r\n\r\n        return {\r\n            item: item,\r\n            animation:animation,\r\n            animationContentHTML: animationContentHTML,\r\n            contentHTML: await this.quillService.translateContent(item.content),\r\n            channel: channel,\r\n            author: author,\r\n            authorDisplayName: this.authorService.getDisplayName(author),\r\n            attributeSelections: attributeSelections,\r\n            coverImage: coverImage\r\n        }\r\n\r\n    }\r\n\r\n    async getMintViewModel(item: Item, channel:Channel): Promise<ItemViewModel> {\r\n\r\n        let attributeSelections:AttributeSelectionViewModel[] = []\r\n\r\n        let author: Author\r\n        let coverImage:Image\r\n        let animation:Animation\r\n\r\n        //Get image\r\n        if (item.coverImageId) {\r\n            coverImage = await this.imageService.get(item.coverImageId)\r\n        }\r\n\r\n        return {\r\n            item: item,\r\n            animation:animation,\r\n            channel: channel,\r\n            author: author,\r\n            attributeSelections: attributeSelections,\r\n            coverImage: coverImage\r\n        }\r\n\r\n    }\r\n\r\n    async getSearchViewModel(item: Item, channel:Channel): Promise<ItemViewModel> {\r\n\r\n        let attributeSelections:AttributeSelectionViewModel[] = []\r\n\r\n        let author: Author\r\n        let coverImage:Image\r\n        let animation:Animation\r\n\r\n        //Get image\r\n        // if (item.coverImageId) {\r\n        //     coverImage = await this.imageService.get(item.coverImageId)\r\n        // }\r\n\r\n        return {\r\n            item: item,\r\n            animation:animation,\r\n            channel: channel,\r\n            author: author,\r\n            attributeSelections: attributeSelections,\r\n            // coverImage: coverImage\r\n        }\r\n\r\n    }\r\n\r\n    async getExploreAttributeOptions(params:any) : Promise<AttributeOptionsViewModel[]> {\r\n\r\n        await this.schemaService.load([\"channels\", \"authors\", \"attribute-totals\"])\r\n\r\n        //Get channel\r\n        const channel = await this.channelService.get()\r\n\r\n\r\n        let attributeTotals:AttributeTotal[] = await this.attributeTotalService.list()\r\n\r\n\r\n        //Get a list of the token IDs that we're already filtered to so we can adjust the counts.\r\n        // let filteredIds = await this._paramsToFilteredIds(params, attributeTotals)\r\n\r\n        let attributeOptions:AttributeOptions[] = channel.attributeOptions\r\n\r\n        let results:AttributeOptionsViewModel[] = []\r\n\r\n        for (let ao of attributeOptions) {\r\n\r\n            let values = []\r\n\r\n            for (let v of ao.values.sort()) {\r\n\r\n                let clonedParams = JSON.parse(JSON.stringify(params))\r\n                delete clonedParams[ao.traitType]\r\n\r\n                //Unapply the selection for this filter so the counts are like this one isn't already applied. \r\n                let parentFilteredIds = await this._paramsToFilteredIds(clonedParams, attributeTotals)\r\n\r\n                let at = attributeTotals.filter( at => at.traitType ==  ao.traitType && at.value == v)[0]\r\n\r\n                if (at) {\r\n\r\n                    values.push({\r\n                        value: v,\r\n                        count: at.tokenIds.filter(x => parentFilteredIds.includes(x)).length \r\n                    })\r\n\r\n                } \r\n\r\n            }\r\n            \r\n            //Sort by count\r\n            values.sort((a,b) => b.count - a.count)\r\n\r\n\r\n            let aovm:AttributeOptionsViewModel = {\r\n                id: ao.id,\r\n                traitType: ao.traitType,\r\n                values: values\r\n            }\r\n\r\n            results.push(aovm)\r\n\r\n        }\r\n\r\n\r\n        return results\r\n\r\n    }\r\n\r\n    async exploreList(params:any, skip: number, limit?:number): Promise<ItemResults> {\r\n\r\n        await this.schemaService.load([\"channels\", \"authors\", \"attribute-totals\", \"row-item-view-models\"])\r\n        \r\n\r\n        if (params && Object.keys(params)?.length > 0) {\r\n\r\n            return this.exploreQuery(params, skip, limit)\r\n\r\n        } else {\r\n\r\n            //Figure out which page this is and return it.\r\n            let pageNumber = skip / limit \r\n\r\n            let itemPage:ItemPage = await this.itemPageService.get(pageNumber)\r\n            let channel:Channel = await this.channelService.get()\r\n\r\n\r\n            return {\r\n                items: itemPage.items,\r\n                totalMatches: channel.itemCount,\r\n                limit: limit,\r\n                skip: skip\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    async exploreQuery(params:any,  skip: number, limit?:number): Promise<ItemResults> {\r\n\r\n        await this.schemaService.load([ \"channels\", \"authors\", \"attribute-totals\", \"row-item-view-models\"])\r\n        \r\n        let attributeTotals:AttributeTotal[] = await this.attributeTotalService.list()\r\n\r\n        let filteredIds = await this._paramsToFilteredIds(params, attributeTotals)\r\n        \r\n        //Paging\r\n        let totalMatches = filteredIds.length\r\n        filteredIds = filteredIds.slice(skip, skip + limit)\r\n\r\n        let viewModels:RowItemViewModel[] = await this.itemService.searchTokenIds(filteredIds)\r\n\r\n        return {\r\n            items: viewModels,\r\n            totalMatches: totalMatches,\r\n            limit: limit,\r\n            skip: skip\r\n        }\r\n    \r\n    }\r\n\r\n    async _paramsToFilteredIds(params, allAttributeTotals:AttributeTotal[]) : Promise<number[]> {\r\n\r\n        let attributeTotalIds = []\r\n\r\n        for (let key of Object.keys(params)) {\r\n            attributeTotalIds.push(`${key}:::${params[key]}`)\r\n        }\r\n\r\n        let attributeTotals:AttributeTotal[] = allAttributeTotals?.filter( at => attributeTotalIds?.includes(at._id))  \r\n\r\n        if (attributeTotals?.length > 0) {\r\n            return attributeTotals.map( at => at.tokenIds).reduce((p,c) => p.filter(e => c.includes(e)))\r\n        } else {\r\n\r\n            //No filter selected so return every token ID\r\n            if (!this.allTokensCache) {\r\n                this.allTokensCache = Array.from(new Set(allAttributeTotals.map( at => at.tokenIds).flat()))\r\n            }\r\n\r\n            return this.allTokensCache\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    async list(skip: number, limit?:number): Promise<ItemViewModel[]> {\r\n\r\n        let result: ItemViewModel[] = []\r\n\r\n        //Get channel\r\n        const channel = await this.channelService.get()\r\n\r\n        //Get attribute report\r\n        const attributeReport:AttributeTotal[] = await this.itemService.buildAttributeTotals(channel)\r\n        \r\n        let items: Item[] = await this.itemService.list(skip, limit)\r\n\r\n        for (let item of items) {\r\n            result.push(await this.getViewModel(item, channel, attributeReport))\r\n        }\r\n\r\n        return result\r\n\r\n    }\r\n\r\n    async mintList(skip: number, limit?:number): Promise<ItemViewModel[]> {\r\n\r\n        let result: ItemViewModel[] = []\r\n\r\n        //Get channel\r\n        const channel = await this.channelService.get()\r\n        \r\n        let items: Item[] = await this.itemService.list(skip, limit)\r\n\r\n        for (let item of items) {\r\n            result.push(await this.getMintViewModel(item, channel))\r\n        }\r\n\r\n        return result\r\n\r\n    }\r\n\r\n\r\n\r\n    async itemPage(pageNumber:number) : Promise<ItemPage> {\r\n        return this.itemPageService.get(pageNumber)\r\n    }\r\n\r\n    async attributeItemPage(traitType:string, value: string, pageNumber:number) : Promise<ItemPage> {\r\n        return this.itemService.getRowItemViewModelsByAttribute(traitType, value, pageNumber)\r\n    }\r\n\r\n    async ownerItemPage(address:string, pageNumber:number) : Promise<ItemPage> {\r\n        return this.itemService.getRowItemViewModelsByOwner(address, pageNumber)\r\n    }\r\n\r\n    async query(query:string) : Promise<Item[]> {\r\n\r\n        await this.schemaService.load([\"items\", \"channels\"])\r\n\r\n        let results = await this.itemService.query(query)\r\n\r\n\r\n        //Get channel\r\n        const channel = await this.channelService.get()\r\n\r\n        let viewModels: ItemViewModel[] = []\r\n\r\n        for (let item of results) {\r\n            viewModels.push(await this.getSearchViewModel(item, channel))\r\n        }\r\n\r\n\r\n        return viewModels\r\n    }\r\n\r\n    async buildItemPages(itemViewModels:ItemViewModel[], perPage:number) : Promise<ItemPage[]> {\r\n\r\n        // await this.schemaService.load([\"images\"])\r\n\r\n        let result: ItemPage[] = []\r\n\r\n\r\n        let viewModels:RowItemViewModel[] = [] \r\n\r\n        //Create view models\r\n        for (let itemViewModel of itemViewModels) {\r\n\r\n            let item:Item = itemViewModel.item\r\n\r\n            viewModels.push({\r\n                _id: item._id,\r\n                coverImageGenerated: itemViewModel.coverImage.generated ? true : false,\r\n                coverImageId: itemViewModel.coverImage._id,\r\n                title: `${item.title ? item.title : `#${item.tokenId}` }`,\r\n                tokenId: item.tokenId\r\n            })\r\n\r\n        }\r\n\r\n        //Break into rows\r\n        for (let i = 0; i < viewModels.length; i += perPage) {\r\n            result.push({\r\n                items: viewModels.slice(i, i + perPage)\r\n            })\r\n        }\r\n\r\n\r\n        return result\r\n\r\n    }\r\n    \r\n    async buildAttributeTotals(channel:Channel) : Promise<AttributeTotal[]> {\r\n        return this.itemService.buildAttributeTotals(channel)\r\n    }\r\n\r\n    async getRowItemViewModelsByTokenIds(filteredIds) : Promise<RowItemViewModel[]> {\r\n        return this.itemService.getRowItemViewModelsByTokenIds(filteredIds)\r\n    }\r\n\r\n    translateRowItemViewModel(item:Item, coverImage:Image) : RowItemViewModel {\r\n\r\n        let viewModel:RowItemViewModel = {\r\n            _id: item._id,\r\n            coverImageGenerated: coverImage.generated ? true : false,\r\n            coverImageId: coverImage._id,\r\n            title: `${item.title ? item.title : `#${item.tokenId}`}`,\r\n            tokenId: item.tokenId\r\n        }\r\n        \r\n        return viewModel\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n    ItemWebService\r\n}","import { inject, injectable } from \"inversify\";\nimport { Channel } from \"../../dto/channel.js\";\nimport { MintingViewModel } from \"../../dto/viewmodel/minting-view-model.js\";\nimport { ChannelService } from \"../channel-service.js\";\nimport { SchemaService } from \"../core/schema-service.js\";\nimport { WalletService } from \"../core/wallet-service.js\";\nimport { ItemService } from \"../item-service.js\";\nimport { TokenContractService } from \"../token-contract-service.js\";\nimport { parseUnits, formatUnits } from \"ethers\";\n\n@injectable()\nclass MintWebService {\n\n    @inject(\"TokenContractService\")\n    private tokenContractService:TokenContractService\n\n    @inject(\"ChannelService\")\n    private channelService:ChannelService\n    \n\n    @inject(\"ItemService\")\n    private itemService:ItemService\n\n    @inject(\"SchemaService\")\n    private schemaService:SchemaService\n    \n    @inject(\"WalletService\")\n    private walletService:WalletService\n\n    constructor(\n    ) {}\n\n    async getMintingViewModel() : Promise<MintingViewModel> {\n\n        await this.schemaService.load([\"channels\", \"items\"])\n\n        let channel:Channel = await this.channelService.get()\n\n        if (channel.contractAddress) {\n\n            let totalMinted:BigInt = await this.tokenContractService.getTotalMinted()       \n\n            let lastMinted = []\n\n            if (Number(totalMinted) > 0 ) {\n\n                let items = await this.itemService.listByTokenId(Number(totalMinted))\n\n                for (let item of items) {\n\n                    try {\n\n                        //@ts-ignore\n                        let owner = await this.tokenContractService.ownerOf(item.tokenId)\n\n                        lastMinted.push({\n                            owner: await this.walletService.truncateEthAddress(owner),\n                            item: item\n                        })\n\n                    } catch(ex) {}\n\n                    \n                }\n\n            }            \n\n\n            return {\n                totalMinted: Number(totalMinted),\n                totalSupply: channel.itemCount,\n                mintPrice: channel.mintPrice,\n                lastMinted: lastMinted,\n                minting: Number(totalMinted) < channel.itemCount\n            }\n            \n        }\n\n    }\n\n    async getHomeMintingViewModel() : Promise<MintingViewModel> {\n\n        await this.schemaService.load([\"channels\"])\n\n        let channel:Channel = await this.channelService.get()\n\n        if (channel.contractAddress) {\n\n            let totalMinted:BigInt = await this.tokenContractService.getTotalMinted()       \n\n            return {\n                totalMinted: Number(totalMinted),\n                totalSupply: channel.itemCount,\n                mintPrice: channel.mintPrice\n            }\n            \n        }\n    }\n\n\n\n    async mint(quantity:number) {\n\n        await this.schemaService.load([\"channels\"])\n        let channel:Channel = await this.channelService.get()\n        let totalWei = await this.calculateTotalMint(channel, quantity)\n\n        let owner = await this.tokenContractService.owner()\n\n        // console.log(owner.toLowerCase(), this.walletService.address.toLowerCase())\n\n        if (this.walletService.address.toLowerCase() == owner.toLowerCase()) {\n            console.log('Minting as owner')\n            await this.tokenContractService.mintAsOwner(quantity)\n        } else {\n            await this.tokenContractService.mint(quantity, totalWei)\n        }\n\n        \n    }\n\n    async mintFromStartOrFail(quantity:number, start:number) {\n\n        await this.schemaService.load([\"channels\"])\n        let channel:Channel = await this.channelService.get()\n        \n        let totalWei = await this.calculateTotalMint(channel, quantity)\n\n        await this.tokenContractService.mintFromStartOrFail(quantity, start, totalWei)\n    }\n\n    async calculateTotalMint(channel, quantity) {\n\n        let mintPriceWei = parseUnits(channel.mintPrice, 'ether')\n\n        let total = Number(mintPriceWei) * quantity\n\n        return total.toString()\n \n    }\n\n    async updateTotal(mintPriceWei:BigInt, quantity:number) : Promise<string>{\n        return formatUnits(Number(mintPriceWei) * quantity)\n    }\n\n\n    async parseUnits(mintPrice:string) : Promise<BigInt> {\n       return parseUnits(mintPrice, 'ether')\n\n    }\n\n}\n\nexport {\n    MintWebService\n}","import axios from \"axios\";\nimport { inject, injectable } from \"inversify\";\nimport { AttributeOverallSales, AttributeSaleReport, SalesReport } from \"../../dto/processed-transaction.js\";\n\n\nimport { ProcessedTransactionService, SaleViewModel, TransactionsViewModel } from \"../processed-transaction-service.js\";\n\n\n@injectable()\nclass TransactionWebService {\n\n    \n    @inject(\"ProcessedTransactionService\")\n    private processedTransactionService:ProcessedTransactionService\n\n\n    constructor(\n        @inject(\"baseURI\") private baseURI:Function\n    ) {}\n\n    async getHomeViewModel() {\n\n        let result = await axios.get(`${this.baseURI()}sync/home.json`, {\n            // query URL without using browser cache\n            headers: {\n              'Cache-Control': 'no-cache',\n              'Pragma': 'no-cache',\n              'Expires': '0',\n            },\n        })\n\n        return result.data\n    }\n\n\n    async list(page?:number) : Promise<TransactionsViewModel> {\n\n        let latest = await this.getLatest()\n\n\n        let result = await axios.get(`${this.baseURI()}sync/transactions/activity/${page}.json`)\n\n        let transactionsViewModel = result.data\n\n        transactionsViewModel.lastUpdated = latest.lastUpdated\n\n        return transactionsViewModel\n\n    }\n\n\n    async listByAddress(address:string, page:number) : Promise<TransactionsViewModel> {\n        \n        let result = await axios.get(`${this.baseURI()}sync/tokenOwner/${address}/activity/${page}.json`)\n\n        let transactionsViewModel = result.data\n\n        let latest = await this.getLatest()\n        transactionsViewModel.lastUpdated = latest.lastUpdated\n\n        return transactionsViewModel\n\n    }\n\n\n    async getLatest() {\n        let result = await axios.get(`${this.baseURI()}sync/transactions/latest.json`, {\n            // query URL without using browser cache\n            headers: {\n              'Cache-Control': 'no-cache',\n              'Pragma': 'no-cache',\n              'Expires': '0',\n            },\n          })\n        return result.data\n    }\n\n    async getRecentActivity() : Promise<TransactionsViewModel> {\n\n        let result = await axios.get(`${this.baseURI()}sync/transactions/recentActivity.json`, {\n            // query URL without using browser cache\n            headers: {\n              'Cache-Control': 'no-cache',\n              'Pragma': 'no-cache',\n              'Expires': '0',\n            },\n          })\n\n        let transactionsViewModel:TransactionsViewModel = result.data\n\n\n        return transactionsViewModel\n\n    }\n\n\n    async getSalesReport(): Promise<SalesReport> {\n        return this.processedTransactionService.getSalesReport()\n    }\n\n    async getAttributeSalesReport(traitType:string, value:string): Promise<AttributeSaleReport> {\n        return this.processedTransactionService.getAttributeSalesReport(traitType, value)\n    }\n\n    async getAttributesOverall(): Promise<AttributeOverallSales> {\n        return this.processedTransactionService.getAttributesOverall()\n    }\n\n\n    async getLargestSales(limit:number) {\n\n        let sales = await  this.processedTransactionService.getLargestSales(limit)\n\n        return sales\n\n    }\n\n    abbreviateDollars(number, digits) {\n\n        if (!number) return \"$0\"\n\n        var SI_SYMBOL = [\"\", \"\", \"M\", \"G\", \"T\", \"P\", \"E\"]\n\n\n        // what tier? (determines SI symbol)\n        var tier = Math.log10(Math.abs(number)) / 3 | 0\n\n        // if zero or thousands, we don't need a suffix\n        if(tier == 0 || tier == 1) {\n          let result = new Intl.NumberFormat('en-US', { currency: \"USD\", style:\"currency\" }).format(number)\n          return result\n        }\n\n        // get suffix and determine scale\n        var suffix = SI_SYMBOL[tier]\n        var scale = Math.pow(10, tier * 3)\n\n        // scale the number\n        var scaled = number / scale\n\n        // format number and add suffix\n        return new Intl.NumberFormat('en-US', { currency: \"USD\", style:\"currency\" }).format(scaled) + suffix\n    }\n\n\n}\n\ninterface LatestTransactionInfo {\n    _id: string\n    lastUpdated:string\n}\n\n\n\nexport {\n    TransactionWebService\n}","import { validate, ValidationError } from 'class-validator';\r\n\r\n\r\nclass ValidationException extends Error {\r\n\r\n    constructor(\r\n        public errors:ValidationError[]\r\n    ) {\r\n        super()\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    ValidationException\r\n}","\r\nclass ERCEvent {\r\n    \r\n    _id?:string\r\n    _rev?:string \r\n    removed?:boolean \r\n    address?:string \r\n    data?:string \r\n    topics?:string[] \r\n    logIndex?:number \r\n    args:any[]\r\n    event?:string \r\n    eventSignature?:string\r\n    isTransfer:boolean\r\n    isMint:boolean\r\n    isBurn:boolean\r\n    namedArgs:any  \r\n    lastUpdated?:string \r\n    dateCreated?:string\r\n\r\n}\r\n\r\nexport {\r\n    ERCEvent\r\n}","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}