<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let routablePages = it.baseViewModel.routablePages
    let base64Version = it.baseViewModel.base64Version

    let logo = it.baseViewModel.logo


    const link = (href) => {
        return `${baseURL + href}`
    }   


    const absoluteLink = (href) => {
      return `${hostname + baseURL + href}`
    }   
    
%>

<!DOCTYPE html>
<html lang="en">

  <head>

    <style>
      html {
        visibility: hidden;
        opacity: 0;
      }
    </style>


    <title>
      <%= it.title %>
    </title>


    <%~ it.baseViewModel.headEndContents %>
    

  </head>

  <body>

    <div id="app">

      <div class="view view-main">

        <div class="page" data-name="home">

          <nav-bar
            library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
            large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
            title="<%= it.title %>"
            show_mint_page="false"
            show_activity_page="false"
            hide_menu="true"
          >
          </nav-bar>

          <div class="toolbar toolbar-bottom">
            <div class="toolbar-inner">
              <%~ include("footer", {baseURL: baseURL}) %>
            </div>
          </div>



          <div class="page-content hide-toolbar-on-scroll">

            <div class="main-split">

              <div class="left">
                
                <div class="hidden-on-load">

                  <div class="card data-table">
  
                    <div class="card-header">Collections</div>

                    <div class="card-content">
  
                        <table class="collections-table">
  
                          <thead>
                            <tr>
                              <th>Collection</th>
                              <th>24H</th>
                              <th class="medium-only">Month</th>
                              <th class="medium-only">Year</th>
                              <th class="medium-only">Total</th>
                            </tr>
                          </thead>
  
                          <tbody>
    
                            ${channels?.map( channelValue => $h`
                              <tr>
                                <td class="label-cell">
                                  <a href="/r/${channelValue._id}/">
                                    ${channelValue.coverImageId ? $h`
                                      <img src="/r/${channelValue._id}/backup/generated/images/${channelValue.coverImageId}.webp" class="avatar" />
                                    ` : $h`
                                      <i class="material-icons avatar">image</i>
                                    `}
    
                                    ${channelValue.title}
                                  </a>
  
                                </td> 
                                <td>
  
                                  <strong>${parseFloat(channelValue.dayTotalsEthValue || 0).toFixed(5)}</strong> ETH
                                  <br />
                                  <span class="dollar-value">$${homeWebService.abbreviateDollars(channelValue.dayTotalsUsdValue || 0)}</span>
  
                                </td>
  
                                <td class="medium-only">
  
                                  <strong>${parseFloat(channelValue.monthTotalsEthValue || 0).toFixed(5)}</strong> ETH
                                  <br />
                                  <span class="dollar-value">$${homeWebService.abbreviateDollars(channelValue.monthTotalsUsdValue || 0)}</span>
  
                                </td>
  
                                <td class="medium-only">
  
                                  <strong>${parseFloat(channelValue.yearTotalsEthValue || 0).toFixed(5)}</strong> ETH
                                  <br />
                                  <span class="dollar-value">$${homeWebService.abbreviateDollars(channelValue.yearTotalsUsdValue || 0)}</span>
  
                                </td>
  
                                <td class="medium-only">
  
                                  <strong>${parseFloat(channelValue.totalEthValue || 0).toFixed(5)}</strong> ETH
                                  <br />
                                  <span class="dollar-value">$${homeWebService.abbreviateDollars(channelValue.totalUsdValue || 0)}</span>
  
                                </td>
  
                              </tr>  
                            `)}
    
                            </tbody>
                        </table>
    
                    </div>
                  
                  </div>

                </div>



              </div>

              <div class="right">

                <div class="card card-header-divider">
                  <div class="card-header">Links</div>
                  <div class="card-content card-content-padding">
                    <div class="list">
                      <ul>
                        <li>
                          <div class="item-content">
                            <div class="item-inner">
                              <div class="item-title">
                                <a class="link external" href="https://discord.gg/yJtjqHvqXm">Discord</a>
                              </div>
                            </div>
                          </div>
                        </li>
                        <li>
                          <div class="item-content">
                            <div class="item-inner">
                              <div class="item-title">
                                <a class="link external" href="https://twitter.com/large_nft">Twitter</a>
                              </div>
                            </div>
                          </div>
                        </li>
  
                      </ul>
                    </div>
                  </div>
                </div>

              </div>

            </div>


          </div>

        </div>

      </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>
    
    <script type="module" id="page-init-scripts">

      const init = (props, { $, $f7, $h, $on, $update }) => {
              
            let channelWebService = globalThis.container.get("ChannelWebService")
            let baseURI = globalThis.container.get("baseURI")
            let hostname = globalThis.container.get("hostname")

            let homeWebService = globalThis.container.get("HomeWebService")

            let uiService = globalThis.container.get("UiService")

            let breadcrumbs

            let channels = []

            const link = (href) => {
              return baseURI() + href
            }   

            $on('pageAfterOut', (e, page) => {
            })

            $on('pageInit', async (e, page) => {

              await channelWebService.loadChannel(
                undefined,
                undefined,
                '<%= hostname %>'
              )


              uiService.showSpinner()

              channelsShown = 0
              pageCounter = 0
              hasMoreChannels = true
              loadingInProgress = false

              channels = await homeWebService.get()

              await $update()

              $('.hidden-on-load').removeClass('hidden-on-load')

              uiService.hideSpinner()

            })

            

            $f7.preloader.hide()

            return $render

      }


    </script>

    <%~ 
      include("_init", {
        hostname: hostname,
        baseURL: baseURL,
        libraryURL: it.baseViewModel.libraryURL,
        routablePages: routablePages,
        base64Version: base64Version
      }) 
    %>



  </body>

</html>