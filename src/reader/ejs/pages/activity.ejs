<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage
    let logo = it.baseViewModel.logo

    const link = (href) => {
        return `${baseURL + href}`
    }    


    const absoluteLink = (href) => {
        return `${hostname + baseURL + href}`
    }   

    let coverImageLink = channelViewModel.coverImage ? absoluteLink(`backup/${channelViewModel.coverImage.generated ? 'generated' : 'export'}/images/${channelViewModel.coverImage._id}.${channelViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''


%>


<!DOCTYPE html>
<html lang="en">

<head>

    <%~ include("headStart", {baseURL: baseURL}) %>


    <style>
    html {
        visibility: hidden;
        opacity: 0;
    }
    </style>


    <title>
        Activity for <%=channelViewModel.channel.title%>
    </title>



    <%~ 
      include("_meta_tags", {
        title: `Activity for '${channelViewModel.channel.title}' NFTs`,
        url: 'activity',
        imageUrl: coverImageLink,
        descriptionHTML: `Activity for '${channelViewModel.channel.title}' NFTs`,
        hostname: hostname,
        baseURL: baseURL,
        excerptHtml: it.baseViewModel.excerptHtml,
        he: it.baseViewModel.he
      }) 
    %>


    <%~ it.baseViewModel.headEndContents %>
    
</head>

<body>

    <div id="app">

        <div class="view view-main">



            <div class="page" data-name="explore">

                <nav-bar
                    logo="${logo}"
                    library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
                    large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
                    title="Activity"
                    active="Activity"
                    show_mint_page="<%=showMintPage%>"
                    show_activity_page="<%=showActivityPage%>"
                    breadcrumbs="${breadcrumbs}"
                >
                </nav-bar>


                <div class="page-content infinite-scroll-content" id="explore-infinite-scroll">

                    <div class="fixed-width-content center">
            
                        <div class="hidden-on-load">


                            ${transactionsViewModel?.transactions?.length > 0 ? $h`

                                <div class="card data-table">
                                    <div class="card-header">
                                        Activity
                                        <div class="last-updated">Last updated: ${moment(transactionsViewModel.lastUpdated).fromNow()}</div>
                                    </div>
                                    <div class="card-content card-content-padding">
                                        <transaction-row transactions="${transactionsViewModel}" items="${transactionsViewModel.rowItemViewModels}"></transaction-row>
                                    </div>
                                </div>

                                <div class="block split-row-both">
                                    <div>
                                        ${previousPage ? $h`
                                        <a href="${baseURL}activity/?page=${previousPage}" class="button button-outline color-gray">Previous</a>
                                        ` : $h` `}
                                    </div>
                                    <div>
                                        ${nextPage ? $h`
                                        <a href="${baseURL}activity/?page=${nextPage}" class="button button-fill">Next</a>
                                        ` : $h` `}
                                    </div>
                            
                                </div>

                        
                            ` : $h`
                            
                              <div class="block">
                                No more transactions
                              </div>
                            
                            `}
          
                        </div>

                        <div class="hide-on-pageinit">

                            <div class="card skeleton-text">
                                <div class="card-header">Activity</div>
                                <div class="card-content card-content-padding data-table">
                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                                    lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                                </div>

                              </div>

                        </div>

                        <%~ include("footer", {baseURL: baseURL}) %>

                    </div>
            
                </div>
              
            
            </div>

        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    <script type="module" id="page-init-scripts">

        const init = (props, { $, $f7, $h, $on, $update }) => {

            let transactionWebService = globalThis.container.get("TransactionWebService")

            let baseURL = '<%= baseURL %>'



            let display = 25

            let page = 1

            let logo = JSON.parse(`<%~ JSON.stringify(logo ? logo : {})  %>`)

            let breadcrumbs = [{
                text: JSON.parse(`<%~ JSON.stringify(channelViewModel.channel.symbol)  %>`),
                path: baseURL
            }, {
                text: "Activity",
                path: `${baseURL}activity`
            }]

            let nextPage
            let previousPage

            let transactionsViewModel 

            const link = (href) => {
              return baseURL + href
            }   


            const loadActivity = async () => {
                
                loading = true

                try  {

                    nextPage = undefined
                    previousPage = undefined


                    if ($f7.views.main.router.currentRoute?.query?.page) {
                        page = $f7.views.main.router.currentRoute?.query?.page

                        if (page) {
                            page = parseInt(page)
                        } 
                    }

                    if (!page) {
                        page = 1
                    }


                    breadcrumbs.push({
                        text: `Page ${page}`
                    })

                    if (page > 1) {
                        previousPage = page - 1
                    } 

                    if (page <= 10) {
                        nextPage = page + 1
                    } else {
                        nextPage = undefined //don't go past page 10
                    }



                    try {
                        transactionsViewModel = await transactionWebService.list(page)

                        // if (transactionsViewModel.transactions?.length < display) {
                        //     previousPage = undefined
                        // }

                    } catch(ex) {   }
                    

                    console.log(transactionsViewModel)


                } catch(ex) { console.log(ex) }

               
                $('.hidden-on-load').removeClass('hidden-on-load')

                loading = false

                await $update()



            }


            $on('pageInit', async () => {

                await loadActivity()

                $('.hide-on-pageinit').hide()

                await $update()

            })


            $on('pageBeforeOut', async () => {
            })

            <%~ 
                include("_meta_tags_js", {
                    title: `Activity for '${channelViewModel.channel.title}' NFTs`,
                    url: 'activity',
                    imageUrl: coverImageLink,
                    descriptionHTML: `Activity for '${channelViewModel.channel.title}' NFTs`,
                    hostname: hostname,
                    baseURL: baseURL,
                    excerptHtml: it.baseViewModel.excerptHtml,
                    he: it.baseViewModel.he
                }) 
            %>


            document.querySelector('title').innerHTML = "Activity <%=channelViewModel.channel.title%>"

            $f7.preloader.hide()

            return $render

        }


    </script>

    <%~ 
        include("_init", {
            hostname: hostname,
            baseURL: baseURL,
            libraryURL: it.baseViewModel.libraryURL,
            routablePages: routablePages,
            base64Version: base64Version,
            channelId: channelId
        }) 
    %>

</body>

</html>