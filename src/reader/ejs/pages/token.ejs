<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let baseDir = it.baseViewModel.baseDir
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage
    let itemViewModel = it.itemViewModel
    let previous = it.previous
    let next = it.next

    const link = (href) => {
        return `${baseURL + href}`
    }    

    let logo = link(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`)

    const absoluteLink = (href) => {
        return `${hostname + baseURL + href}`
    }   

    const escapeExcerpt = (excerpt) => {
        excerpt = it.baseViewModel.excerptHtml(excerpt, { pruneLength: 500 })
        return it.baseViewModel.he.encode(excerpt.toString())
    }

    const marketplaceAssetLink = (marketplace, tokenId) => {

        let link = marketplace.assetLink 
  
        //Replace contract if we find it 
        if (channelViewModel.channel.contractAddress) {
          link = link.replace("{contractId}", channelViewModel.channel.contractAddress)
        }
  
        if (tokenId) {
          link = link.replace("{tokenId}", tokenId)
  
        }
  
        return link
    }
    
    const truncateEthAddress = (address) => {
        // Captures 0x + 4 characters, then the last 4 characters.
        const truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/
        const match = address.match(truncateRegex)
        if (!match) return address
        return `${match[1]}â€¦${match[2]}`
    }


    let coverImageLink = itemViewModel.coverImage ? absoluteLink(`backup/${itemViewModel.coverImage.generated ? 'generated' : 'export'}/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''

    const getAttributeKey = (as) => {
        return encodeURIComponent(`${as.traitType}::::${as.value}`)
    }


%>


<!DOCTYPE html>
<html lang="en">

<head>

    <%~ include("headStart", {baseURL: baseURL}) %>


    <style>
    html {
        visibility: hidden;
        opacity: 0;
    }
    </style>

    <!-- Required meta tags-->
    <meta charset="utf-8">
    <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=5, minimum-scale=1, user-scalable=yes, minimal-ui, viewport-fit=cover">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- Color theme for statusbar -->
    <title><%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %></title>

    <meta property="og:title" content="<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="" />
    <meta property="og:image" content="<%= coverImageLink %>" />
    <meta property="og:description" content="<%= escapeExcerpt(itemViewModel.contentHTML)%>" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="" />
    <meta property="twitter:title" content="<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>" />
    <meta property="twitter:description" content="<%= escapeExcerpt(itemViewModel.contentHTML) %>" />
    <meta property="twitter:image" content="<%= coverImageLink %>" />
    
    <%~ it.baseViewModel.headEndContents %>

</head>

<body>

    <div id="app">

        <div class="view view-main">


            <div class="page" data-name="token-<%=itemViewModel.item.tokenId %>">

                <nav-bar
                    logo="<%=logo%>"
                    title="<%=channelViewModel.channel.title%>"
                    show_mint_page="<%=showMintPage%>"
                    show_activity_page="<%=showActivityPage%>"
                >
                </nav-bar>

                <token-toolbar
                    token_id="<%= itemViewModel.item.tokenId %>"
                    item_count="<%= channelViewModel.channel.itemCount %>" 
                >
                </token-toolbar>

<!--                 
                <div class="fab fab-left-center small-only">
                    <a href="#"> 
                        <i class="icon f7-icons color-blue">arrow_left</i>
                    </a>
                </div>
    
                <% if (itemViewModel.item.next) { %>
                    <div class="fab fab-right-center small-only">
                        <a href="#">
                            <i class="icon f7-icons color-blue">arrow_right</i>
                        </a>
                    </div>
                <% } %> -->

           
                <div class="page-content">
                    <div class="swiper" id="swiper-<%= itemViewModel.item.tokenId  %>" style="display:none;">
                        <!-- Slides wrapper -->
                        <div class="swiper-wrapper">
                            <!-- Slides -->
                            <div class="swiper-slide" data-url="<%= itemViewModel.item.previous ? link(`t/${itemViewModel.item.previous.tokenId}`) : link(`index.html`) %>">
                            </div> 

                            <div class="swiper-slide">
                                
                                <div class="block block-strong inset col-100 no-margin-bottom">
                                    <div class="breadcrumbs ">
                                      <div class="breadcrumbs-item">
                                        <a href="<%=baseURL%>index.html" class="link">
                                          Home
                                        </a>
                                      </div>    
                                      <div class="breadcrumbs-separator"></div>
                                      <div class="breadcrumbs-item">
                                        <a href="<%=baseURL%>explore.html" class="link">
                                          Explore
                                        </a>
                                      </div>     
                                      <div class="breadcrumbs-separator"></div>
                                      <div class="breadcrumbs-item breadcrumbs-item-active">
                                        <%= itemViewModel.item.title ? itemViewModel.item.title : `#${itemViewModel.item.tokenId}` %> 
                                      </div> 
                                    </div>
                                </div>
                                
                                <div class="row">
                                
                                    <div class="col-100 large-75">
                                
                                        <div class="block animation-card col-100">
                                
                                            <div class="animation-content <%= itemViewModel.item.coverImageAsAnimation ? 'animation-image' : ''%>">
                                
                                                <% if (itemViewModel.item.coverImageAsAnimation) { %>
                                                    <img src="<%= link(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`) %>"  />
                                                <% } else { %>
                                                    <%~itemViewModel.animationContentHTML %>
                                                <% } %>
                                
                                            </div>
                                
                                
                                            <div class="row">
                                
                                                <a class="button button-outline back-token-button margin-bottom col-50 color-gray" href="#" >
                                                    <i class="icon f7-icons color-blue">arrow_left</i>
                                                </a>
                                
                                
                                                <% if (itemViewModel.item.next) { %>
                                                    <a class="button button-fill continue-button margin-bottom col-50" href="#">
                                                        Continue <i class="f7-icons">arrow_right</i>
                                                    </a>
                                                <% } %>
                                            </div>
                                
                                
                                        </div> 
                                
                                        <div class="hidden-on-load">

                                            ${transactionsViewModel?.transactions?.length > 0 ? $h`
                          
                                              <div class="block-title block-title-medium">
                                                <div class="last-updated">Last updated: ${moment(transactionsViewModel.lastUpdated).fromNow()}</div>
                                                Activity
                                              </div>
                                              <transaction-row transactions="${transactionsViewModel}" items="${transactionsViewModel.rowItemViewModels}" token="<%= itemViewModel.item.tokenId %>"></transaction-row>
                                       
                                            ` : $h`<span />`}
                          
                                        </div>
            
                                        <div class="hide-on-pageinit">
            
                                            <div class="card skeleton-text">
                                                <div class="card-header">Activity</div>
                                                <div class="card-content card-content-padding data-table">
                                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                                                    lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                                                </div>
            
                                              </div>
            
                                        </div>


                                    </div>
                                
                                    <div class="col-100 large-25 token-sidebar">
                                        
                                        <div class="card" >
                                            <form class="card-content card-content-padding" id="token_navigator_form">
                                              <input type="number" class="goto-input" style="width: 60px; border: 1px solid #cccccc; display: inline-block;" value="<%= itemViewModel?.item?.tokenId %>" min="0"  />
                                              <span class="paging-label">Enter Token ID</span>
                                              <button class="goto-button button button-small button-fill">Go</button>
                                            </form>
                                        </div>
                                
                                        <% if (itemViewModel.item.previous || itemViewModel.item.next) { %>
                                
                                            <div class="card large-only">
                                              <div class="card-content card-content-padding">
                                                <div class="segmented">
                                
                                                  <% if (itemViewModel.item.previous) { %>
                                                    <a class="button button-outline" href="<%= !itemViewModel.item.previous ? link(`index.html`) : link(`t/${itemViewModel.item.previous.tokenId}`) %>" data-transition="none">
                                                        <i class="icon f7-icons">arrow_left</i>
                                                      </a>
                                                  <% } else { %>
                                                    <a class="button button-outline" href="#"></a>
                                                  <% } %>
                                
                                
                                                  <% if (itemViewModel.item.next) { %>
                                                    <a class="button button-outline" href="<%= link(`t/${itemViewModel.item.next.tokenId}`) %>" data-transition="none">
                                                        <i class="f7-icons">arrow_right</i>
                                                      </a>
                                                  <% } else { %>
                                                    <a class="button button-outline" href="#"></a>
                                                  <% } %>
                                
                                                </div>
                                              </div>
                                            </div>
                                
                                        <% } %>
                                
                                
                                
                                 
                                        <% if (itemViewModel.channel.contractAddress) { %>

                                            <div class="hidden-on-load">
                                                <div class="card">
                                                    <div class="card-content card-content-padding">
                                                        ${token?.currentOwnerId ? $h`

                                                            Owned by <a href="${link(`u/?address=${token?.currentOwnerId}`)}">
                                                                ${transactionWebService.getDisplayName(token?.currentOwnerId)}
                                                            </a>
                                                        ` : $h`
                                                            NFT has not been <a href="${link(`mint.html`)}">minted</a> yet.
                                                        `}
                                                    </div>
                                                </div>
                                            </div>

                                          
                                            <div class="data-table card">
                                        
                                                <div class="card-header">
                                                    Token Info
                                                </div>
                                            
                                                <div class="card-content">
                                                    <table>
                                                        <tbody>
                                                            <tr>
                                                                <td class="label-cell">Contract Address</td>
                                                                <td><a href="https://etherscan.io/token/<%= itemViewModel.channel.contractAddress %>" class="external">${contractAddress}</a></td>
                                                            </tr>
                                                    
                                                            <tr>
                                                                <td class="label-cell">Token ID</td>
                                                                <td>#<%= itemViewModel?.item?.tokenId %></td>
                                                            </tr>
                                                
                                                            <tr>
                                                                <td class="label-cell">Metadata</td>
                                                                <td><a href="${metadataURL}" class="external">View</a></td>
                                                            </tr>                                        
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>

                                        <% } %>
                                

                                
                                        <div class="card">
                                            
                                            <div class="card-header">
                                                Attributes
                                            </div>
                                
                                            <div class="card-content data-table">
                                
                                                <% itemViewModel.attributeSelections?.map( (as)=> { %>
                                
                                                    <% if (as.attributeTotal?.categoryPercent) { %>
                                                        <div class="button-outline attribute-value">
                                                            <div class="trait-type"><%= as.traitType %></div>
                                                            <div class="value"><a href="${link(`attribute/?attributeKey=<%= getAttributeKey(as) %>`)}"><%= as.value %></a></div>
                                                            <div class="category-percent"><%= as.attributeTotal?.categoryPercent  %> have this trait</div>
                                                        </div>                                                
                                                    <% } %>
                                
                                
                                                <% }) %>
                                
                                            </div>
                                
                                        </div>
                                
                                
                                        <% 
                                        if (marketplaces?.length > 0) {
                                        %>
                                            <div class="card">
                                                <div class="card-header">
                                                    View on Marketplaces
                                                </div>
                                                <div class="card-content">
                                                    <div class="list simple-list">
                                                        <ul>
                                                        
                                                        <% 
                                                            for (let marketplace of marketplaces) { 
                                                        %>  
                                                            <li><a href="<%= marketplaceAssetLink(marketplace, itemViewModel.item.tokenId) %>" class="external"><%= marketplace.name %></a></li>     
                                                        <%
                                                            }
                                                        %>
                                    
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        <%
                                            }
                                        %>                                
                                
                                        <% if (!itemViewModel.item.coverImageAsAnimation) { %>
                                            <div class="card">
                                                <div class="card-header">Cover Image</div>
                                                <div class="card-content">
                                                    <img src="<%= link(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`) %>" class="cover-image-preview" />
                                                </div>
                                            </div>
                                        <% } %>
                                
                                
                                
                                    </div>
                                
                                    <div class="large-75 col-100">
                                        <%~ include("footer", {baseURL: baseURL}) %>          
                                    </div>


                                </div>



                            </div>

                            <% if (itemViewModel.item.next) { %>
                                <div class="swiper-slide" data-url="<%= link(`t/${itemViewModel.item.next.tokenId}`) %>">
                                </div> 
                            <% } %>

                        </div>
                    </div>


                    


                </div>

            </div>
        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    
    <script type="module" id="page-init-scripts">    

        const init = (props, { $, $f7, $h, $on, $update }) => {
            
            let transactionWebService = globalThis.container.get("TransactionWebService")
            let walletService = globalThis.container.get("WalletService")

            let uiService = globalThis.container.get("UiService")

            let readerSettingsService = globalThis.container.get("ReaderSettingsService")
            let tokenService = globalThis.container.get("TokenService")

            let baseURI = globalThis.container.get("baseURI")

            let hasPrevious = JSON.parse(`<%~ JSON.stringify(itemViewModel?.item?.previous?.tokenId != undefined) %>`)
            let hasNext = JSON.parse(`<%~ JSON.stringify(itemViewModel?.item?.next?.tokenId != undefined) %>`)

            let swiper

            let transactionsViewModel

            let token

            let metadataURL = `${baseURI}backup/export/metadata/<%= itemViewModel.item.tokenId  %>.json`


            let contractAddress = walletService.truncateEthAddress('<%= itemViewModel.channel.contractAddress %>')


            const link = (href) => {
              return baseURI + href
            }   


            const initSwiper = () => {

                swiper = $f7.swiper.create('#swiper-<%= itemViewModel.item.tokenId  %>', {
                    initialSlide: 1,
                    effect: 'fade',
                    on: {
                        slideChange() {

                            const swiper = this

                            let slide = swiper.$wrapperEl.children('.swiper-slide').eq(swiper.activeIndex)

                            let url = $(slide).data('url')

                            if (url) {
                                $f7.views.main.router.navigate(url, {
                                    transition: 'none',
                                    history: true,
                                    reloadAll: true
                                })
                            }
                        }
                    }
                })

                $('#swiper-<%= itemViewModel.item.tokenId  %>').show()

                const prev = (e) => {
                    swiper.slidePrev(0)
                }

                const next = (e) => {
                    swiper.slideNext(0)
                }

                $('.fab-left-center').on('click', prev)
                $('.fab-right-center').on('click', next)

                $('.back-token-button').on('click', prev)
                $('.continue-button').on('click', next)

                // let activityStartChangedEvent = new CustomEvent('token-activity-start-changed')
                // document.dispatchEvent(activityStartChangedEvent)

            }

            const loadActivity = async () => {

                loading = true

                try  {


                    // transactionsViewModel = await transactionWebService.listByTokenFrom("<%= itemViewModel.item.tokenId  %>", 1000)

                    // //Last updated won't be right because this only gets written when it actually changes.
                    // let latest = await transactionWebService.getLatest()
                    // transactionsViewModel.lastUpdated = latest.lastUpdated

                    token = await tokenService.get("<%= itemViewModel.item.tokenId  %>")


                    transactionsViewModel = token.transactionsViewModel

                    await transactionWebService.cacheENSNames(transactionsViewModel)

                    //Reverse order
                    transactionsViewModel?.transactions?.reverse()


                } catch(ex) { console.log(ex) }

                $('.hidden-on-load').removeClass('hidden-on-load')

                loading = false

                await $update()


            }


            $on('pageInit', async () => {

                await readerSettingsService.updateCurrentPage(parseInt(props.tokenId))
                $('#token_navigator_form').on('submit', goTokenFormSubmit)

                initSwiper()

                await loadActivity()

                $('.hide-on-pageinit').hide()

            })          

            $on('pageReinit', async () => {

                initSwiper()

                await loadActivity()

                $('.swiper').show()
                $('.hide-on-pageinit').hide()

            })

            $on('pageBeforeOut', async () => {
                $('.swiper').hide()
                console.log('Destroying swiper #swiper-<%= itemViewModel.item.tokenId  %>')
                $f7.swiper.destroy('#swiper-<%= itemViewModel.item.tokenId  %>')
            })

            const goTokenFormSubmit = async (e) => {
          
                e.preventDefault()

                const val = $(e.currentTarget).children('.goto-input').val()

                try {
                    $f7.views.main.router.navigate(`${baseURI}t/${parseInt(val.toString())}`)
                } catch(ex) {
                    console.log(ex)
                    $f7.dialog.alert("Invalid Page")
                }

            }

            document.querySelector('meta[property="og:title"]').setAttribute("content", "<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>")
            document.querySelector('meta[property="og:url"]').setAttribute("content", "<%= link(`token-${itemViewModel.item._id}`) %>")
            document.querySelector('meta[property="og:image"]').setAttribute("content", "<%= coverImageLink %>")
            document.querySelector('meta[property="og:description"]').setAttribute("content", "<%= escapeExcerpt(itemViewModel.contentHTML)%>")

            document.querySelector('meta[property="twitter:url"]').setAttribute("content", "<%= link(`token-${itemViewModel.item._id}`) %>")
            document.querySelector('meta[property="twitter:title"]').setAttribute("content", "<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>")
            document.querySelector('meta[property="twitter:image"]').setAttribute("content", "<%= coverImageLink %>")
            document.querySelector('meta[property="twitter:description"]').setAttribute("content", "<%= escapeExcerpt(itemViewModel.contentHTML)%>" )

            document.querySelector('title').innerHTML = "<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>"

            $f7.preloader.hide()

            return $render;

        }


    </script>

    <script type="module" id="page-scripts">

        let baseURL = '<%= baseURL %>'
        let hostname = '<%= hostname %>'
        let channelId = '<%= channelId %>'
        let version = atob('<%= base64Version %>').replace('"', '').replace('"', '')

        let routablePages = JSON.parse(`<%~ JSON.stringify(routablePages) %>`)

        let app = reader.initReader(baseURL, hostname, version, routablePages, channelId )

    </script>

    

</body>

</html>