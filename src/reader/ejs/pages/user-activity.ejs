<% 
    let channelViewModel=it.baseViewModel.channelViewModel 
    let hostname=it.baseViewModel.hostname 
    let baseURL=it.baseViewModel.baseURL 
    let marketplaces=it.baseViewModel.marketplaces 
    let externalLinks=it.baseViewModel.externalLinks 
    let routablePages=it.baseViewModel.routablePages 
    let attributeReport=it.baseViewModel.attributeReport 
    let base64Version=it.baseViewModel.base64Version 
    let channelId=it.baseViewModel.channelId 
    let showMintPage=it.baseViewModel.showMintPage 
    let logo = it.baseViewModel.logo

    let showActivityPage=it.baseViewModel.showActivityPage 
    
    const link=(href)=> {
        return `${baseURL + href}`
    }

    const absoluteLink = (href) => {
        return `${hostname + baseURL + href}`
    }

    const escapeExcerpt = (excerpt) => {
        excerpt = it.baseViewModel.excerptHtml(excerpt, { pruneLength: 500 })
        return it.baseViewModel.he.encode(excerpt.toString())
    }

    let coverImageLink = channelViewModel.coverImage ? absoluteLink(`backup/${channelViewModel.coverImage.generated ? 'generated' : 'export'}/images/${channelViewModel.coverImage._id}.${channelViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''

%>


<!DOCTYPE html>
<html lang="en">

<head>
    
    <%~ include("headStart", {baseURL: baseURL}) %>


    <style>
        html {
            visibility: hidden;
            opacity: 0;
        }
    </style>

    <!-- Required meta tags-->
    <meta charset="utf-8">
    <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=5, minimum-scale=1, user-scalable=yes, minimal-ui, viewport-fit=cover">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- Color theme for statusbar -->
    <title>
        User Activity for <%=channelViewModel.channel.title%>
    </title>

    <%~ 
      include("_meta_tags", {
        title: `User Activity for ${channelViewModel.channel.title}`,
        url: 'u/activity',
        imageUrl: coverImageLink,
        descriptionHTML: `User Activity for ${channelViewModel.channel.title}`,
        hostname: hostname,
        baseURL: baseURL
      }) 
    %>



    <%~ it.baseViewModel.headEndContents %>

</head>

<body>

    <div id="app">

        <div class="view view-main">

            <div class="page" data-name="user-activity">

                <nav-bar 
                    logo="${logo}" 
                    large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
                    title="User" 
                    active="User" 
                    show_mint_page="<%=showMintPage%>"
                    show_activity_page="<%=showActivityPage%>"
                    breadcrumbs="${breadcrumbs}"
                >
                </nav-bar>


                <div class="page-content">

                    <div class="row">

                        <div class="fixed-width-content center">

                            <div class="hidden-on-load">
    
                                <div class="block-title block-title-large">Account Details</div>
                                <div class="block-header">
                                    ${address}
                                </div>
    
                                <div class="block">
    
                                    <div class="user-info">
    
                                        <div class="row">
                                            <div class="col-50">Etherscan</div>
                                            <div class="col-50">
                                                
                                                <a href="https://etherscan.io/address/${address}"
                                                    class="item-link external">${address ?
                                                    walletService.truncateEthAddress(address) : ' '}</a>
                                            </div>
                                        </div>
    
                                        ${tokenOwner?.ensName ? $h`
                                            <div class="row">
                                                <div class="col-50">ENS Name</div>
                                                <div class="col-50">${tokenOwner.ensName}</div>
                                            </div>
                                        ` : $h` `}
    
                                        <div class="row">
                                            <div class="col-50">Tokens Owned</div>
                                            <div class="col-50"><strong>${tokenOwner?.count}</strong></div>
                                        </div>

                                        <div class="row">
                                            <div class="col-50">Transactions</div>
                                            <div class="col-50"><strong>${tokenOwner?.transactionCount}</strong></div>
                                        </div>

    
                                    </div>
    
                                </div>
    
    
                                <div class="block">
                                    <p class="segmented">
                                        <a class="button button-outline"
                                            href="<%= baseURL %>u/?address=${address}">Owned</a>
                                        <a class="button button-outline button-active" href="#">Activity</a>
                                    </p>
                                </div>
    
                                ${transactionsViewModel?.transactions?.length > 0 ? $h`
                    
                                    <div class="block-title block-title-medium">
                                        <div class="last-updated">Last updated: ${moment(transactionsViewModel.lastUpdated).fromNow()}</div>
                                        Activity
                                    </div>
                                    <transaction-row transactions="${transactionsViewModel}" items="${transactionsViewModel.rowItemViewModels}"></transaction-row>
                             
                                    <div class="block margin-top margin-bottom">
                                        <div class="row">
                                            <div class="col-50">
                                                ${previousPage ? $h`
                                                <a href="${baseURL}u/activity?page=${previousPage}&address=${address}" class="button button-outline color-gray">Previous</a>
                                                ` : $h` `}
                                            </div>
                                            <div class="col-50">
                                                ${nextPage ? $h`
                                                <a href="${baseURL}u/activity?page=${nextPage}&address=${address}" class="button button-fill">Next</a>
                                                ` : $h` `}
                                            </div>
                                        </div>
                            
                                    </div>
                            
                                ` : $h`<span />`}

                            </div>

                            
                            <div class="hide-on-pageinit">

                                <div class="card skeleton-text">
                                    <div class="card-header">Activity</div>
                                    <div class="card-content card-content-padding data-table">
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                                    </div>

                                </div>

                            </div>


                            <%~ include("footer", {baseURL: baseURL}) %>

                        </div>



                    </div>

                </div>


            </div>

        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    <script type="module" id="page-init-scripts">




        const init = (props, { $, $f7, $h, $on, $update }) => {

            let transactionWebService = globalThis.container.get("TransactionWebService")
            let tokenOwnerService = globalThis.container.get("TokenOwnerService")
            let walletService = globalThis.container.get("WalletService")

            let baseURL = '<%= baseURL %>'

            let tokenOwner
            let transactionsViewModel

            let display = 25
            let address 
            let page

            let nextPage
            let previousPage

            let logo = JSON.parse(`<%~ JSON.stringify(logo ? logo : {})  %>`)

            let breadcrumbs = [{
                text: "Home",
                path: "index.html"
            }, {
                text: "Leaderboard",
                path: "leaderboard"
            }]

            const loadActivity = async () => {

                loading = true

                try  {

                    nextPage = undefined
                    previousPage = undefined

                    if ($f7.views.main.router.currentRoute?.query?.address) {
                        address = $f7.views.main.router.currentRoute?.query?.address
                    }

                    if ($f7.views.main.router.currentRoute?.query?.page) {
                        page = $f7.views.main.router.currentRoute?.query?.page

                        if (page) {
                            page = parseInt(page)
                        } 
                    }

                    if (!page) {
                        page = 1
                    }




                    tokenOwner = await tokenOwnerService.get(address)

                    transactionsViewModel = await transactionWebService.listByAddress(address, page)


                    breadcrumbs.push({
                        text: address,
                        path: `u?address=${address}`
                    })

                    breadcrumbs.push({
                        text: `Page ${page}`
                    })

                    if (page > 1) {
                        previousPage = page - 1
                    } 

                    if (page < tokenOwner.totalTransactionPages) {
                        nextPage = page + 1
                    }



                } catch(ex) { console.log(ex) }

                $('.hidden-on-load').removeClass('hidden-on-load')


                loading = false

                await $update()


            }




            $on('pageInit', async () => {

                await loadActivity()

                $('.hide-on-pageinit').hide()

                await $update()

            })


            <%~ 
                include("_meta_tags_js", {
                    title: `User Activity for ${channelViewModel.channel.title}`,
                    url: 'u/activity',
                    imageUrl: coverImageLink,
                    descriptionHTML: `User Activity for ${channelViewModel.channel.title}`,
                    hostname: hostname,
                    baseURL: baseURL
                }) 
            %>

            document.querySelector('title').innerHTML = "User Activity <%=channelViewModel.channel.title%>"

            $f7.preloader.hide()

            return $render

        }


    </script>

    <%~ 
        include("_init", {
            hostname: hostname,
            baseURL: baseURL,
            routablePages: routablePages,
            base64Version: base64Version,
            channelId: channelId
        }) 
    %>

</body>

</html>