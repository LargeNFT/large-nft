<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage

    const link = (href) => {
        return `${baseURL + href}`
    }    

    let logo = link(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`)



    const absoluteLink = (href) => {
        return `${hostname + baseURL + href}`
    }   

    const escapeExcerpt = (excerpt) => {
        excerpt = it.baseViewModel.excerptHtml(excerpt, { pruneLength: 500 })
        return it.baseViewModel.he.encode(excerpt.toString())
    }
%>


<!DOCTYPE html>
<html lang="en">

<head>
    <style>
    html {
        visibility: hidden;
        opacity: 0;
    }
    </style>

    <!-- Required meta tags-->
    <meta charset="utf-8">
    <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=5, minimum-scale=1, user-scalable=yes, minimal-ui, viewport-fit=cover">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- Color theme for statusbar -->
    <title>
        Activity for <%=channelViewModel.channel.title%>
    </title>

    <meta property="og:title" content="Activity for <%=channelViewModel.channel.title%>" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="<%= link(`activity`) %>" />
    <meta property="og:image" content="<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>" />
    <meta property="og:description" content="Activity for <%=channelViewModel.channel.title%>" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="<%= link(`activity`) %>" />
    <meta property="twitter:title" content="Activity for <%=channelViewModel.channel.title%>" />
    <meta property="twitter:description" content="Activity for <%=channelViewModel.channel.title%>" />
    <meta property="twitter:image" content="<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>" />

    <%~ it.baseViewModel.headContents %>
    
</head>

<body>

    <div id="app">

        <div class="view view-main">



            <div class="page" data-name="explore">

                <nav-bar
                    logo="<%=logo%>"
                    title="Activity"
                    active="Activity"
                    show_mint_page="<%=showMintPage%>"
                    show_activity_page="<%=showActivityPage%>"
                >
                </nav-bar>


                <div class="page-content infinite-scroll-content" id="explore-infinite-scroll">

                    <div class="row">
            
                        <div class="fixed-width-content center">
            
                            <div class="block block-strong inset col-100 no-margin-bottom">
                                <div class="breadcrumbs ">
                                  <div class="breadcrumbs-item">
                                    <a href="<%=baseURL%>index.html" class="link">
                                      Home
                                    </a>
                                  </div>       
                                  <div class="breadcrumbs-separator"></div>
                                  <div class="breadcrumbs-item breadcrumbs-item-active">
                                    <a href="<%=baseURL%>activity" class="link">
                                        Activity
                                    </a>
                                    
                                  </div> 
                                </div>
                            </div>

                            <div class="hidden-on-load">

                                ${transactionsViewModel?.transactions?.length > 0 ? $h`
              
                                  <div class="card">
                                    
                                    <div class="card-header">
                                        Activity <span class="last-updated">Last updated: ${moment(transactionsViewModel.lastUpdated).fromNow()}</span>
                                    </div>


                                    <div class="card-content card-content-padding">
                              
                                      ${transactionsViewModel.transactions.map(transaction => $h`
                                        <transaction-row transaction="${transaction}" items="${transactionsViewModel.rowItemViewModels}"></transaction-row>
                                      `)}
                                
                              
                                      <div class="block margin-top margin-bottom">
                                        <div class="row">
                                          <div class="col-50">
                                              ${previousPageStartId ? $h`
                                                <a href="${baseURL}activity/?startId=${previousPageStartId}" class="button button-outline color-gray">Previous</a>
                                              ` : $h` `}
                                          </div>
                                          <div class="col-50">
                                              ${nextPageStartId ? $h`
                                                <a href="${baseURL}activity/?startId=${nextPageStartId}" class="button button-fill">Next</a>
                                              ` : $h` `}
                                          </div>
                                        </div>
                                
                                      </div>


                                    </div>

                                  </div>
                            
                                ` : $h`<span />`}
              
                            </div>

                            <div class="hide-on-pageinit">

                                <div class="card skeleton-text">
                                    <div class="card-header">Activity</div>
                                    <div class="card-content card-content-padding data-table">
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                                    </div>

                                  </div>

                            </div>


  
                        </div>
                    </div>
            
                </div>
              
            
            </div>

        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    <script type="module" id="page-init-scripts">

        const init = (props, { $, $f7, $h, $on, $update }) => {

            let transactionWebService = globalThis.container.get("TransactionWebService")

            let baseURL = '<%= baseURL %>'

            let startId 
            let display = 25

            let nextPageStartId
            let previousPageStartId

            let transactionsViewModel 

            const link = (href) => {
              return baseURL + href
            }   


            const loadActivity = async () => {
                
                loading = true

                try  {

                    nextPageStartId = undefined
                    previousPageStartId = undefined

                    startId = $f7.views.main.router.currentRoute?.query?.startId

                    transactionsViewModel = await transactionWebService.listFrom(display, startId)
                    
                    if (transactionsViewModel.transactions.length == display && transactionsViewModel?.transactions[display-1]?.previousId) {
                        nextPageStartId = transactionsViewModel.transactions[display-1].previousId
                    }

                    //If we have a startId we are on page 2+ so we need to set the previous start offset
                    if (startId) {
                        let previousTransactionList = await transactionWebService.listTo(display+1, startId)

                        if (previousTransactionList.transactions[display]) {
                          previousPageStartId = previousTransactionList.transactions[display]._id
                        }

                    }

                } catch(ex) { console.log(ex) }
                
                $('.hidden-on-load').removeClass('hidden-on-load')

                loading = false

                await $update()



            }


            $on('pageInit', async () => {

                await loadActivity()

                $('.hide-on-pageinit').hide()

                await $update()

            })


            $on('pageBeforeOut', async () => {
            })

            document.querySelector('meta[property="og:title"]').setAttribute("content", "Activity for <%=channelViewModel.channel.title%>")
            document.querySelector('meta[property="og:url"]').setAttribute("content", "<%= link(`activity`) %>")
            document.querySelector('meta[property="og:image"]').setAttribute("content", "<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>")
            document.querySelector('meta[property="og:description"]').setAttribute("content", "Activity for <%=channelViewModel.channel.title%>")

            document.querySelector('meta[property="twitter:url"]').setAttribute("content", "<%= link(`activity`) %>")
            document.querySelector('meta[property="twitter:title"]').setAttribute("content", "Activity <%=channelViewModel.channel.title%>")
            document.querySelector('meta[property="twitter:image"]').setAttribute("content", "<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>")
            document.querySelector('meta[property="twitter:description"]').setAttribute("content", "Activity for <%=channelViewModel.channel.title%>" )

            document.querySelector('title').innerHTML = "Activity <%=channelViewModel.channel.title%>"

            $f7.preloader.hide()

            return $render

        }


    </script>

    <script type="module" id="page-scripts">

        let baseURL = '<%= baseURL %>'
        let hostname = '<%= hostname %>'
        let channelId = '<%= channelId %>'
        let version = atob('<%= base64Version %>').replace('"', '').replace('"', '')

        let routablePages = JSON.parse(`<%~ JSON.stringify(routablePages) %>`)

        let app = reader.initReader(baseURL, hostname, version, routablePages, channelId )



    </script>

</body>

</html>