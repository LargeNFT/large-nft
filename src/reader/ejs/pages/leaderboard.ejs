<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage

    const link = (href) => {
        return `${baseURL + href}`
    }    

    let logo = link(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`)



    const absoluteLink = (href) => {
        return `${hostname + baseURL + href}`
    }   

    const escapeExcerpt = (excerpt) => {
        excerpt = it.baseViewModel.excerptHtml(excerpt, { pruneLength: 500 })
        return it.baseViewModel.he.encode(excerpt.toString())
    }
%>


<!DOCTYPE html>
<html>

<head>
    <style>
    html {
        visibility: hidden;
        opacity: 0;
    }
    </style>

    <!-- Required meta tags-->
    <meta charset="utf-8">
    <meta name="viewport"
    content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui, viewport-fit=cover">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <!-- Color theme for statusbar -->
    <title>
        Leaderboard for <%=channelViewModel.channel.title%>
    </title>

    <meta property="og:title" content="Leaderboard for <%=channelViewModel.channel.title%>" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="<%= link(`leaderboard`) %>" />
    <meta property="og:image" content="<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>" />
    <meta property="og:description" content="Leaderboard for <%=channelViewModel.channel.title%>" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="<%= link(`leaderboard`) %>" />
    <meta property="twitter:title" content="Leaderboard for <%=channelViewModel.channel.title%>" />
    <meta property="twitter:description" content="Leaderboard for <%=channelViewModel.channel.title%>" />
    <meta property="twitter:image" content="<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>" />

    <%~ it.baseViewModel.headContents %>
    
</head>

<body>

    <div id="app">

        <div class="view view-main">

            <div class="page" data-name="user-activity">

                <nav-bar
                    logo="<%=logo%>"
                    title="Leaderboard"
                    active="Leaderboard"
                    show_mint_page="<%=showMintPage%>"
                    show_activity_page="<%=showActivityPage%>"
                >
                </nav-bar>


                <div class="page-content infinite-scroll-content" id="explore-infinite-scroll">

                    <div class="row">
            
                        <div class="fixed-width-content center">
                            
                            <div class="hidden-on-load">
                                <div class="block block-strong inset col-100 no-margin-bottom">
                                    <div class="breadcrumbs ">
                                      <div class="breadcrumbs-item">
                                        <a href="<%= baseURL %>index.html" class="link">
                                          Home
                                        </a>
                                      </div>       
                                      <div class="breadcrumbs-separator"></div>
                                      <div class="breadcrumbs-item breadcrumbs-item-active">
                                        <a href="<%= baseURL %>leaderboard" class="link">
                                            Leaderboard
                                        </a>
                                        
                                      </div> 
                                    </div>
                                </div>
                            
                                <div class="card">
                                    <div class="card-header">Leaderboard</div>
                                    <div class="card-content card-content-padding data-table">
                                        
                                        <table class="leaderboard-table">
                                            <thead>
                                                <tr>
                                                <th class="label-cell">Address</th>
                                                <th>ENS Name</th>
                                                <th class="numeric-cell">Owned</th>
                                                <th>Last Active</th>
                                                </tr>
                                            </thead>
                                    
                                            <tbody>
                                    
                                            ${tokenOwners?.map(u => $h`
                                                <tr>
                                                    <td class="label-cell">
                                                        <a href="<%= baseURL %>u/?address=${u._id}">${u._id ? walletService.truncateEthAddress(u._id) : ' '}</a>
                                                    </td>
                                        
                                                    <td>
                                                        ${u.ensName}
                                                    </td>
                                        
                                                    <td class="numeric-cell">
                                                        ${u.count}
                                                    </td>
                                        
                                                    <td>
                                                        ${u.lastActive}
                                                    </td>                                    
                                                </tr>
                                            
                                            `)}
                                            </tbody>
                                
                                        </table>
                                
                                
                                        <div class="block margin-top margin-bottom">
                                            <div class="row">
                                                <div class="col-50">
                                                    ${showPrevious ? $h`
                                                    <a href="<%= baseURL %>leaderboard/?pageNumber=${pageNumber - 1}" class="button button-outline color-gray">Previous</a>
                                                    ` : $h` `}
                                                </div>
                                                <div class="col-50">
                                                    ${showNext ? $h`
                                                    <a href="<%= baseURL %>leaderboard/?pageNumber=${pageNumber + 1}" class="button button-fill">Next</a>
                                                    ` : $h` `}
                                                </div>
                                            </div>
                                
                                        </div>
                                
                                
                                    </div>
                                </div>
                            </div>


                            <div class="hide-on-pageinit">

                                <div class="card skeleton-text">
                                    <div class="card-header">Leaderboard</div>
                                    <div class="card-content card-content-padding data-table">
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                                    </div>

                                </div>

                            </div>




                        </div>
                    </div>
            
                </div>
              
            
            </div>

        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    <script type="module" id="page-init-scripts">

        const init = (props, { $, $f7, $h, $on, $update }) => {

            let tokenOwnerPageService = globalThis.container.get("TokenOwnerPageService")
            let walletService = globalThis.container.get("WalletService")


            let baseURL = '<%= baseURL %>'

            let tokenOwners
            let pageNumber = 0
            let totals = {}

            let showNext
            let showPrevious

            const loadLeaderboard = async () => {
            
                loading = true

                try  {

                    if ($f7.views.main.router.currentRoute?.query?.pageNumber) {
                        pageNumber = parseInt($f7.views.main.router.currentRoute?.query?.pageNumber)
                    }

                    totals = await tokenOwnerPageService.getTotals()
                    let page = await tokenOwnerPageService.get(pageNumber)
                    tokenOwners = page.tokenOwners

                    showNext = pageNumber < totals.totalPages - 1 
                    showPrevious = pageNumber > 0

                } catch(ex) { console.log(ex) }
                
                $('.hidden-on-load').removeClass('hidden-on-load')


                loading = false

                await $update()

            }


            $on('pageInit', async () => {

                await loadLeaderboard()

                $('.hide-on-pageinit').hide()


                await $update()


            })


            document.querySelector('meta[property="og:title"]').setAttribute("content", "Leaderboard for <%=channelViewModel.channel.title%>")
            document.querySelector('meta[property="og:url"]').setAttribute("content", "<%= link(`leaderboard`) %>")
            document.querySelector('meta[property="og:image"]').setAttribute("content", "<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>")
            document.querySelector('meta[property="og:description"]').setAttribute("content", "Leaderboard for <%=channelViewModel.channel.title%>")

            document.querySelector('meta[property="twitter:url"]').setAttribute("content", "<%= link(`leaderboard`) %>")
            document.querySelector('meta[property="twitter:title"]').setAttribute("content", "Leaderboard <%=channelViewModel.channel.title%>")
            document.querySelector('meta[property="twitter:image"]').setAttribute("content", "<%= absoluteLink(`backup/export/images/${channelViewModel.channel.coverImageId}.jpg`) %>")
            document.querySelector('meta[property="twitter:description"]').setAttribute("content", "Leaderboard for <%=channelViewModel.channel.title%>" )

            document.querySelector('title').innerHTML = "Leaderboard <%=channelViewModel.channel.title%>"

            $f7.preloader.hide()

            return $render

        }


    </script>

    <script type="module" id="page-scripts">

        let baseURL = '<%= baseURL %>'
        let hostname = '<%= hostname %>'
        let channelId = '<%= channelId %>'
        let version = atob('<%= base64Version %>').replace('"', '').replace('"', '')

        let routablePages = JSON.parse(`<%~ JSON.stringify(routablePages) %>`)

        let app = reader.initReader(baseURL, hostname, version, routablePages, channelId )



    </script>

</body>

</html>