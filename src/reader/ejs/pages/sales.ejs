<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage
    let logo = it.baseViewModel.logo

    const link = (href) => {
        return `${baseURL + href}`
    }    

    const absoluteLink = (href) => {
        return `${hostname + baseURL + href}`
    }   

    const escapeExcerpt = (excerpt) => {
        excerpt = it.baseViewModel.excerptHtml(excerpt, { pruneLength: 500 })
        return it.baseViewModel.he.encode(excerpt.toString())
    }

    let coverImageLink = channelViewModel.coverImage ? absoluteLink(`backup/${channelViewModel.coverImage.generated ? 'generated' : 'export'}/images/${channelViewModel.coverImage._id}.${channelViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''


%>


<!DOCTYPE html>
<html lang="en">

<head>

    <%~ include("headStart", {baseURL: baseURL}) %>


    <style>
    html {
        visibility: hidden;
        opacity: 0;
    }
    </style>


    <title>
        Largest Sales for <%=channelViewModel.channel.title%>
    </title>

    <%~ 
      include("_meta_tags", {
        title: `Largest Sales for '${channelViewModel.channel.title}' NFTs`,
        url: 'largest-sales',
        imageUrl: coverImageLink,
        descriptionHTML: `Largest Sales for '${channelViewModel.channel.title}' NFTs`,
        hostname: hostname,
        baseURL: baseURL,
        excerptHtml: it.baseViewModel.excerptHtml,
        he: it.baseViewModel.he
      }) 
    %>


    <%~ it.baseViewModel.headEndContents %>
    
</head>

<body>

    <div id="app">

        <div class="view view-main">

            <div class="page" data-name="largest-sales">

                <nav-bar
                    logo="${logo}"
                    library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
                    large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
                    title="Largest Sales"
                    active="Largest Sales"
                    show_mint_page="<%=showMintPage%>"
                    show_activity_page="<%=showActivityPage%>"
                >
                </nav-bar>


                <div class="page-content">

                    <div class="row">
            
                        <div class="fixed-width-content center">
                            
                            <div class="hidden-on-load">

                                <div class="block block-strong inset col-100 no-margin-bottom">
                                    <div class="breadcrumbs ">
                                      <div class="breadcrumbs-item">
                                        <a href="<%= baseURL %>index.html" class="link">
                                          Home
                                        </a>
                                      </div>       
                                      <div class="breadcrumbs-separator"></div>
                                      <div class="breadcrumbs-item breadcrumbs-item-active">
                                        <a href="<%= baseURL %>leaderboard" class="link">
                                            Largest Sales
                                        </a>
                                        
                                      </div> 
                                    </div>
                                </div>
                            

                                ${largestSales?.sales?.length > 0 ? $h`
                                    <div class="block-title block-title-medium">Largest Sales</div>
                                    <div class="block block-strong inset largest-sales">
                                      
                                      <div class="row">
                                        ${largestSales?.sales?.map( (sale, index) => $h`
                                          <div class="col-50 large-20 margin-bottom">
                  
                                            <div class="rank">#${index+1}</div>
                  
                                            <div class="square">
                                              <a href="${link(`t/${sale.tokenId}`)}" class="item-link">
                                                <img src="${link(`backup/export/images/${largestSales.rowItemViewModels[sale.tokenId].coverImageId}.${largestSales.rowItemViewModels[sale.tokenId].coverImageGenerated ? 'svg' : 'jpg'}`)}" alt="${sale.tokenId}" height="125" width="125"/>
                                              </a>
                                            </div>
                  
                                            <div class="sale-info margin-top">
                                              <a href="${link(`t/${sale.tokenId}`)}" class="item-link">${largestSales.rowItemViewModels[sale.tokenId].title}</a><br />
                                              ${new Intl.NumberFormat('en-US').format(sale.ethValue)} ETH (${transactionWebService.abbreviateDollars(sale.usdValue, 2)})
                                              <div class="date">${moment(sale.date).format('LL')}</div>
                  
                  
                                            </div>
                  
                                          </div>
                                        `)}
                                      </div>
                  
                                    </div>
                                ` : $h` `}


                            </div>


                            <div class="hide-on-pageinit">

                                <div class="card skeleton-text">
                                    <div class="card-header">Leaderboard</div>
                                    <div class="card-content card-content-padding data-table">
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                                    </div>

                                </div>

                            </div>

                            <%~ include("footer", {baseURL: baseURL}) %>

                        </div>
                    </div>
            
                </div>
              
            
            </div>

        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    <script type="module" id="page-init-scripts">

        const init = (props, { $, $f7, $h, $on, $update }) => {


            let channelWebService = globalThis.container.get("ChannelWebService")
            let baseURI = globalThis.container.get("baseURI")
            let hostname = globalThis.container.get("hostname")

            let transactionWebService = globalThis.container.get("TransactionWebService")

            let walletService = globalThis.container.get("WalletService")
            let moment = globalThis.moment 

            let logo = JSON.parse(`<%~ JSON.stringify(logo ? logo : {})  %>`)


            let largestSales

            let lastUpdated

            const link = (href) => {
              return baseURI() + href
            }   


            const loadLargestSales = async () => {
            
                loading = true

                try  {
                    largestSales = await transactionWebService.getLargestSales(100)

                    let latest = await transactionWebService.getLatest()

                    lastUpdated = latest.lastUpdated

                } catch(ex) { console.log(ex) }
                
                $('.hidden-on-load').removeClass('hidden-on-load')


                loading = false

                await $update()

            }


            $on('pageInit', async () => {

                await channelWebService.loadChannel(
                        "<%= channelViewModel.channel._id %>",
                        '<%= baseURL %>',
                        '<%= hostname %>'
                )

                await $update()

                await loadLargestSales()

                $('.hide-on-pageinit').hide()

                await $update()


            })

            <%~ 
                include("_meta_tags_js", {
                    title: `Largest Sales for '${channelViewModel.channel.title}' NFTs`,
                    url: 'largest-sales',
                    imageUrl: coverImageLink,
                    descriptionHTML: `Largest Sales for '${channelViewModel.channel.title}' NFTs`,
                    hostname: hostname,
                    baseURL: baseURL,
                    excerptHtml: it.baseViewModel.excerptHtml,
                    he: it.baseViewModel.he
                }) 
            %>

            document.querySelector('title').innerHTML = "Largest Sales <%=channelViewModel.channel.title%>"

            $f7.preloader.hide()

            return $render

        }


    </script>

    <%~ 
        include("_init", {
            hostname: hostname,
            baseURL: baseURL,
            libraryURL: it.baseViewModel.libraryURL,
            routablePages: routablePages,
            base64Version: base64Version
        }) 
    %>

</body>

</html>