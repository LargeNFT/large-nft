<!DOCTYPE html>
<html lang="en">

<head>

    <%~ include("@headStart", {baseURL: it.baseViewModel.baseURL}) %>


    <%~ 
      include("@meta_tags", {
        pageTitle: `Transaction for ${it.baseViewModel.channelViewModel.channel.title}`,
        title: `Transaction for ${it.baseViewModel.channelViewModel.channel.title}`,
        url: 'transaction',
        imageUrl: it.baseViewModel.channelCoverImageLink(),
        descriptionHTML: `Transaction for ${it.baseViewModel.channelViewModel.channel.title}`,
        hostname: it.baseViewModel.hostname,
        baseURL: it.baseViewModel.baseURL,
        excerptHtml: it.baseViewModel.excerptHtml,
        he: it.baseViewModel.he
      }) 
    %>

    <meta property="og:title" content="Transaction for <%=it.baseViewModel.channelViewModel.channel.title%>" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="<%= it.baseViewModel.link(`transaction`) %>" />
    <meta property="og:image" content="<%= it.baseViewModel.absoluteLink(`backup/export/images/${it.baseViewModel.channelViewModel.channel.coverImageId}.jpg`) %>" />
    <meta property="og:description" content="Transaction for <%=it.baseViewModel.channelViewModel.channel.title%>" />

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content="<%= it.baseViewModel.link(`transaction`) %>" />
    <meta property="twitter:title" content="Transaction for <%=it.baseViewModel.channelViewModel.channel.title%>" />
    <meta property="twitter:description" content="Transaction for <%=it.baseViewModel.channelViewModel.channel.title%>" />
    <meta property="twitter:image" content="<%= it.baseViewModel.absoluteLink(`backup/export/images/${it.baseViewModel.channelViewModel.channel.coverImageId}.jpg`) %>" />

    <%~ it.baseViewModel.headEndContents %>
    
</head>

<body>

    <div id="app">

        <div class="view view-main">

            <!--pageContent-->
            <div class="page" data-name="transaction">

                <nav-bar
                    logo="${logo}"
                    library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
                    large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
                    title="Transaction"
                    active="Transaction"
                    show_mint_page="<%=it.baseViewModel.showMintPage%>"
                    show_activity_page="<%=it.baseViewModel.showActivityPage%>"
                >
                </nav-bar>


                <div class="page-content">

                    <div class="row">
            
                        <div class="fixed-width-content center">
                            <transaction-viewer></transaction-viewer> 
                        </div>
                    </div>
            
                </div>
              
            
            </div>
            <!--/pageContent-->

        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    <script type="module" id="page-init-scripts">

        //pageInitScripts
        
        const init = (props, { $, $f7, $h, $on, $update }) => {


            let channelWebService = globalThis.container.get("ChannelWebService")

            
            let baseURI = globalThis.container.get("baseURI")
            let hostname = globalThis.container.get("hostname")

            let logo = JSON.parse(`<%~ JSON.stringify(it.baseViewModel.logo ? it.baseViewModel.logo : {})  %>`)


            // let eventWebService = globalThis.container.get("EventWebService")

            $on('pageInit', async () => {

                // let activityStartChangedEvent = new CustomEvent('user-address-changed')
                // activityStartChangedEvent.address = $f7.views.main.router.currentRoute?.query?.address

                // document.dispatchEvent(activityStartChangedEvent)

                // await $update()

            })

            $on('pageReinit', async () => {

                // let activityStartChangedEvent = new CustomEvent('user-address-changed')
                // activityStartChangedEvent.address = $f7.views.main.router.currentRoute?.query?.address

                // document.dispatchEvent(activityStartChangedEvent)

                // await $update()

            })


            $on('pageBeforeOut', async () => {

            })

            <%~ 
                include("@meta_tags_js", {
                    title: `Transaction for ${it.baseViewModel.channelViewModel.channel.title}`,
                    url: 'transaction',
                    imageUrl: it.baseViewModel.channelCoverImageLink(),
                    descriptionHTML: `Transaction for ${it.baseViewModel.channelViewModel.channel.title}`,
                    hostname: it.baseViewModel.hostname,
                    baseURL: it.baseViewModel.baseURL,
                    excerptHtml: it.baseViewModel.excerptHtml,
                    he: it.baseViewModel.he
                }) 
            %>


            document.querySelector('title').innerHTML = "Transaction <%=it.baseViewModel.channelViewModel.channel.title%>"

            $f7.preloader.hide()

            return $render

        }

        ///pageInitScripts

    </script>

    <%~ 
            include("@init", {
                hostname: it.baseViewModel.hostname,
                baseURL: it.baseViewModel.baseURL,
                libraryURL: it.baseViewModel.libraryURL,
                routablePages: it.baseViewModel.routablePages,
                base64Version: it.baseViewModel.base64Version,
                channelId: it.baseViewModel.channelId
            }) 
    %>

</body>

</html>