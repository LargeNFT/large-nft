<% 

    let itemViewModel = it.itemViewModel
    let previous = it.previous
    let next = it.next
    
    const truncateEthAddress = (address) => {
        // Captures 0x + 4 characters, then the last 4 characters.
        const truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/
        const match = address.match(truncateRegex)
        if (!match) return address
        return `${match[1]}â€¦${match[2]}`
    }


    let coverImageLink = itemViewModel.coverImage ? it.baseViewModel.absoluteLink(`backup/${itemViewModel.coverImage.generated ? 'generated' : 'export'}/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''

    const getAttributeKey = (as) => {
        return encodeURIComponent(`${as.traitType}::::${as.value}`)
    }


%>


<!DOCTYPE html>
<html lang="en">

<head>

    <%~ include("@headStart", {baseURL: it.baseViewModel.baseURL}) %>


    <style>
    html {
        visibility: hidden;
        opacity: 0;
    }
    </style>


    <title><%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %></title>


    <%~ 
      include("@meta_tags", {
        title: `${itemViewModel.item.title ? itemViewModel.item.title + ' / ' : ''}${itemViewModel.channel.title} #${itemViewModel.item.tokenId}`,
        url: `t/${itemViewModel.item.tokenId}`,
        imageUrl: coverImageLink,
        descriptionHTML: itemViewModel.contentHTML,
        hostname: it.baseViewModel.hostname,
        baseURL: it.baseViewModel.baseURL,
        excerptHtml: it.baseViewModel.excerptHtml,
        he: it.baseViewModel.he
      }) 
    %>

    <%~ it.baseViewModel.headEndContents %>

</head>

<body>

    <div id="app">

        <div class="view view-main">

            <!--pageContent-->
            <div class="page" data-name="token-<%=itemViewModel.item.tokenId %>">

                <nav-bar
                    logo="${logo}"
                    library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
                    large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
                    title="<%=it.baseViewModel.channelViewModel.channel.title%>"
                    show_mint_page="<%=it.baseViewModel.showMintPage%>"
                    show_activity_page="<%=it.baseViewModel.showActivityPage%>"
                    breadcrumbs="${breadcrumbs}"
                >
                </nav-bar>

                <token-toolbar
                    token_id="<%= itemViewModel.item.tokenId %>"
                    item_count="<%= it.baseViewModel.channelViewModel.channel.itemCount %>" 
                >
                </token-toolbar>
           
                <div class="page-content">


                    <div class="main-split">
                                
                        <div class="left">
                    
                            <div class="block animation-card ">
                    
                                <div class="animation-content <%= itemViewModel.item.coverImageAsAnimation ? 'animation-image' : ''%>">
                    
                                    <% if (itemViewModel.item.coverImageAsAnimation) { %>
                                        <img src="<%= it.baseViewModel.link(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`) %>"  />
                                    <% } else { %>
                                        <%~itemViewModel.animationContentHTML %>
                                    <% } %>
                    
                                </div>
                    

                                <div class="block split-row-both">
                                    <div>
                                        <a class="button button-outline back-token-button margin-bottom color-gray" href="#" >
                                            <i class="icon f7-icons color-blue">arrow_left</i>
                                        </a>
                                    </div>
                                    <div>
                                        <% if (next) { %>
                                            <a class="button button-fill continue-button margin-bottom" href="#">
                                                Continue <i class="f7-icons">arrow_right</i>
                                            </a>
                                        <% } %>
                                    </div>
                            
                                </div>
                    
                            </div> 
                    
                            <div class="hidden-on-load">

                                ${transactionsViewModel?.transactions?.length > 0 ? $h`
              
                                    <transaction-row transactions="${transactionsViewModel}" items="${transactionsViewModel?.rowItemViewModels}" token="<%= itemViewModel.item.tokenId %>">
                                        <div class="card-header">
                                            Activity
                                            <div class="last-updated">Last updated: ${dayjs(transactionsViewModel.lastUpdated).fromNow()}</div>
                                        </div>
                                    </transaction-row>

                           
                                ` : $h` `}
              
                            </div>

                            <div class="hide-on-pageinit">

                                <div class="card skeleton-text">
                                    <div class="card-header">Activity</div>
                                    <div class="card-content card-content-padding data-table">
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                                    </div>

                                  </div>

                            </div>


                        </div>
                    
                        <div class="right">
                            
                            <div class="card" >
                                <form class="card-content card-content-padding" id="token_navigator_form">
                                  <input type="number" class="goto-input" style="width: 60px; border: 1px solid #cccccc; display: inline-block;" value="<%= itemViewModel?.item?.tokenId %>" min="0"  />
                                  <span class="paging-label">Enter Token ID</span>
                                  <button class="goto-button button button-small button-fill">Go</button>
                                </form>
                            </div>
                    
                            <% if (previous || next) { %>
                    
                                <div class="card large-only">
                                  <div class="card-content card-content-padding">
                                    <div class="segmented">
                    
                                      <% if (previous) { %>
                                        <a class="button button-outline back-token-button" data-transition="none">
                                            <i class="icon f7-icons">arrow_left</i>
                                          </a>
                                      <% } else { %>
                                        <a class="button button-outline" href="#"></a>
                                      <% } %>
                    
                    
                                      <% if (next) { %>
                                        <a class="button button-outline continue-button" data-transition="none">
                                            <i class="f7-icons">arrow_right</i>
                                          </a>
                                      <% } else { %>
                                        <a class="button button-outline" href="#"></a>
                                      <% } %>
                    
                                    </div>
                                  </div>
                                </div>
                    
                            <% } %>
                    
                    
                    
                     
                            <% if (itemViewModel.channel.contractAddress) { %>

                                <div class="hidden-on-load">
                                    <div class="card">
                                        <div class="card-content card-content-padding">
                                            ${token?.currentOwnerId ? $h`
                                                Owned by <a href="${link(`u/?address=${token?.currentOwnerId}`)}">${tokenOwnerDisplay}</a>
                                            ` : $h`
                                                NFT has not been <a href="${link(`mint.html`)}">minted</a> yet.
                                            `}
                                        </div>
                                    </div>
                                </div>

                              
                                <div class="data-table card">
                            
                                    <div class="card-header">
                                        Token Info
                                    </div>
                                
                                    <div class="card-content">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td class="label-cell">Contract Address</td>
                                                    <td><a href="https://etherscan.io/token/<%= itemViewModel.channel.contractAddress %>" class="external">${contractAddress}</a></td>
                                                </tr>
                                        
                                                <tr>
                                                    <td class="label-cell">Token ID</td>
                                                    <td>#<%= itemViewModel?.item?.tokenId %></td>
                                                </tr>
                                    
                                                <tr>
                                                    <td class="label-cell">Metadata</td>
                                                    <td><a href="${metadataURL}" class="external">View</a></td>
                                                </tr>                                        
                                            </tbody>
                                        </table>
                                    </div>
                                </div>

                            <% } %>
                    

                    
                            <div class="card">
                                
                                <div class="card-header">
                                    Attributes
                                </div>
                    
                                <div class="card-content data-table">
                    
                                    <% itemViewModel.attributeSelections?.map( (as)=> { %>
                    
                                        <% if (as.attributeTotal?.categoryPercent) { %>
                                            <div class="button-outline attribute-value">
                                                <div class="trait-type"><%= as.traitType %></div>
                                                <div class="value"><a href="${link(`attribute/?attributeKey=<%= getAttributeKey(as) %>`)}"><%= as.value %></a></div>
                                                <div class="category-percent"><%= as.attributeTotal?.categoryPercent  %> have this trait</div>
                                            </div>                                                
                                        <% } %>
                    
                    
                                    <% }) %>
                    
                                </div>
                    
                            </div>
                    
                    
                            <% 
                            if (it.baseViewModel.marketplaces?.length > 0) {
                            %>
                                <div class="card">
                                    <div class="card-header">
                                        View on Marketplaces
                                    </div>
                                    <div class="card-content">
                                        <div class="list simple-list">
                                            <ul>
                                            
                                            <% 
                                                for (let marketplace of it.baseViewModel.marketplaces) { 
                                            %>  
                                                <li><a href="<%= it.baseViewModel.marketplaceAssetLink(marketplace, itemViewModel.item.tokenId) %>" class="external"><%= marketplace.name %></a></li>     
                                            <%
                                                }
                                            %>
                        
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            <%
                                }
                            %>                                
                    
                            <% if (!itemViewModel.item.coverImageAsAnimation) { %>
                                <div class="card">
                                    <div class="card-header">Cover Image</div>
                                    <div class="card-content">
                                        <img src="<%= it.baseViewModel.link(`backup/export/images/${itemViewModel.coverImage._id}.${itemViewModel.coverImage.generated ? 'svg' : 'jpg'}`) %>" class="cover-image-preview" />
                                    </div>
                                </div>
                            <% } %>
                    
                    
                    
                        </div>
                    
                        <div class="left">
                            <%~ include("@footer", {baseURL: it.baseViewModel.baseURL}) %>          
                        </div>


                    </div>


<!--                     
                    <div class="swiper" id="swiper-<%= itemViewModel.item.tokenId  %>" style="display:none;">
                        <div class="swiper-wrapper">
                            <div class="swiper-slide" data-url="<%= itemViewModel.item.previous ? it.baseViewModel.link(`t/${itemViewModel.item.previous.tokenId}`) : it.baseViewModel.link(`index.html`) %>">
                            </div> 

                            <div class="swiper-slide">   




                                
                            </div>

                            <% if (itemViewModel.item.next) { %>
                                <div class="swiper-slide" data-url="<%= it.baseViewModel.link(`t/${itemViewModel.item.next.tokenId}`) %>">
                                </div> 
                            <% } %>

                        </div>
                    </div> -->

                </div>

            </div>
            <!--/pageContent-->

        </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>

    
    <script type="module" id="page-init-scripts">    

        //pageInitScripts

        const init = (props, { $, $f7, $h, $on, $update }) => {
            

            let channelWebService = globalThis.container.get("ChannelWebService")
            let baseURI = globalThis.container.get("baseURI")
            let hostname = globalThis.container.get("hostname")

            let transactionWebService = globalThis.container.get("TransactionWebService")
            let walletService = globalThis.container.get("WalletService")
            
            let uiService = globalThis.container.get("UiService")

            let readerSettingsService = globalThis.container.get("ReaderSettingsService")
            let tokenService = globalThis.container.get("TokenService")
            let tokenOwnerService = globalThis.container.get("TokenOwnerService")

            let logo = JSON.parse(`<%~ JSON.stringify(it.baseViewModel.logo ? it.baseViewModel.logo : {})  %>`)


            let title = `<%~ itemViewModel.item.title %>`
            let tokenId = parseInt(`<%~ itemViewModel.item.tokenId %>`)
            

            let breadcrumbs = [{
                text: JSON.parse(`<%~ JSON.stringify(it.baseViewModel.channelViewModel.channel.symbol)  %>`),
                path: baseURI()
            }, {
                text: "Explore",
                path: `${baseURI()}explore.html`
            },{
                text: title ? title : `#${tokenId}`
            }]


            let hasPrevious = JSON.parse(`<%~ JSON.stringify(previous?.item.tokenId != undefined) %>`)
            let hasNext = JSON.parse(`<%~ JSON.stringify(next?.item.tokenId != undefined) %>`)

            let swiper

            let transactionsViewModel
            let latest

            let token
            let tokenOwnerDisplay

            let metadataURL = `${baseURI()}backup/export/metadata/<%= itemViewModel.item.tokenId  %>.json`


            let contractAddress = walletService.truncateEthAddress('<%= itemViewModel.channel.contractAddress %>')

            

            const link = (href) => {
              return baseURI() + href
            }   


            const initSwiper = () => {

                // swiper = $f7.swiper.create('#swiper-<%= itemViewModel.item.tokenId  %>', {
                //     initialSlide: 1,
                //     effect: 'fade',
                //     on: {
                //         slideChange() {

                //             const swiper = this

                //             let slide = $(swiper.wrapperEl).children('.swiper-slide').eq(swiper.activeIndex)

                //             let url = $(slide).data('url')


                //             if (url) {
                //                 $f7.views.main.router.navigate(url, {
                //                     transition: 'none',
                //                     history: true,
                //                     reloadAll: true
                //                 })
                //             }
                //         }
                //     }
                // })

                // $('#swiper-<%= itemViewModel.item.tokenId  %>').show()

                const prev = (e) => {

                    let link = "<%= previous ? it.baseViewModel.link(`t/${previous.item.tokenId}`) : it.baseViewModel.link(`index.html`) %>"
                    
                    $f7.views.main.router.navigate(link, {
                        transition: 'none',
                        history: true,
                        reloadAll: true
                    })

                    // swiper.slidePrev(0)
                }

                const next = (e) => {

                    let link = "<%= next ? it.baseViewModel.link(`t/${next.item.tokenId}`) : '' %>"


                    if (link?.length > 0) {
                        $f7.views.main.router.navigate(link, {
                            transition: 'none',
                            history: true,
                            reloadAll: true
                        })
                    }


                    // swiper.slideNext(0)
                }

                $('.fab-left-center').on('click', prev)
                $('.fab-right-center').on('click', next)

                $('.back-token-button').on('click', prev)
                $('.continue-button').on('click', next)

            }

            const loadActivity = async () => {

                loading = true

                try  {

                    latest = await transactionWebService.getLatest()

                    if (latest?.latestToken && tokenId <= latest.latestToken) {

                        token = await tokenService.get(tokenId)

                        if (token) {
                            tokenOwnerDisplay = await tokenOwnerService.getDisplayName(token.currentOwnerId)
                            transactionsViewModel = token.transactionsViewModel
                        }

                    }

                    if (!transactionsViewModel) {
                        transactionsViewModel = {}
                    }

                    transactionsViewModel.lastUpdated = latest.lastUpdated

                } catch(ex) { console.log(ex) }

                $('.hidden-on-load').removeClass('hidden-on-load')

                loading = false

                await $update()


            }


            $on('pageInit', async () => {

                await channelWebService.loadChannel(
                        "<%= it.baseViewModel.channelViewModel.channel._id %>",
                        '<%= it.baseViewModel.baseURL %>',
                        '<%= it.baseViewModel.hostname %>'
                )

                let readerSettings = await readerSettingsService.get()
                $f7.emit('current-page-updated', readerSettings.currentPage)

                await $update()

                await readerSettingsService.updateCurrentPage(parseInt(props.tokenId))
                $('#token_navigator_form').on('submit', goTokenFormSubmit)

                initSwiper()

                await loadActivity()

                // $('.swiper').show()
                $('.hide-on-pageinit').hide()

            })          

            $on('pageReinit', async () => {

                await channelWebService.loadChannel(
                        "<%= it.baseViewModel.channelViewModel.channel._id %>",
                        '<%= it.baseViewModel.baseURL %>',
                        '<%= it.baseViewModel.hostname %>'
                )

                let readerSettings = await readerSettingsService.get()
                currentPage = readerSettings.currentPage

                await $update()

                initSwiper()

                await loadActivity()

                //Dispatch event so we can refresh list
                let ev = new CustomEvent('transactions-updated')
                ev.transactionsViewModel = transactionsViewModel
                document.dispatchEvent(ev)


                // $('.swiper').show()
                $('.hide-on-pageinit').hide()

            })

            $on('pageBeforeOut', async () => {
                // $('.swiper').hide()
                // console.log('Destroying swiper #swiper-<%= itemViewModel.item.tokenId  %>')
                // $f7.swiper.destroy('#swiper-<%= itemViewModel.item.tokenId  %>')
            })

            const goTokenFormSubmit = async (e) => {
          
                e.preventDefault()

                const val = $(e.currentTarget).children('.goto-input').val()

                try {
                    $f7.views.main.router.navigate(`${baseURI()}t/${parseInt(val.toString())}`)
                } catch(ex) {
                    console.log(ex)
                    $f7.dialog.alert("Invalid Page")
                }

            }

            <%~ 
                include("@meta_tags_js", {
                    title: `${itemViewModel.item.title ? itemViewModel.item.title + ' / ' : ''}${itemViewModel.channel.title} #${itemViewModel.item.tokenId}`,
                    url: `t/${itemViewModel.item.tokenId}`,
                    imageUrl: coverImageLink,
                    descriptionHTML: itemViewModel.contentHTML,
                    hostname: it.baseViewModel.hostname,
                    baseURL: it.baseViewModel.baseURL,
                    excerptHtml: it.baseViewModel.excerptHtml,
                    he: it.baseViewModel.he
                }) 
            %>


            document.querySelector('title').innerHTML = "<%= itemViewModel.item.title ? itemViewModel.item.title + ' / ' : '' %><%= itemViewModel.channel.title %> #<%= itemViewModel.item.tokenId %>"

            $f7.preloader.hide()

            return $render;

        }

        ///pageInitScripts

    </script>

    <%~ 
        include("@init", {
            hostname: it.baseViewModel.hostname,
            baseURL: it.baseViewModel.baseURL,
            libraryURL: it.baseViewModel.libraryURL,
            routablePages: it.baseViewModel.routablePages,
            base64Version: it.baseViewModel.base64Version,
            channelId: it.baseViewModel.channelId
        }) 
    %>

    

</body>

</html>