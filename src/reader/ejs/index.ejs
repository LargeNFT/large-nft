<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage
    let logo = it.baseViewModel.logo

    const link = (href) => {
        return `${baseURL + href}`
    }   


    const absoluteLink = (href) => {
      return `${hostname + baseURL + href}`
    }   
    

    const marketplaceLink = (marketplace) => {

      let link = marketplace.link 

      //Replace contract if we find it 
      if (channelViewModel.channel.contractAddress) {
        link = link.replace("{contractId}", channelViewModel.channel.contractAddress)
      }

      return link
    }

    let coverImageLink = channelViewModel.coverImage ? absoluteLink(`backup/${channelViewModel.coverImage.generated ? 'generated' : 'export'}/images/${channelViewModel.coverImage._id}.${channelViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''


%>



<!DOCTYPE html>
<html lang="en">

  <head>

    <%~ include("headStart", {baseURL: baseURL}) %>


    <style>
      html {
        visibility: hidden;
        opacity: 0;
      }
    </style>


    <title>
      <%= it.title %>
    </title>

    <%~ 
      include("_meta_tags", {
        title: channelViewModel.channel.title,
        url: 'index.html',
        imageUrl: coverImageLink,
        descriptionHTML: channelViewModel.channel.descriptionHTML,
        hostname: hostname,
        baseURL: baseURL,
        excerptHtml: it.baseViewModel.excerptHtml,
        he: it.baseViewModel.he
      }) 
    %>



    <%~ it.baseViewModel.headEndContents %>
    

  </head>

  <body>

    <div id="app">

      <div class="view view-main">

        <!--pageContent-->
        <div class="page" data-name="reader-home">

          <nav-bar
            logo="${logo}"
            library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
            large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
            title="<%=channelViewModel.channel.title%>"
            show_mint_page="<%=showMintPage%>"
            show_activity_page="<%=showActivityPage%>"
            breadcrumbs="${breadcrumbs}"
          >
          </nav-bar>


          <token-toolbar
            token_id="0"
            item_count="<%= channelViewModel.channel.itemCount %>" 
          >
          </token-toolbar>


          <div class="page-content">

            <div class="main-split">

              <div class="left">

                <div class="card channel-card-show">

                  <div class="card-header banner" id="banner" <% if(channelViewModel?.channel.coverBannerId) { %>
                        style="background-image: url('<%= link(`backup/generated/images/${channelViewModel.channel.coverBannerId}.webp`) %>')"
                      <% } else { %>
                        style="background: #cccccc;"

                      <% } %>
                        >
    
                        <a href="<%= link('index.html') %>">
                          <% if (channelViewModel?.channel.coverImageId) { %>
                            <img src="<%= link(`backup/generated/images/100x100/${channelViewModel.channel.coverImageId}.webp`) %>" alt="Primary avatar" class="avatar" />
                          <% } else { %>
                            <i class="f7-icons avatar">photo</i>
                          <% } %>
                        </a>
    
                  </div>
    
                  <div class="card-content card-content-padding">
    
                    <div class="title">
                      <%= channelViewModel.channel.title %>
                    </div>
    
                    <% if(channelViewModel?.authorDisplayName) { %>
                      <div class="name">
                        By <%= channelViewModel?.authorDisplayName %>
                      </div>
                    <% } %>
    
                    <div class="description" id="channel-show-description-<%=channelViewModel.channel._id%>">
                      <%~ channelViewModel.channel?.descriptionHTML %>
                    </div>
    
    
                    <div class="start-buttons">
                      <a href="<%= link(`t/${it.firstPost.item.tokenId}`) %>" class="button button-fill text-color-white ready-button" data-transition="f7-cover">Browse Collection</a>
                      <a href="<%= link(`explore.html`) %>" class="button button-outline ready-button" data-transition="f7-cover">Explore</a>

                    </div>
    
    
                  </div>
    
                </div>
    
                <div class="hidden-on-load">
    
                  <% if (showMintPage) { %>
                    <mint-info
                      baseurl="<%= baseURL %>"
                    ></mint-info>
                  <% } %>


                  <% if(channelViewModel.channel?.contractAddress) { %>

                    <div class="card card-header-divider">
                      <div class="card-header">Overall Stats</div>
                      <div class="card-content card-content-padding">

                        <div class="block block-strong inset stats">
      
                          <div class="stats-row margin-bottom">
        
                            <div>
                              Number of Sales (Lifetime)
                            </div>
        
                            <div class="price">
                              <strong>${new Intl.NumberFormat('en-US').format(homeViewModel?.salesReport?.totals?.events ? homeViewModel?.salesReport?.totals?.events : 0)}</strong>
                            </div>
                          </div>
        
                          <div class="stats-row margin-bottom">
        
                            <div>
                              Average Sale
                            </div>
        
                            <div class="price">
                              <strong>${new Intl.NumberFormat('en-US').format(homeViewModel?.salesReport?.totals?.averageEthValue ? homeViewModel?.salesReport?.totals?.averageEthValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(homeViewModel?.salesReport?.totals?.averageUsdValue ? homeViewModel?.salesReport?.totals?.averageUsdValue : 0, 2)}</span>
                            </div>
                            
        
                          </div>
        
                          <div class="stats-row margin-bottom">
        
                            <div>
                              Total Value of All Sales (Lifetime)
                            </div>
                            
                            <div class="price">
                              <strong>${new Intl.NumberFormat('en-US').format(homeViewModel?.salesReport?.totals?.ethValue ? homeViewModel?.salesReport?.totals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(homeViewModel?.salesReport?.totals?.usdValue ? homeViewModel?.salesReport?.totals?.usdValue : 0, 2)}</span>
                            </div>
                          </div>
        
                          <div class="stats-row margin-bottom">
                              
                            <div>
                              Value of Sales (24 Hours)
                            </div>
        
                            <div class="price">
                              <strong>${new Intl.NumberFormat('en-US').format(homeViewModel?.salesReport?.dayTotals?.ethValue ? homeViewModel?.salesReport?.dayTotals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(homeViewModel?.salesReport?.dayTotals?.usdValue ? homeViewModel?.salesReport?.dayTotals?.usdValue?.toFixed(2) : 0, 2)}</span>
                            </div>
                          </div>
        
                          <div class="stats-row margin-bottom">
        
                            <div>
                              Value of Sales (Month)
                            </div>
        
                            
                            <div class="col-50 large-100 price">
                              <strong>${new Intl.NumberFormat('en-US').format(homeViewModel?.salesReport?.monthTotals?.ethValue ? homeViewModel?.salesReport?.monthTotals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(homeViewModel?.salesReport?.monthTotals?.usdValue ? homeViewModel?.salesReport?.monthTotals?.usdValue?.toFixed(2) : 0, 2)}</span>
                            </div>
                          </div>
        
                          <div class="stats-row margin-bottom">
                            
                            <div>
                              Value of Sales (Year)
                            </div>
        
                            <div class="price">
                              <strong>${new Intl.NumberFormat('en-US').format(homeViewModel?.salesReport?.yearTotals?.ethValue ? homeViewModel?.salesReport?.yearTotals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(homeViewModel?.salesReport?.yearTotals?.usdValue ? homeViewModel?.salesReport?.yearTotals?.usdValue?.toFixed(2) : 0, 2)}</span>
                            </div>
                          </div>
          
        
                        </div>
        
                        <div class="block split-row-both">
                          <a class="button button-outline margin-bottom" href="${link('leaderboard')}">Top Owners</a>
                          <a class="button button-outline margin-bottom" href="${link('attributes')}">All Attributes</a>
                        </div>

                      </div>
                    </div>

                  <% } %>
  
  
                  ${homeViewModel?.leaderboard?.tokenOwners?.length > 0 ? $h`
                    
                    <div class="card data-table">
                      <div class="card-header">Leaderboard</div>
                      <div class="card-content card-content-padding">

                        <table class="leaderboard-table">
                          <thead>
                              <tr>
                                  <th class="label-cell">Rank</th>
                                  <th class="address-cell">Address</th>
                                  <th class="numeric-cell">Owned</th>
                                  <th class="numeric-cell">Buys</th>
                                  <th class="numeric-cell">Sales</th>
                                  <th class="text-cell">Last Active</th>

                              </tr>
                          </thead>
                  
                          <leaderboard-rows token_owners="${homeViewModel?.leaderboard?.tokenOwners}"></leaderboard-rows>

                      </table>

                      </div>
                    </div>

                    
                    <div class="block save-row">
                      <div class="large-only"></div>
                      <a href="${link('leaderboard')}" class="button button-fill">View Leaderboard</a>
                    </div>
                    
                  ` : $h`<span />`}
  
  
  
                  ${homeViewModel?.largestSales && homeViewModel.largestSales?.sales?.length > 0 ? $h`

                    <div class="card card-header-divider data-table">
                      <div class="card-header">Largest Sales</div>
                      <div class="card-content card-content-padding">
                        <largest-sales largest_sales="${homeViewModel?.largestSales}"></largest-sales>
                      </div>
                    </div>
  
  
                    <div class="block save-row">
                      <div class="large-only"></div>
                      <a href="${link('sales')}" class="button button-fill">View Top 100</a>
                    </div>
  
                  ` : $h` `}
  
  
                  ${homeViewModel?.recent?.transactions?.length > 0 ? $h`
    
                    <div class="card data-table">
                      <div class="card-header">
                        Recent Activity
                        <div class="last-updated">Updated: ${dayjs(homeViewModel?.recent.lastUpdated).fromNow()}</div>
                      </div>
                      <div class="card-content card-content-padding">
                        <transaction-row transactions="${homeViewModel.recent}" items="${homeViewModel?.recent.rowItemViewModels}"></transaction-row>
                      </div>
                    </div>

  
  
                    <div class="block save-row">
                      <div class="large-only"></div>
                      <a href="${link('activity')}" class="button button-fill">View All</a>
                    </div>
              
                  ` : $h`<span />`}
    
    
                </div>
                
                <div class="hide-on-pageinit">
    
                  <div class="card skeleton-text">
                    <div class="card-header">Overall Stats</div>
                    <div class="card-content card-content-padding data-table">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
  
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
  
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
  
                    </div>
  
                  </div>
  
  
                  <div class="card skeleton-text">
                    <div class="card-header">Overall Stats</div>
                    <div class="card-content card-content-padding data-table">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                    </div>
  
                  </div>
  
  
                  <div class="card skeleton-text">
                    <div class="card-header">Overall Stats</div>
                    <div class="card-content card-content-padding data-table">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                    </div>
  
                  </div>
  
  
                  <div class="card skeleton-text">
                      <div class="card-header">Recent Activity</div>
                      <div class="card-content card-content-padding data-table">
                          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                          lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                      </div>
    
                  </div>
    
                </div>
    
  
                <% 
                  if (channelViewModel.staticPagesViewModel.index?.length > 0) {
    
                    for (let staticPage of channelViewModel.staticPagesViewModel.index) {
                 %>
    
                  <div class="card static-page-card">   
                    <div class="card-content card-content-padding">
                      <%~ staticPage.contentHTML %>
                    </div>               
                  </div>
    
                <%
                    }
                  }                  
                %>
    
    
  
  
                <% if (channelViewModel?.channel.licenseHTML?.length > 13) { %>
    
                  <div class="card">
                    <div class="card-content card-content-padding license">
                      <%~ channelViewModel?.channel.licenseHTML %>
                    </div>
                  </div>
    
                <% } %>
  

              </div>

              <div class="right">

                <div class="hidden-on-load">
      
                  <% if(channelViewModel.channel?.contractAddress) { %>

                    <div class="card card-header-divider">
                      <div class="card-header">Links</div>
                      <div class="card-content card-content-padding">
                        <div class="list">
                          <ul>
              
                            <% if(channelViewModel.channel?.contractAddress) { %>
      
                              <li>
                                <div class="item-content">
                                  <div class="item-inner">
                                    <div class="item-title">
                                      <a class="link external" href="https://etherscan.io/address/<%=channelViewModel.channel?.contractAddress%>">Etherscan</a>
                                    </div>
                                  </div>
                                </div>
                              </li>
                            <% } %>
        
                            <% for (let externalLink of externalLinks) { %>
      
                              <li>
                                <div class="item-content">
                                  <div class="item-inner">
                                    <div class="item-title">
                                      <a class="link external" href="<%= externalLink.link %>"><%= externalLink.name %></a>
                                    </div>
                                  </div>
                                </div>
                              </li>
      
                            <% } %>
    
    
                            <%
                            if (channelViewModel?.staticPagesViewModel?.links?.length > 0) {
                            %>
                              
                              <%
                                  for (let staticPage of channelViewModel.staticPagesViewModel.links) {
                              %>
        
                                    <li>
                                      <div class="item-content">
                                        <div class="item-inner">
                                          <div class="item-title">
                                            <a class="link" href="<%= link(`s/${staticPage.slug}.html`) %>"><%= staticPage.name %></a>
                                          </div>
                                        </div>
                                      </div>
                                    </li>
        
                              <%
                                  }
                              %> 
        
                            <%
                            }
                            %> 
      
                          </ul>
                        </div>
                      </div>
                    </div>

                  <% } %>


                  <% 
                    if (marketplaces?.length > 0) {
                  %>

                    <div class="card card-header-divider">
                      <div class="card-header">Marketplaces</div>
                      <div class="card-content card-content-padding">
                        <div class="list">           
                          <ul>
                              <% 
                              for (let marketplace of marketplaces) { 
                              %>  
        
                                <li>
                                  <div class="item-content">
                                    <div class="item-inner">
                                      <div class="item-title">
                                        <a class="link external" href="<%= marketplaceLink(marketplace) %>"><%= marketplace.name %></a>
                                      </div>
                                    </div>
                                  </div>
                                </li>
                              <%
                              }
                              %>
                          </ul>
                        </div>
                      </div>
                    </div>

                  <% } %>
  
                </div>

              </div>

              <div class="left">
                <%~ include("footer", {baseURL: baseURL}) %>
              </div>

            </div>


          </div>

        </div>
        <!--/pageContent-->

      </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>
    
    <script type="module" id="page-init-scripts">

      //pageInitScripts

      const init = (props, { $, $f7, $h, $on, $update }) => {

          let channelWebService = globalThis.container.get("ChannelWebService")

          let baseURI = globalThis.container.get("baseURI")
          let hostname = globalThis.container.get("hostname")

          let transactionWebService = globalThis.container.get("TransactionWebService")
          let itemWebService = globalThis.container.get("ItemWebService")
          let tokenOwnerPageService = globalThis.container.get("TokenOwnerPageService")
          let readerSettingsService = globalThis.container.get("ReaderSettingsService")

          let walletService = globalThis.container.get("WalletService")
          let mintWebService = globalThis.container.get("MintWebService")

          let breadcrumbs

          let logo = JSON.parse(`<%~ JSON.stringify(logo ? logo : {})  %>`)

          const PER_PAGE = 35

          let homeViewModel
          let mintingViewModel 

          let loading = true

          let firstPageExploreItems 

          const link = (href) => {
            return baseURI() + href
          }   

          const loadActivity = async () => {

            loading = true

            try  {

              homeViewModel = await transactionWebService.getHomeViewModel()

              //Last updated won't be right because this only gets written when it actually changes.
              let latest = await transactionWebService.getLatest()
              
              if (homeViewModel?.largestSales) {
                homeViewModel.largestSales.lastUpdated = latest?.lastUpdated
              }
  
              await $update()

            } catch(ex) { console.log(ex) }

            $('.hidden-on-load').removeClass('hidden-on-load')

            loading = false

            await $update()


          }

          const loadMintingViewModel = async () => {
      
            try  {

              if (!walletService.provider) {
                await walletService.initProvider()
              }

              //Might still not have a provider. 
              if (walletService.provider) {
                hasProvider = true
                mintingViewModel = await mintWebService.getHomeMintingViewModel()
              } 

            } catch(ex) {
              console.log(ex)
            }
            
            $f7.emit('minting-view-model-updated', mintingViewModel)


          }

          $on('pageInit', async () => {

            await channelWebService.loadChannel(
                    "<%= channelViewModel.channel._id %>",
                    '<%= baseURL %>',
                    '<%= hostname %>'
            )

            let readerSettings = await readerSettingsService.get()
            $f7.emit('current-page-updated', readerSettings.currentPage)

            
            <% if (showMintPage) { %>
            loadMintingViewModel().then(() => $update())
            <% } %>

            loadActivity().then(() => $update())

            $('.hide-on-pageinit').hide()

            $update()

            //Set empty alt for any decorative image tags that are missing it. 
            $("img:not([alt])").attr("alt", "")
          })

          $on('pageBeforeOut', async () => {
          })

          <%~ 
            include("_meta_tags_js", {
              title: channelViewModel.channel.title,
              url: 'index.html',
              imageUrl: coverImageLink,
              descriptionHTML: channelViewModel.channel.descriptionHTML,
              hostname: hostname,
              baseURL: baseURL,
              excerptHtml: it.baseViewModel.excerptHtml,
              he: it.baseViewModel.he
            }) 
          %>

          document.querySelector('title').innerHTML = "<%=channelViewModel.channel.title%>"

          $f7.preloader.hide()

          return $render

          

      }

      ///pageInitScripts

    </script>

    <%~ 
      include("_init", {
        hostname: hostname,
        baseURL: baseURL,
        libraryURL: it.baseViewModel.libraryURL,
        routablePages: routablePages,
        base64Version: base64Version,
        channelId: channelId
      }) 
    %>



  </body>

</html>