<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let showActivityPage = it.baseViewModel.showActivityPage
    let logo = it.baseViewModel.logo

    let traitTypes = Array.from(new Set(attributeReport?.map( at => at.traitType)))


    const link = (href) => {
        return `${baseURL + href}`
    }   




    const absoluteLink = (href) => {
      return `${hostname + baseURL + href}`
    }   

    

    let coverImageLink = channelViewModel.coverImage ? absoluteLink(`backup/${channelViewModel.coverImage.generated ? 'generated' : 'export'}/images/${channelViewModel.coverImage._id}.${channelViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''


%>

<!DOCTYPE html>
<html lang="en">

  <head>

    <%~ include("headStart", {baseURL: baseURL}) %>


    <style>
      html {
        visibility: hidden;
        opacity: 0;
      }
    </style>

    <title>
      <%= it.title %> Attribute Report
    </title>

    <%~ 
      include("_meta_tags", {
        title: `Attribute Report for '${channelViewModel.channel.title}' NFTs`,
        url: 'attributes.html',
        imageUrl: coverImageLink,
        descriptionHTML: `Attribute Report for '${channelViewModel.channel.title}' NFTs`,
        hostname: hostname,
        baseURL: baseURL,
        excerptHtml: it.baseViewModel.excerptHtml,
        he: it.baseViewModel.he
      }) 
    %>


    <%~ it.baseViewModel.headEndContents %>
    

  </head>

  <body>

    <div id="app">

      <div class="view view-main">



        <div class="page" data-name="home">

          <nav-bar
              logo="${logo}"
              library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
              large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
              title="Attributes"
              show_mint_page="<%=showMintPage%>"
              show_activity_page="<%=showActivityPage%>"
              breadcrumbs="${breadcrumbs}"
          >
          </nav-bar>


          <div class="page-content">

            <div class="fixed-width-content center">

              <div class="hidden-on-load">

                <div class="block-title block-title-medium large-only">Attributes</div>
                <div class="card scarcity-report-card data-table margin-top">
  
                  <div class="card-content">

                      <table class="attributes-table">

                        <% for (let traitType of traitTypes) { 
                          let attributeTotals = attributeReport.filter( at => at.traitType == traitType)
                        %>      
                          <thead>
                            <tr>
                              <th class="label-cell"><%= traitType %></th>
                              <th class="numeric-cell">Count</th>
                              <th class="numeric-cell">Percent</th>
                              <th class="numeric-cell">Sales</th>
                              <th>Total Sales</th>
                              <th>Average</th>
                            </tr>
                          </thead>
  
                          <tbody>
  
                          <%
                          for (let at of attributeTotals) {    
                          %>      
                            <tr>
                              <td class="label-cell"><a href="<%= baseURL %>attribute/?attributeKey=<%= encodeURIComponent(`${traitType}::::${at.value}`) %>"><%= at.value %></a></td> 
                              <td class="numeric-cell"><%= at.count %></td>
                              <td class="numeric-cell"><%= at.categoryPercent %></td>
                              <td class="numeric-cell">${attributesOverall?.find( row => row.traitType == `<%= traitType %>` && row.value == `<%= at.value %>`)?.events  || 0}</td>
                              <td>

                                <strong>${attributesOverall?.find( row => row.traitType == `<%= traitType %>` && row.value == `<%= at.value %>`)?.ethValue.toFixed(5) || 0}</strong> ETH
                                <br />
                                <span class="dollar-value">${transactionWebService.abbreviateDollars(attributesOverall?.find( row => row.traitType == `<%= traitType %>` && row.value == `<%= at.value %>`)?.usdValue, 2)}</span>

                              </td>
                              <td>


                                <strong>${attributesOverall?.find( row => row.traitType == `<%= traitType %>` && row.value == `<%= at.value %>`)?.averageEthValue.toFixed(5) || 0}</strong> ETH
                                <br />
                                <span class="dollar-value">${transactionWebService.abbreviateDollars(attributesOverall?.find( row => row.traitType == `<%= traitType %>` && row.value == `<%= at.value %>`)?.averageUsdValue, 2)}</span>

                              </td>
                            </tr>
                          <% 
                          }
                          %>
  
                          </tbody>
                        
  
                        <%
                          } 
                        %>
                      </table>
  
                  </div>
                </div>
  
            
                <div class="block">
                  <br />
                </div>

              </div>

              <div class="hide-on-pageinit">

                  <div class="card skeleton-text">
                      <div class="card-header">Attributes</div>
                      <div class="card-content card-content-padding data-table">
                          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                          lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                      </div>

                  </div>

              </div>

              <%~ include("footer", {baseURL: baseURL}) %>


            </div>

          </div>

        </div>

      </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>
    
    <script type="module" id="page-init-scripts">

      const init = (props, { $, $f7, $h, $on, $update }) => {


            let channelWebService = globalThis.container.get("ChannelWebService")
            let baseURI = globalThis.container.get("baseURI")
            let hostname = globalThis.container.get("hostname")

            let itemWebService = globalThis.container.get("ItemWebService")
            let transactionWebService = globalThis.container.get("TransactionWebService")

            let loading
            let attributesOverall

            let logo = JSON.parse(`<%~ JSON.stringify(logo ? logo : {})  %>`)

            let breadcrumbs = [{
                text: JSON.parse(`<%~ JSON.stringify(channelViewModel.channel.symbol)  %>`),
                path: baseURI()
            }, {
                text: "Attributes"
            }]

            const loadOverallSales = async () => {
                
                loading = true

                try  {

                    attributesOverall = await transactionWebService.getAttributesOverall()

                    let latest = await transactionWebService.getLatest()
                    lastUpdated = latest.lastUpdated
    
                } catch(ex) { 
                    console.log(ex) 
                }
                
                loading = false

                await $update()

            }



            $on('pageInit', async () => {

              await channelWebService.loadChannel(
                      "<%= channelViewModel.channel._id %>",
                      '<%= baseURL %>',
                      '<%= hostname %>'
              )

              await $update()

              $('.infinite-scroll-preloader').show()

              await loadOverallSales()

              $('.hidden-on-load').removeClass('hidden-on-load')
              $('.hide-on-pageinit').hide()

              await $update()

            })


            $on('pageReinit', async () => {

              await channelWebService.loadChannel(
                      "<%= channelViewModel.channel._id %>",
                      '<%= baseURL %>',
                      '<%= hostname %>'
              )

              await $update()

              await loadOverallSales()

              $('.hide-on-pageinit').hide()

              await $update()

            })

            <%~ 
                include("_meta_tags_js", {
                  title: `Attribute Report for '${channelViewModel.channel.title}' NFTs`,
                  url: 'attributes.html',
                  imageUrl: coverImageLink,
                  descriptionHTML: `Attribute Report for '${channelViewModel.channel.title}' NFTs`,
                  hostname: hostname,
                  baseURL: baseURL,
                  excerptHtml: it.baseViewModel.excerptHtml,
                  he: it.baseViewModel.he
                }) 
            %>
          

            document.querySelector('title').innerHTML = "<%=channelViewModel.channel.title%> Attribute Report"

            $f7.preloader.hide()

            return $render;

          

      }


    </script>

  <%~ 
    include("_init", {
      hostname: hostname,
      baseURL: baseURL,
      libraryURL: it.baseViewModel.libraryURL,
      routablePages: routablePages,
      base64Version: base64Version
    }) 
  %>

  </body>

</html>