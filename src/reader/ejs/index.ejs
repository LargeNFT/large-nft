<% 

    let channelViewModel = it.baseViewModel.channelViewModel 
    let hostname = it.baseViewModel.hostname
    let baseURL = it.baseViewModel.baseURL
    let marketplaces = it.baseViewModel.marketplaces
    let externalLinks = it.baseViewModel.externalLinks
    let routablePages = it.baseViewModel.routablePages
    let attributeReport = it.baseViewModel.attributeReport
    let base64Version = it.baseViewModel.base64Version
    let channelId = it.baseViewModel.channelId
    let showMintPage = it.baseViewModel.showMintPage
    let baseDir = it.baseViewModel.baseDir
    let showActivityPage = it.baseViewModel.showActivityPage
    let logo = it.baseViewModel.logo

    const link = (href) => {
        return `${baseURL + href}`
    }   


    const absoluteLink = (href) => {
      return `${hostname + baseURL + href}`
    }   
    

    const marketplaceLink = (marketplace) => {

      let link = marketplace.link 

      //Replace contract if we find it 
      if (channelViewModel.channel.contractAddress) {
        link = link.replace("{contractId}", channelViewModel.channel.contractAddress)
      }

      return link
    }

    let coverImageLink = channelViewModel.coverImage ? absoluteLink(`backup/${channelViewModel.coverImage.generated ? 'generated' : 'export'}/images/${channelViewModel.coverImage._id}.${channelViewModel.coverImage.generated ? 'png' : 'jpg'}`)  : ''


%>

<!DOCTYPE html>
<html lang="en">

  <head>

    <%~ include("headStart", {baseURL: baseURL}) %>


    <style>
      html {
        visibility: hidden;
        opacity: 0;
      }
    </style>


    <title>
      <%= it.title %>
    </title>

    <%~ 
      include("_meta_tags", {
        title: channelViewModel.channel.title,
        url: 'index.html',
        imageUrl: coverImageLink,
        descriptionHTML: channelViewModel.channel.descriptionHTML,
        hostname: hostname,
        baseURL: baseURL,
        excerptHtml: it.baseViewModel.excerptHtml,
        he: it.baseViewModel.he
      }) 
    %>



    <%~ it.baseViewModel.headEndContents %>
    

  </head>

  <body>

    <div id="app">

      <div class="view view-main">

        <div class="page" data-name="home">

          <nav-bar
            logo="${logo}"
            large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
            title="<%=channelViewModel.channel.title%>"
            show_mint_page="<%=showMintPage%>"
            show_activity_page="<%=showActivityPage%>"
            breadcrumbs="${breadcrumbs}"
          >
          </nav-bar>


          <token-toolbar
            token_id="0"
            item_count="<%= channelViewModel.channel.itemCount %>" 
          >
          </token-toolbar>


          <div class="page-content">

            <div class="fixed-width-content center">

              <div class="card channel-card-show">

                <div class="card-header banner" id="banner" <% if(channelViewModel?.channel.coverBannerId) { %>
                  style="background-image: url('<%= link(`backup/generated/images/${channelViewModel.channel.coverBannerId}.webp`) %>')"
                    <% } %>
                      >
  
                      <a href="<%= link('index.html') %>">
                        <% if (channelViewModel?.channel.coverImageId) { %>
                          <img src="<%= link(`backup/generated/images/${channelViewModel.channel.coverImageId}.webp`) %>" alt="Primary avatar" class="avatar" />
                        <% } else { %>
                          <i class="f7-icons avatar">photo</i>
                        <% } %>
                      </a>
  
                </div>
  
                <div class="card-content card-content-padding">
  
                  <div class="title">
                    <%= channelViewModel.channel.title %>
                  </div>
  
                  <% if(channelViewModel?.authorDisplayName) { %>
                    <div class="name">
                      By <a href="https://etherscan.io/address/<%=channelViewModel?.author._id%>" class="external">
                        <%= channelViewModel?.authorDisplayName %>
                      </a>
                    </div>
                  <% } %>
  
                  <div class="description" id="channel-show-description-<%=channelViewModel.channel._id%>">
                    <%~ channelViewModel.channel?.descriptionHTML %>
                  </div>
  
  
                  <div class="start-buttons">
                    <a href="<%= link(`t/${it.firstPost.item.tokenId}`) %>" class="button button-fill text-color-white ready-button" data-transition="f7-cover">Start</a>
                  </div>
  
  
                </div>
  
              </div>
  
              <div class="hidden-on-load">
  
                <% if (showMintPage) { %>
                  <mint-info
                    baseurl="<%= baseURL %>"
                  ></mint-info>
                <% } %>

                <div class="block-title block-title-medium">Links</div>
                <div class="list inset">   

                  <div class="list-group">
                    <ul>

                      <% if(channelViewModel.channel?.contractAddress || externalLinks?.length > 0) { %>
  
    
                        <% if(channelViewModel.channel?.contractAddress) { %>
  
                          <li>
                            <div class="item-content">
                              <div class="item-inner">
                                <div class="item-title">
                                  <a class="link external" href="https://etherscan.io/address/<%=channelViewModel.channel?.contractAddress%>">Etherscan</a>
                                </div>
                              </div>
                            </div>
                          </li>
                        <% } %>
    
                        <% for (let externalLink of externalLinks) { %>
  
                          <li>
                            <div class="item-content">
                              <div class="item-inner">
                                <div class="item-title">
                                  <a class="link external" href="<%= externalLink.link %>"><%= externalLink.name %></a>
                                </div>
                              </div>
                            </div>
                          </li>
  
                        <% } %>


                        <%
                        if (channelViewModel?.staticPagesViewModel?.links?.length > 0) {
                        %>
                          
                          <%
                              for (let staticPage of channelViewModel.staticPagesViewModel.links) {
                          %>
    
                                <li>
                                  <div class="item-content">
                                    <div class="item-inner">
                                      <div class="item-title">
                                        <a class="link" href="<%= link(`${staticPage.slug}.html`) %>"><%= staticPage.name %></a>
                                      </div>
                                    </div>
                                  </div>
                                </li>
    
                          <%
                              }
                          %> 
    
                        <%
                        }
                        %> 


    
                    <% } %>

                    </ul>



                  </div>

                  <div class="list-group">
                    <ul>

                      <% 
                      if (marketplaces?.length > 0) {
                      %>
    
                      <li class="item-divider">Marketplaces</li>

    
                        <% 
                        for (let marketplace of marketplaces) { 
                        %>  
  
                          <li>
                            <div class="item-content">
                              <div class="item-inner">
                                <div class="item-title">
                                  <a class="link external" href="<%= marketplaceLink(marketplace) %>"><%= marketplace.name %></a>
                                </div>
                              </div>
                            </div>
                          </li>
  
                              
                        <%
                        }
                        %>
                        
                    <%
                      }
                    %>

                    </ul>
                  </div>



                </div>
  
                <div class="block-title block-title-medium">Overall Stats</div>
                <div class="block block-strong inset stats">
  
                  <div class="row">

                    <div class="col-100 large-33 margin-bottom row">

                      <div class="col-50 large-100">
                        Number of Sales (Lifetime)
                      </div>

                      
                      <div class="col-50 large-100 price">
                        <strong>${new Intl.NumberFormat('en-US').format(salesReport?.totals?.events ? salesReport?.totals?.events : 0)}</strong>
                      </div>
                    </div>

                    <div class="col-100 large-33 margin-bottom row">

                      <div class="col-50 large-100">
                        Average Sale
                      </div>

                      <div class="col-50 large-100 price">
                        <strong>${new Intl.NumberFormat('en-US').format(salesReport?.totals?.averageEthValue ? salesReport?.totals?.averageEthValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(salesReport?.totals?.averageUsdValue ? salesReport?.totals?.averageUsdValue : 0, 2)}</span>
                      </div>
                      

                    </div>

                    <div class="col-100 large-33 margin-bottom row">

                      <div class="col-50 large-100">
                        Total Value of All Sales (Lifetime)
                      </div>
                      
                      <div class="col-50 large-100 price">
                        <strong>${new Intl.NumberFormat('en-US').format(salesReport?.totals?.ethValue ? salesReport?.totals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(salesReport?.totals?.usdValue ? salesReport?.totals?.usdValue : 0, 2)}</span>
                      </div>
                    </div>
                  </div>
  
                  <div class="row margin-top">

                    <div class="col-100 large-33 margin-bottom row">
                      
                      <div class="col-50 large-100">
                        Value of Sales (24 Hours)
                      </div>

                      <div class="col-50 large-100 price">
                        <strong>${new Intl.NumberFormat('en-US').format(salesReport?.dayTotals?.ethValue ? salesReport?.dayTotals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(salesReport?.dayTotals?.usdValue ? salesReport?.dayTotals?.usdValue?.toFixed(2) : 0, 2)}</span>
                      </div>
                    </div>

                    <div class="col-100 large-33 margin-bottom row">

                      <div class="col-50 large-100">
                        Value of Sales (Month)
                      </div>

                      
                      <div class="col-50 large-100 price">
                        <strong>${new Intl.NumberFormat('en-US').format(salesReport?.monthTotals?.ethValue ? salesReport?.monthTotals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(salesReport?.monthTotals?.usdValue ? salesReport?.monthTotals?.usdValue?.toFixed(2) : 0, 2)}</span>
                      </div>
                    </div>

                    <div class="col-100 large-33 margin-bottom row">
                      
                      <div class="col-50 large-100">
                        Value of Sales (Year)
                      </div>

                      <div class="col-50 large-100 price">
                        <strong>${new Intl.NumberFormat('en-US').format(salesReport?.yearTotals?.ethValue ? salesReport?.yearTotals?.ethValue : 0)}</strong> ETH <span class="dollars">${transactionWebService.abbreviateDollars(salesReport?.yearTotals?.usdValue ? salesReport?.yearTotals?.usdValue?.toFixed(2) : 0, 2)}</span>
                      </div>
                    </div>

                  </div>
  
                  <div class="row margin-top">
                    <div class="col-100 large-50">
                      <a class="button button-outline margin-bottom" href="${link('leaderboard')}">Top Owners</a>
                    </div>
                    <div class="col-100 large-50">
                      <a class="button button-outline margin-bottom" href="${link('attributes')}">All Attributes</a>
                    </div>
                  </div>

                </div>


                ${largestSales && largestSales?.sales?.length > 0 ? $h`
                  <div class="block-title block-title-medium">Largest Sales</div>

                  <largest-sales largest_sales="${largestSales}"></largest-sales>


                  <div class="block margin-top margin-bottom">
                    <div class="row">
                        <div class="col-50"></div>
                        <div class="col-50">
                          <a href="${link('sales')}" class="button button-fill">View Top 100</a>
                        </div>
                    </div>
                  </div>

                ` : $h` `}


                ${transactionsViewModel?.transactions?.length > 0 ? $h`
  
                  <div class="block-title block-title-medium">
                    <div class="last-updated">Updated: ${moment(transactionsViewModel.lastUpdated).fromNow()}</div>
                    Recent Activity
                  </div>
                  

                  <transaction-row transactions="${transactionsViewModel}" items="${transactionsViewModel.rowItemViewModels}"></transaction-row>

                  <div class="block margin-top margin-bottom">
                    <div class="row">
                        <div class="col-50"></div>
                        <div class="col-50">
                          <a href="${link('activity')}" class="button button-fill">View All</a>
                        </div>
                    </div>
        
                  </div>


            
                ` : $h`<span />`}
  
  
              </div>
              
              <div class="hide-on-pageinit">
  
                <div class="card skeleton-text">
                  <div class="card-header">Overall Stats</div>
                  <div class="card-content card-content-padding data-table">
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                      lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.

                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                      lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                      lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.

                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                      lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.

                  </div>

                </div>


                <div class="card skeleton-text">
                  <div class="card-header">Overall Stats</div>
                  <div class="card-content card-content-padding data-table">
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                      lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                  </div>

                </div>


                <div class="card skeleton-text">
                  <div class="card-header">Overall Stats</div>
                  <div class="card-content card-content-padding data-table">
                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                      lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                  </div>

                </div>


                <div class="card skeleton-text">
                    <div class="card-header">Recent Activity</div>
                    <div class="card-content card-content-padding data-table">
                        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi
                        lobortis et massa ac interdum. Cras consequat felis at consequat hendrerit.
                    </div>
  
                </div>
  
              </div>
  

              <% 
                if (channelViewModel.staticPagesViewModel.index?.length > 0) {
  
                  for (let staticPage of channelViewModel.staticPagesViewModel.index) {
               %>
  
                <div class="card static-page-card">   
                  <div class="card-content card-content-padding">
                    <%~ staticPage.contentHTML %>
                  </div>               
                </div>
  
              <%
                  }
                }                  
              %>
  
  


              <% if (channelViewModel?.channel.licenseHTML?.length > 13) { %>
  
                <div class="block-title block-title-small">License</div>
                <div class="card">
                  <div class="card-content card-content-padding license">
                    <%~ channelViewModel?.channel.licenseHTML %>
                  </div>
                </div>
  
              <% } %>


              <%~ include("footer", {baseURL: baseURL}) %>


            </div>

          </div>

        </div>

      </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>
    
    <script type="module" id="page-init-scripts">

      const init = (props, { $, $f7, $h, $on, $update }) => {
              
            let transactionWebService = globalThis.container.get("TransactionWebService")
            let itemWebService = globalThis.container.get("ItemWebService")

            let baseURI = globalThis.container.get("baseURI")

            let breadcrumbs
            let logo = JSON.parse(`<%~ JSON.stringify(logo ? logo : {})  %>`)

            const PER_PAGE = 35


            let transactionsViewModel 
            let salesReport
            let largestSales

            let loading = true



            let firstPageExploreItems 

            const link = (href) => {
              return baseURI + href
            }   



            const loadActivity = async () => {

              loading = true

              try  {

                transactionsViewModel = await transactionWebService.getRecentActivity()

                //Last updated won't be right because this only gets written when it actually changes.
                let latest = await transactionWebService.getLatest()
                transactionsViewModel.lastUpdated = latest.lastUpdated

                await $update()

                salesReport = await transactionWebService.getSalesReport()

                await $update()

                largestSales = await transactionWebService.getLargestSales(15)

              } catch(ex) { console.log(ex) }

              $('.hidden-on-load').removeClass('hidden-on-load')

              loading = false

              await $update()


            }



            $on('pageInit', async () => {

              await loadActivity()

              $('.hide-on-pageinit').hide()


              //Make links external
              let links = document.getElementById(`channel-show-description-<%= channelViewModel.channel._id %>`).getElementsByTagName('a')

              for (let link of links) {
                link.classList.add('external')
              }

              await $update()

            })


            $on('pageBeforeOut', async () => {
            })


            <%~ 
              include("_meta_tags_js", {
                title: channelViewModel.channel.title,
                url: 'index.html',
                imageUrl: coverImageLink,
                descriptionHTML: channelViewModel.channel.descriptionHTML,
                hostname: hostname,
                baseURL: baseURL,
                excerptHtml: it.baseViewModel.excerptHtml,
                he: it.baseViewModel.he
              }) 
            %>

            document.querySelector('title').innerHTML = "<%=channelViewModel.channel.title%>"

            $f7.preloader.hide()

            return $render;

          

      }


    </script>

    <%~ 
      include("_init", {
        hostname: hostname,
        baseURL: baseURL,
        routablePages: routablePages,
        base64Version: base64Version,
        channelId: channelId
      }) 
    %>



  </body>

</html>