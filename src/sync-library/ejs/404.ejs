<% 


    let logo = it.baseViewModel.logo


    const link = (href) => {
        return `${it.baseViewModel.baseURL + href}`
    }   


    const absoluteLink = (href) => {
      return `${it.baseViewModel.hostname + it.baseViewModel.baseURL + href}`
    }   
    
%>

<!DOCTYPE html>
<html lang="en">

  <head>

    <style>
      html {
        visibility: hidden;
        opacity: 0;
      }
    </style>


    <title>
      <%= it.title %>
    </title>


    <%~ it.baseViewModel.headEndContents %>
    

  </head>

  <body>

    <div id="app">

      <div class="view view-main">

        <!--pageContent-->
        <div class="page" data-name="home">

          <nav-bar
            library_url="<%=it.baseViewModel.libraryURL ? it.baseViewModel.libraryURL : ''%>"
            large_url="<%=it.baseViewModel.largeURL ? it.baseViewModel.largeURL : ''%>"
            title="<%= it.title %>"
            show_mint_page="false"
            show_activity_page="false"
            baseURI="${baseURI}"
            hostname="${hostname}"
          >
          </nav-bar>


          <div class="page-content">

            <div class="main-split">

              <div class="left">

                <div class="card">

                  <div class="card-content card-content-padding">
                    404 Page Not Found.
                  </div>

                </div>

              </div>

              <div class="right">

              </div>

              <div class="left">
                <%~ include("footer", {baseURL: it.baseViewModel.baseURL}) %>
              </div>

            </div>


          </div>

        </div>
        <!--/pageContent-->

      </div>

    </div>

    <%~ it.baseViewModel.bodyContents %>
    
    <script type="module" id="page-init-scripts">
      //pageInitScripts
      const init = (props, { $, $f7, $h, $on, $update }) => {
              
            let channelWebService = globalThis.container.get("ChannelWebService")
            let baseURI = globalThis.container.get("baseURI")
            let hostname = globalThis.container.get("hostname")

            let breadcrumbs

            const link = (href) => {
              return baseURI + href
            }   

   
            $on('pageInit', async () => {

              await channelWebService.loadChannel(
                undefined,
                '/',
                '<%= it.baseViewModel.hostname %>'
              )



            })

            $f7.preloader.hide()

            return $render

      }
      ///pageInitScripts

    </script>

    <%~ 
      include("_init", {
        hostname: it.baseViewModel.hostname,
        baseURL: it.baseViewModel.baseURL,
        libraryURL: it.baseViewModel.libraryURL,
        routablePages: it.baseViewModel.routablePages,
        base64Version: it.baseViewModel.base64Version
      }) 
    %>



  </body>

</html>